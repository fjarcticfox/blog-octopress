<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[逆水行舟]]></title>
  <link href="http://blog.longgen.me/atom.xml" rel="self"/>
  <link href="http://blog.longgen.me/"/>
  <updated>2014-10-13T12:39:17+08:00</updated>
  <id>http://blog.longgen.me/</id>
  <author>
    <name><![CDATA[Longgen]]></name>
    <email><![CDATA[fjarcticfox@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Apache Storm 详解]]></title>
    <link href="http://blog.longgen.me/blog/2014/10/09/apache-storm-xiang-jie/"/>
    <updated>2014-10-09T16:23:56+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/10/09/apache-storm-xiang-jie</id>
    <content type="html"><![CDATA[<p>Apache Storm 是一个免费、开源的分布式实时计算系统，相对于 Hadoop 适用于批处理而言，Storm 可以用于实时处理流式数据。</p>

<!-- more -->


<h2>发展历史</h2>

<ul>
<li>最早由做分析平台的创业公司 BackType 开发</li>
<li>2011 年 7 月，BackType 被 Twitter 收购，Storm 于同年 9 月 开源于 GitHub 上</li>
<li>2013 年 9 月，Storm 成为了 Apache 软件基金会的孵化项目</li>
<li>2014 年 9 月，Storm 孵化完毕，升级为 Apache 顶级项目</li>
</ul>


<h2>特点</h2>

<ul>
<li>使用 Clojure 编写，Clojure 是一个在 JVM 平台运行的动态函数式编程语言</li>
<li>支持多种编程语言</li>
</ul>


<h2>适用场景mark</h2>

<ul>
<li>实时分析</li>
<li>在线机器学习</li>
<li>持续计算</li>
<li>分布式远程调用</li>
<li>ETL 领域</li>
</ul>


<h2>参考资料</h2>

<ol>
<li><a href="http://www.infoq.com/cn/news/2014/09/storm-upgrade-apache-tlp">Storm 升级成为 Apache 顶级项目</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown 详解]]></title>
    <link href="http://blog.longgen.me/blog/2014/10/08/markdown-xiang-jie/"/>
    <updated>2014-10-08T14:48:56+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/10/08/markdown-xiang-jie</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>相关工具</h2>

<h3><a href="https://github.com/jgm/pandoc">Pandoc</a></h3>

<ul>
<li>OS X</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># 安装 pandoc，可以使用 pandoc 将 markdown 文件转为 docx，之后使用 office 软件转为 pdf 文件</span>
</span><span class='line'>brew install pandoc
</span></code></pre></td></tr></table></div></figure>


<h3><a href="http://www.princexml.com/">Prince</a></h3>

<ul>
<li>收费，价格非常高</li>
</ul>


<h3><a href="https://www.gitbook.io/">GitBook</a></h3>

<h3>Sublime Text 插件</h3>

<ul>
<li>SmartMarkdown：除了在写 Markdown 文件更方便外，更能和 Pandoc 配合，提供命令，方便生成文件。</li>
</ul>


<h2>在线编辑</h2>

<h3><a href="https://www.zybuluo.com/mdeditor">作业部落</a></h3>

<h3><a href="https://stackedit.io/">stackedit.io</a></h3>

<h2>参考资料</h2>

<ol>
<li><a href="http://www.ituring.com.cn/article/828">用 Markdown 来写自由书籍 &ndash; 开源技术的方案</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HTTP 超文本传输协议详解]]></title>
    <link href="http://blog.longgen.me/blog/2014/09/22/http-chao-wen-ben-chuan-shu-xie-yi-xiang-jie/"/>
    <updated>2014-09-22T14:13:22+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/09/22/http-chao-wen-ben-chuan-shu-xie-yi-xiang-jie</id>
    <content type="html"><![CDATA[<p>HTTP（HyperText Transfer Protocol，超文本传输协议）是互联网上应用最为广泛的一种网络协议。设计 HTTP 最初的目的是为了提供一种发布和接收 HTML 页面的方法。通过 HTTP 或者 HTTPS 协议请求的资源由统一资源标示符（Uniform Resource Identifiers，URI）来标识。</p>

<!-- more -->


<h2>版本</h2>

<h3>HTTP 0.9</h3>

<p>已过时。只接受 GET 一种请求办法，没有在通讯中制定版本号，且不支持请求头。由于该版本不支持 POST 方法，因此客户端无法向服务器传递太多信息。</p>

<h3>HTTP 1.0</h3>

<p>这是第一个在通讯中指定版本号的 HTTP 协议版本，至今仍被广泛采用，特别是在代理服务器中。</p>

<h3>HTTP 1.1</h3>

<p>持久连接被默认采用，并能很好地配合代理服务器工作。还支持以管道方式同时发送多个请求，以便降低线路负载，提高传输速度。HTTP/1.1 相较于 HTTP/1.0 协议的区别主要体现在：</p>

<ul>
<li>缓存处理</li>
<li>带宽优化及网络连接的使用</li>
<li>错误通知的管理</li>
<li>消息在网络中的发送</li>
<li>互联网地址的维护</li>
<li>安全性及完整性</li>
</ul>


<h3>HTTP 2</h3>

<h2>参考资料</h2>

<ol>
<li><a href="http://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE">超文本传输协议</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[常用加密算法详解]]></title>
    <link href="http://blog.longgen.me/blog/2014/09/09/chang-yong-jia-mi-suan-fa-xiang-jie/"/>
    <updated>2014-09-09T17:34:47+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/09/09/chang-yong-jia-mi-suan-fa-xiang-jie</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[图片格式详解]]></title>
    <link href="http://blog.longgen.me/blog/2014/09/08/tu-pian-ge-shi-xiang-jie/"/>
    <updated>2014-09-08T22:04:52+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/09/08/tu-pian-ge-shi-xiang-jie</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>JPEG</h2>

<p>JPEG 格式是一种大小与质量相平衡的压缩图片格式。通俗一点讲，就是：高的压缩比 = 低的图片质量 = 小的文件大小。反之，低的压缩比 = 高的图片质量 = 大的文件大小。由于 JPEG 文件无法保持 100％ 的原始图像的像素数据，所以它不被认为是一种无损图像格式。</p>

<h3>用途</h3>

<p>由于这种极其敏感的平衡特性，JPEG 非常适合被应用在那些允许轻微失真的像素色彩丰富的图片（照片）场合。反之，JPEG 格式图片并不适合做简单色彩（色调少）的图片，比如 LOGO，各种小图标（ICONS）。</p>

<h2>GIF</h2>

<p>GIF 格式，是为使图片能够应用在在线（online）应用程序上所特别开发的图片格式。Gif，有时也被成为“Giff”，是一种无损，8位图片格式。“无损”是指 100% 的保持原始图片的像素数据信息。专业名词“8位”是指，所能表现的颜色深度——一个 8 位图像仅最多只能支持 256 种不同颜色（一个多余 256 种颜色的图片若用gif图片保存会出现失真）。</p>

<h3>用途</h3>

<p>由于 8 位颜色深度的限制，Gif 不适合应用于各种色彩过于丰富的照片存储场合。但它却非常适合应用在以下场合：Logo、小图标（Icon）、用于布局的图片（例如某个布局角落，边框等等）、仅包含不超过 256 种色彩的简单，小型图片场合</p>

<h3>透明特性：</h3>

<p>GIF 支持基本的透明特性，这意味着你能够使图片的某些像素“不可见”。在其被放置到网页中时，我们就可以看到通过这些不可见区域看到此图片后面的背景颜色（图片）。此特性非常有用：如果你需要将某个 gif 图片的内容置于所有图片的上层，你可以将其设置为透明。</p>

<h3>压缩特性：</h3>

<p>GIF 格式采用 LZW 算法进行压缩，此算法是 Unisys 申请的一项专利。在很久很久之前，如果你想使用 GIF 格式，那么就意味着你需要向 Unisys 付费申请专利许可。不过值得高兴的是，此项专利技术已于2003年6月20日过期，我们现在可以免费的使用 GIF 了！</p>

<h3>隔行扫描：</h3>

<p>GIF 同时也支持隔行扫描。隔行扫描能够令图片在浏览器中更快的加载和显示。此特性对于那些慢网速的浏览者来说尤其实用。</p>

<h3>动画 GIF：</h3>

<p>一个动态的 GIF 文件，是由若干帧图片所联结而成的动态图片。在显示时，这些动态帧被反复的绘制读取出来从而形成了简单的动画效果。合理的运用 GIF 动画能够为网页增添动静结合的效果，而过度的使用则会使网页杂乱无章。</p>

<h2>PNG</h2>

<p>PNG，读“ping”，初始时被作为 GIF 的免费替代格式所开发，采用公共专利压缩算法。PNG 格式也是一种无损压缩，但与 GIF 格式不同的是，PNG 同时支持 8 位和 24 位的图像。</p>

<h3>8位PNG图像：</h3>

<p>一个 8 位 PNG 图片，支持透明背景且像素颜色不能超过 256 种。除了压缩算法不同之外，此 8 位 PNG 格式与 GIF 格式极其相似；</p>

<p>用途：8 位 PNG 图片的用途与 GIF 格式基本相同，Logo、小图标（Icon）、用于布局的图片（例如某个布局角落，边框等等）、仅包含不超过256种色彩的简单，小型图片场合</p>

<h3>24 位 PNG 图像：</h3>

<p>24 位 PNG，支持 160 万种不同的像素颜色且支持 Alpha 透明效果，这就意味着，无论透明度设置为多少，PNG 图片均能够与背景很好的融合在一起。</p>

<h3>对 PNG 的支持：</h3>

<p>由于 PNG 格式的广泛使用和开发者更加重视网页的 WEB 标准，不同浏览器对 PNG 的支持就显得相当重要了。不过，幸运的是，目前市场上主流的浏览器对 PNG 格式都有很好的支持，这包括：IE*, Firefox, Safari, Opera, and Konqueror。但不幸的是，IE6 及 IE6 以下的浏览器对 PNG 透明背景的支持并不好。不过我们仍可以通过其他方法来解决这个问题，详情请查看如何在 IE6 中正常显示透明 PNG。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQL 详解]]></title>
    <link href="http://blog.longgen.me/blog/2014/09/05/mysql-xiang-jie/"/>
    <updated>2014-09-05T10:16:53+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/09/05/mysql-xiang-jie</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>下载安装及配置</h2>

<h3>OS X 环境</h3>

<h3>Windows 环境</h3>

<p>Windows 下有可采用两种方式安装 MySQL 服务。</p>

<ul>
<li><p>ZIP Archive</p>

<ol>
<li> 下载 ZIP 压缩包，解压至对应目录下</li>
<li> 配置环境变量 MYSQL_HOME，以及增加 MySQL 的 bin 目录到 path 变量中</li>
</ol>
</li>
<li><p>MSI Installer</p>

<ol>
<li> 下载 MSI 安装包，按提示进行安装</li>
</ol>
</li>
</ul>


<h2>MySQL 常用命令</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># mysqld，数据库启动命令</span>
</span><span class='line'>mysqld
</span><span class='line'>
</span><span class='line'><span class="c"># mysql，数据库链接命令</span>
</span><span class='line'>mysql
</span><span class='line'>
</span><span class='line'><span class="c"># status，查看数据库状态</span>
</span><span class='line'>mysql&gt; status
</span><span class='line'>--------------
</span><span class='line'>mysql  Ver 14.14 Distrib 5.6.20, <span class="k">for </span>Win64 <span class="o">(</span>x86_64<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Connection id:          13
</span><span class='line'>Current database:
</span><span class='line'>Current user:           ODBC@localhost
</span><span class='line'>SSL:                    Not in use
</span><span class='line'>Using delimiter:        ;
</span><span class='line'>Server version:         5.6.20 MySQL Community Server <span class="o">(</span>GPL<span class="o">)</span>
</span><span class='line'>Protocol version:       10
</span><span class='line'>Connection:             localhost via TCP/IP
</span><span class='line'>Server characterset:    latin1
</span><span class='line'>Db     characterset:    latin1
</span><span class='line'>Client characterset:    gbk
</span><span class='line'>Conn.  characterset:    gbk
</span><span class='line'>TCP port:               3306
</span><span class='line'>Uptime:                 14 min 32 sec
</span><span class='line'>
</span><span class='line'>Threads: 5  Questions: 348  Slow queries: 0  Opens: 68  Flush tables: 1  Open tables: 61  Queries per second avg: 0.399
</span><span class='line'>--------------
</span><span class='line'>
</span><span class='line'><span class="c"># 查看数据库列表</span>
</span><span class='line'>mysql&gt; show databases;
</span><span class='line'>+--------------------+
</span><span class='line'>| Database           |
</span><span class='line'>+--------------------+
</span><span class='line'>| information_schema |
</span><span class='line'>| mysql              |
</span><span class='line'>| performance_schema |
</span><span class='line'>| <span class="nb">test</span>               |
</span><span class='line'>+--------------------+
</span><span class='line'>4 rows in <span class="nb">set</span> <span class="o">(</span>0.00 sec<span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 数据库切换（切换至 mysql 数据库）</span>
</span><span class='line'>mysql&gt; use mysql;
</span><span class='line'>
</span><span class='line'><span class="c"># 查看库中数据表列表</span>
</span><span class='line'>mysql&gt; show tables;
</span><span class='line'>
</span><span class='line'><span class="c"># 查看 mysql 数据库用户</span>
</span><span class='line'>mysql&gt; <span class="k">select</span> * from mysql.user;
</span><span class='line'>
</span><span class='line'><span class="c"># </span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[模板引擎资源]]></title>
    <link href="http://blog.longgen.me/blog/2014/09/03/mo-ban-yin-qing-zi-yuan/"/>
    <updated>2014-09-03T22:33:58+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/09/03/mo-ban-yin-qing-zi-yuan</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>Java 模板引擎</h2>

<ul>
<li><a href="http://zh.wikipedia.org/wiki/AngularJS">Rythm</a></li>
</ul>


<p>专为 Java 程序员设计的模板引擎</p>

<h2>参考资料</h2>

<ol>
<li><a href="http://zh.wikipedia.org/wiki/AngularJS">维基百科：AngularJS</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AngularJS 详解]]></title>
    <link href="http://blog.longgen.me/blog/2014/09/03/angularjs-xiang-jie/"/>
    <updated>2014-09-03T20:54:02+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/09/03/angularjs-xiang-jie</id>
    <content type="html"><![CDATA[<p>AngularJS 是一款开源 JavaScript 函数库，由 Google 维护，用来协助单一页面应用程序运行的。它的目标是通过 MVC 模式功能增强基于浏览器的应用，使开发和测试变得更加容易。</p>

<!-- more -->


<h2>AngularJS 理念</h2>

<ul>
<li>声明式编程用于构建用户界面以及编写软件构建，指令式编程用来表示业务逻辑</li>
<li>双向数据绑定来适应动态内容，双向的数据绑定允许模型和视图之间的自动同步</li>
</ul>


<h2>AngularJS 设计目标</h2>

<ul>
<li>将应用逻辑与对 DOM 的操作解耦，提高代码可测试性</li>
<li>将应用程序的测试与应用程序的编写放在同等重要的位置</li>
<li>应用程序的客户端与服务器端解耦，允许客户端和服务端的开发并行，并提高可复用性</li>
<li>指导开发者完成构建应用程序的整个历程：用户界面设计、业务逻辑编写、测试</li>
</ul>


<h2>AngularJS 特点</h2>

<ul>
<li>MIT 许可证</li>
<li>遵循软件工程的 MVC 模式，展现、数据和逻辑组件之间松耦合（依赖注入）</li>
<li>双向数据绑定</li>
</ul>


<h2>浏览器支持</h2>

<ul>
<li>AngularJS 1.2 继续支持 IE8，但不会再继续花时间维护；AngularJS 1.3 开始，将不再支持 IE8</li>
</ul>


<h2>相关资源</h2>

<ul>
<li><a href="http://angular-ui.github.io/">http://angular-ui.github.io/</a></li>
</ul>


<h2>参考资料</h2>

<ol>
<li><a href="http://zh.wikipedia.org/wiki/AngularJS">维基百科：AngularJS</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Docker 详解]]></title>
    <link href="http://blog.longgen.me/blog/2014/09/03/docker-xiang-jie/"/>
    <updated>2014-09-03T16:21:21+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/09/03/docker-xiang-jie</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>Docker 特点</h2>

<ul>
<li>轻量级</li>
<li>操作系统级的虚拟化技术</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[中小企业建站方案及相关资源]]></title>
    <link href="http://blog.longgen.me/blog/2014/08/31/zhong-xiao-qi-ye-jian-zhan-fang-an-ji-xiang-guan-zi-yuan/"/>
    <updated>2014-08-31T14:37:43+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/08/31/zhong-xiao-qi-ye-jian-zhan-fang-an-ji-xiang-guan-zi-yuan</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>域名注册</h2>

<ul>
<li>新网</li>
<li>万网</li>
<li>Godaddy</li>
</ul>


<h2>企业邮箱</h2>

<ul>
<li>Google Apps：可绑定 Gtalk 账号，国内屏蔽，无法使用</li>
<li>Windows Live Domain</li>
<li>腾讯 QQ 企业邮箱</li>
<li>网易免费企业邮箱</li>
</ul>


<h2>建站工具</h2>

<h3>第三方机构提供模板建站</h3>

<p>特点：简单易用，搭建快速，但无法定制开发，有各种限制</p>

<ul>
<li>淘宝</li>
<li>阿里巴巴</li>
<li>百度有啊</li>
<li>Google Sites</li>
<li>万网建站平台</li>
</ul>


<h3>自建平台</h3>

<p>特点：可以使用自己的域名，可定制开发，但需要建站知识丰富</p>

<ul>
<li>电子商务管理系统</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>osCommerce
</span><span class='line'>    * 免费开源
</span><span class='line'>    * 在线商店解决方案
</span><span class='line'>    * 有没落的趋势
</span><span class='line'>Zen Cart
</span><span class='line'>    * 免费开源
</span><span class='line'>    * 在线商店解决方案
</span><span class='line'>    * 支持多语言、多货币
</span><span class='line'>ECShop
</span><span class='line'>    * 开源
</span><span class='line'>    * 在线商店解决方案
</span><span class='line'>    * 插件和二次开发有一定优势
</span><span class='line'>    * 与 Discuz 系列整合较好
</span><span class='line'>    * 已被 ShopEx 收购
</span><span class='line'>ShopEx
</span><span class='line'>    * 国内最早网店软件提供商之一
</span><span class='line'>    * 功能全面，收购了 ECShop
</span><span class='line'>HiShop
</span><span class='line'>PHPB2B
</span><span class='line'>Magento
</span><span class='line'>OpenChart</span></code></pre></td></tr></table></div></figure>


<ul>
<li>CMS（内容管理系统）</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>SupeSite
</span><span class='line'>DedeCMS
</span><span class='line'>KingCMS
</span><span class='line'>Drupal
</span><span class='line'>    * 开源
</span><span class='line'>    * PHP
</span><span class='line'>    * 支持多语言
</span><span class='line'>    * 使用广泛，安全性好
</span><span class='line'>    * 强大的定制能力和灵活性
</span><span class='line'>    * 扩展能力强大，有丰富的第三方扩展支持
</span><span class='line'>    * 站内搜索系统能对站内所有内容进行索引和搜索
</span><span class='line'>    * 提供完善的站点管理和分析工具
</span><span class='line'>    * 功能丰富，包括 Blog、协同协作平台、论坛、电子报、相册、文件的上传与下载、全文搜索、多角色权限管理、模块化、主题引擎、多语言支持等
</span><span class='line'>WordPress
</span><span class='line'>    * 免费开源
</span><span class='line'>    * PHP
</span><span class='line'>    * 功能强大，可用于博客搭建、信息发布平台搭建
</span><span class='line'>phpBB
</span><span class='line'>    * 开源
</span><span class='line'>    * 可以在数分钟内建立一个论坛，功能可配置
</span><span class='line'>Pligg
</span><span class='line'>    * 类似 Digg 的 Web 2.0 CMS 系统
</span><span class='line'>    * PHP 开发
</span><span class='line'>Gallery
</span><span class='line'>    * 免费开源
</span><span class='line'>    * 图库相册软件
</span><span class='line'>    * 基于 PHP、MySQL、PostgreSQL等
</span><span class='line'>    * 功能强大
</span><span class='line'>    * 扩展丰富</span></code></pre></td></tr></table></div></figure>


<ul>
<li>财务管理</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Intuit
</span><span class='line'>    * 一条龙企业建站服务
</span><span class='line'>    * 适合港台和外企使用</span></code></pre></td></tr></table></div></figure>


<ul>
<li>CRM（客户关系管理）</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>SalesForce
</span><span class='line'>    * Saas 类型的客户关系管理
</span><span class='line'>    * 主要功能模块包括销售、Call Center（呼叫中心）、市场营销、社区等
</span><span class='line'>    * 支持 App 应用
</span><span class='line'>    * 可以安装第三方为 SalesForce 开发的应用程序</span></code></pre></td></tr></table></div></figure>


<ul>
<li>广告管理</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>OpenX（原名 phpAdsNew）
</span><span class='line'>    * PHP 开发
</span><span class='line'>    * 广告管理与跟踪系统，能够管理每个广告主拥有的多种任何尺寸横幅广告</span></code></pre></td></tr></table></div></figure>


<ul>
<li>微博搭建</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>StatusNet（原名 Laconia）
</span><span class='line'>    * 免费开源，授权协议 AGPL
</span><span class='line'>    * 微型博客系统，类似 Twitter</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Wiki</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>MediaWiki
</span><span class='line'>    * 免费开源
</span><span class='line'>    * PHP
</span><span class='line'>    * 维基百科使用 MediaWiki 引擎</span></code></pre></td></tr></table></div></figure>


<ul>
<li>RSS</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Gregarius
</span><span class='line'>    * 免费开源
</span><span class='line'>    * RSS 聚合程序
</span><span class='line'>    * 不错的用户体验，易于操作和管理，可当成 RSS 阅读器使用</span></code></pre></td></tr></table></div></figure>


<ul>
<li>应用托管平台</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Google App Engine
</span><span class='line'>    * 只能使用 App Engine 提供的 API
</span><span class='line'>    * 已被国内屏蔽
</span><span class='line'>Sina App Engine
</span><span class='line'>    * 数据库访问、文件操作、网页抓取等都需要使用新浪提供的 API
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>虚拟主机管理系统</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>VHCS
</span><span class='line'>    * 支持中文
</span><span class='line'>    * 支持服务管理员、代理商、最终客户三级管理
</span><span class='line'>    * 具有用户管理、群发邮件、IP 地址管理、流量管理、服务状态查询、统计分析等功能
</span><span class='line'>    * 内置客户服务系统
</span><span class='line'>ISPConfig
</span><span class='line'>    * 三级管理
</span><span class='line'>    * 反垃圾邮件
</span><span class='line'>    * IPTable
</span><span class='line'>    * 防火墙管理
</span><span class='line'>    * 邮件扫描
</span><span class='line'>    * Shell
</span><span class='line'>    * 服务管理
</span><span class='line'>    * 回收站
</span><span class='line'>SysCP
</span><span class='line'>    * 三级管理
</span><span class='line'>    * 内置客户服务
</span><span class='line'>    * 其他功能比较少
</span><span class='line'>DTC
</span><span class='line'>    * 支持中文
</span><span class='line'>    * 主要用 PHP（或 perl），用 SH 控制 Apache 重新启动
</span><span class='line'>ZPanel
</span><span class='line'>    * 支持Windows 下的 IIS 和 Apache
</span><span class='line'>ISPMan
</span><span class='line'>    * 适合大型 IDC 使用
</span><span class='line'>    * 分布式 ISP 实现方案
</span><span class='line'>    * 实施该系统较为复杂
</span><span class='line'>    * 功能较为强大，用户结构完善，有管理员、ISP 客户、销售商、ISP 管理员等
</span><span class='line'>GNU Hosting Helper
</span><span class='line'>    * 适合大型 IDC 使用
</span><span class='line'>    * 支持分布式管理，多台服务器只需要一个管理员控制面板和一个客户控制面板
</span><span class='line'>    * 使用 Perl 编写
</span><span class='line'>    * 功能非常强大，具有服务器、防火墙、邮件、域名、服务监控、客户支持等功能</span></code></pre></td></tr></table></div></figure>


<h2>网络营销推广</h2>

<h3>搜索引擎</h3>

<h3>网站联盟</h3>

<h3>电子邮件</h3>

<h3>免费产品</h3>

<h3>社会化营销</h3>

<ul>
<li>博客营销</li>
<li>微博营销</li>
<li>SNS营销</li>
</ul>


<h3>定投广告</h3>

<h2>参考资料</h2>

<ol>
<li><a href="http://weibo.com/p/1001603748826971262738">中小企业建站方案和资源</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[企业 Spring 最佳实践]]></title>
    <link href="http://blog.longgen.me/blog/2014/08/28/qi-ye-spring-zui-jia-shi-jian/"/>
    <updated>2014-08-28T22:49:22+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/08/28/qi-ye-spring-zui-jia-shi-jian</id>
    <content type="html"><![CDATA[<h2>项目配置</h2>

<h2>参考资料</h2>

<ol>
<li><a href="http://gordondickens.com/wordpress/2012/07/03/enterprise-spring-best-practices-part-1-project-config/">Enterprise Spring Best Practices – Part 1 – Project Config</a></li>
<li><a href="http://gordondickens.com/wordpress/2012/07/08/enterprise-spring-best-practices-part-2-application-architecture/">Enterprise Spring Best Practices – Part 2 – Application Architecture</a></li>
<li><a href="http://gordondickens.com/wordpress/2012/07/30/enterprise-spring-framework-best-practices-part-3-xml-config/">Enterprise Spring Framework Best Practices – Part 3 – XML Config</a></li>
<li><a href="https://github.com/gordonad/enterprise-spring-best-practices">Enterprise Spring Best Practices &ndash; Part 4 &ndash; Source Code</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sonar 代码质量管理平台]]></title>
    <link href="http://blog.longgen.me/blog/2014/08/05/sonar-dai-ma-zhi-liang-guan-li-ping-tai/"/>
    <updated>2014-08-05T03:28:52+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/08/05/sonar-dai-ma-zhi-liang-guan-li-ping-tai</id>
    <content type="html"><![CDATA[<p>Sonar (SonarQube)是一个开源平台，用于管理源代码的质量。Sonar 不只是一个质量数据报告工具，更是代码质量管理平台。支持的语言包括：Java、PHP、C#、C、Cobol、PL/SQL、Flex 等。</p>

<!-- more -->


<p>主要特点：</p>

<ul>
<li>代码覆盖：通过单元测试，将会显示哪行代码被选中</li>
<li>改善编码规则</li>
<li>搜寻编码规则：按照名字，插件，激活级别和类别进行查询</li>
<li>项目搜寻：按照项目的名字进行查询</li>
<li>对比数据：比较同一张表中的任何测量的趋势</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Homebrew 命令详解]]></title>
    <link href="http://blog.longgen.me/blog/2014/07/20/homebrew-ming-ling-xiang-jie/"/>
    <updated>2014-07-20T16:31:49+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/07/20/homebrew-ming-ling-xiang-jie</id>
    <content type="html"><![CDATA[<p>Homebrew 是 OS X 上的 package 管理工具，用于添加 OS X 中缺失的 package。</p>

<!-- more -->


<h2>获取 Homebrew</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># 打开终端窗口, 执行以下脚本。</span>
</span><span class='line'><span class="nv">$ </span>ruby -e <span class="s2">&quot;$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 脚本会解释它的作用，然后在您的确认下执行安装。高级安装选项请看 [这里][2]（需要10.5）。</span>
</span></code></pre></td></tr></table></div></figure>


<h2>使用命令</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># Homebrew installs [the stuff you need][1] that Apple didn’t.</span>
</span><span class='line'><span class="nv">$ </span>brew install wget
</span></code></pre></td></tr></table></div></figure>


<h2>安装目录</h2>

<p>Homebrew 会将 packages 安装到独立目录，然后 symlinks 其中文件到目录 <code>/usr/local</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /usr/local
</span><span class='line'><span class="nv">$ </span>find Cellar
</span><span class='line'>Cellar/wget/1.15
</span><span class='line'>Cellar/wget/1.15/bin/wget
</span><span class='line'>Cellar/wget/1.15/share/man/man1/wget.1
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>ls -l bin
</span><span class='line'>bin/wget -&gt; ../Cellar/wget/1.15/bin/wget
</span></code></pre></td></tr></table></div></figure>


<p>Homebrew 的所有文件均会被安装到预定义目录下，另外，你可以将 Homebrew 的安装目录设置在你喜欢的任何地方。</p>

<h2>创建自己的 Homebrew 上的 packages</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>brew create http://foo.com/bar-1.0.tgz
</span><span class='line'>Created /usr/local/Library/Formula/bar.rb
</span></code></pre></td></tr></table></div></figure>


<h2>维护自己的 packages</h2>

<p>Homebrew 基于 git、ruby，所以依据掌握的知识，你可以便捷的撤回你的修改或者合并上游的更新。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># 打开编辑</span>
</span><span class='line'><span class="nv">$ </span>brew edit wget <span class="c"># opens in $EDITOR!</span>
</span></code></pre></td></tr></table></div></figure>


<p>Homebrew 的 formulae 都是简单的 Ruby 脚本。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>require <span class="s2">&quot;formula&quot;</span>
</span><span class='line'>
</span><span class='line'>class Wget &lt; Formula
</span><span class='line'>  homepage <span class="s2">&quot;http://www.gnu.org/software/wget/&quot;</span>
</span><span class='line'>  url <span class="s2">&quot;http://ftp.gnu.org/gnu/wget/wget-1.15.tar.gz&quot;</span>
</span><span class='line'>  sha1 <span class="s2">&quot;f3c925f19dfe5ed386daae4f339175c108c50574&quot;</span>
</span><span class='line'>
</span><span class='line'>  def install
</span><span class='line'>    system <span class="s2">&quot;./configure&quot;</span>, <span class="s2">&quot;--prefix=#{prefix}&quot;</span>
</span><span class='line'>    system <span class="s2">&quot;make&quot;</span>, <span class="s2">&quot;install&quot;</span>
</span><span class='line'>  end
</span><span class='line'>end
</span></code></pre></td></tr></table></div></figure>


<p>Homebrew 使 OS X 更完美。使用 gem 来安装 gems、用 brew 来搞定那些依赖包。</p>

<h2>参考资料</h2>

<ol>
<li><a href="http://brew.sh/index.html">Homebrew &mdash; The missing package manager for OS X</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Npm 命令详解]]></title>
    <link href="http://blog.longgen.me/blog/2014/07/20/npm-ming-ling-xiang-jie/"/>
    <updated>2014-07-20T15:57:15+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/07/20/npm-ming-ling-xiang-jie</id>
    <content type="html"><![CDATA[<p>NPM（Node Packaged Modules），是一个用于管理基于 node.js 编写的 package 的命令行工具。类似于 gem 与 ruby 的关系。</p>

<!-- more -->


<h2>npm 获取配置信息的 6 种方式，优先级由高到低。</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># 命令行参数，将 proxy</span>
</span></code></pre></td></tr></table></div></figure>


<h2>npm 常用命令</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># 查看用户本身配置文件路径</span>
</span><span class='line'>npm config get userconfig   <span class="c"># defaults to ~/.npmrc</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 查看全局用户配置文件路径</span>
</span><span class='line'>npm config get globalconfig <span class="c"># defaults to /usr/local/etc/npmrc</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 内置配置文件，在 npm 安装目录下的 npmrc 文件夹中</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 设置 npm 配置</span>
</span><span class='line'>npm config <span class="nb">set</span> &lt;key&gt; &lt;value&gt; <span class="o">[</span>--global<span class="o">]</span>
</span><span class='line'>npm config get &lt;key&gt;
</span><span class='line'>npm config delete &lt;key&gt;
</span><span class='line'>npm config list
</span><span class='line'>npm config edit
</span><span class='line'>npm get &lt;key&gt;
</span><span class='line'>npm <span class="nb">set</span> &lt;key&gt; &lt;value&gt; <span class="o">[</span>--global<span class="o">]</span>
</span><span class='line'><span class="c"># 在设置配置属性时属性值默认是被存储于用户配置文件中，如果加上 --global，则被存储在全局配置文件中。</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 查看 npm 的所有配置属性（包括默认配置）</span>
</span><span class='line'>npm config ls -l
</span><span class='line'>
</span><span class='line'><span class="c"># 查看 npm 的各种配置的含义</span>
</span><span class='line'>npm <span class="nb">help </span>config
</span><span class='line'>
</span><span class='line'><span class="c"># 为 npm 设置代理</span>
</span><span class='line'>npm config <span class="nb">set </span>proxy http://server:port
</span><span class='line'>npm config <span class="nb">set </span>https-proxy http://server:port
</span><span class='line'><span class="c"># 如果代理需要认证的话可以这样来设置</span>
</span><span class='line'>npm config <span class="nb">set </span>proxy http://username:password@server:port
</span><span class='line'>npm config <span class="nb">set </span>https-proxy http://username:pawword@server:port
</span><span class='line'><span class="c"># 如果代理不支持 https 的话需要修改 npm 存放 package 的网站地址</span>
</span><span class='line'>npm config <span class="nb">set </span>registry <span class="s2">&quot;http://registry.npmjs.org/&quot;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># 卸载</span>
</span><span class='line'>sudo npm uninstall npm -g
</span><span class='line'><span class="c"># 或者，如果上面的命令失败了</span>
</span><span class='line'>sudo make uninstall
</span></code></pre></td></tr></table></div></figure>


<h2>注意事项</h2>

<p>~/.npm 为 cache 目录，用于避免重复下载相同的 package。若不需要，可以执行以下命令清空</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>npm cache clean
</span></code></pre></td></tr></table></div></figure>


<h2>参考资料</h2>

<ol>
<li><a href="https://github.com/npm/npm">npm &mdash; node package manager</a></li>
<li><a href="https://www.npmjs.org/doc/">npm-index</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gradle 安装配置及使用]]></title>
    <link href="http://blog.longgen.me/blog/2014/07/17/gradle-an-zhuang-pei-zhi-ji-shi-yong/"/>
    <updated>2014-07-17T14:37:42+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/07/17/gradle-an-zhuang-pei-zhi-ji-shi-yong</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>简介</h2>

<p>Gradle 版本：2.0，支持新特性如下：</p>

<ul>
<li>更新至 Groovy 2.3.2</li>
<li>支持 Java 8</li>
<li>解决 source 和 javadoc artifacts 的新 API</li>
<li>可以通过 component metadata rules 使用 Ivy extra info</li>
<li>可以通过 plugins.withId() 来整合插件</li>
<li>支持 Ivy 以及 Maven repositories 使用 SFTP scheme</li>
<li>Apache Maven POM profile 现在可以基于系统本身属性信息使用</li>
<li>良好的细粒度控制 native 工具的参数传递</li>
<li>简化了跨平台编译及个性化设置（GCC based toolchains）</li>
<li>为 Ivy repositories 提供新的 &lsquo;ivy&rsquo; layout 支持</li>
<li>代码质量工具的默认版本更新，以便与当前版本 Gradle 相匹配

<blockquote><ul>
<li>Checkstyle：5.7</li>
<li>CodeNarc：0.21</li>
<li>PMD：5.1.1(note that some rulesets were renamed in PMD 5, e.g. basic &ndash;> java-basic)</li>
<li>Findbugs：2.0.3</li>
<li>JaCoCo：0.7.1.201405082137</li>
</ul>
</blockquote></li>
<li>Tooling API 改善</li>
</ul>


<p>更详细的信息，请参考 <a href="http://www.gradle.org/docs/">http://www.gradle.org/docs/</a> 对应版本的 Release Notes。</p>

<h2>与 Eclipse Luna 整合</h2>

<p>eclipse 版本：4.4.0（Luna）</p>

<h2>环境配置</h2>

<ul>
<li>GRADLE_HOME：Gradle 安装目录</li>
<li>path：加入 Gradle bin 目录</li>
<li>GRADLE_OPTS：Gradle 参数选项</li>
<li>JAVA_OPTS：Java 参数选项</li>
</ul>


<h2>eclipse 插件安装</h2>

<p>Eclipse 插件能自动生成 Eclipse IDE 相关的文件，以便该项目能导入 Eclipse 中。自动生成的文件包括 external dependencies（包含 associated source 以及 javadoc files），project dependencies 等。</p>

<h2>参考资料</h2>

<ol>
<li><a href="http://www.gradle.org/">Gradle 主页</a></li>
<li><a href="http://www.gradle.org/downloads">Gradle 下载页</a></li>
<li><a href="http://www.eclipse.org/downloads/">Eclipse 下载页</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Icon Fonts 详解]]></title>
    <link href="http://blog.longgen.me/blog/2014/07/14/icon-fonts-xiang-jie/"/>
    <updated>2014-07-14T21:48:08+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/07/14/icon-fonts-xiang-jie</id>
    <content type="html"><![CDATA[<p>像素完美（Pixel Perfection）、分辨率无关（Resolution Independent）和多平台体验一致性是设计师们的追求。 可访问性（Accessability）、加载性能和重构灵活性是前端工程师们关心的主题。</p>

<!-- more -->


<p>当下互联网设备越来越多，显示分辨率各种各样，为 Web 创建者们带来越来越多的难题。</p>

<p>1）需要为高PPI（aka Retina）显示设备准备@1.5x、@2x、@3x的图片素材。</p>

<p>2）需要针对不同显示屏分辨率来调整优化排版。</p>

<p>3）需要考虑多个分辨率版本的图片的加载性能问题。</p>

<p>4）设备版本碎片化（Version Segmentation）带来的语义和可访问性的问题。</p>

<p>……</p>

<h2>响应式设计</h2>

<p>响应式设计（Responsive Design）作为解决以上问题的方案，已经发展了很多年。其核心是：针对不同的设备和应用场景，做出合理性的适应。狭义地看，就是 Web page 在不同分辨率下借助 media qurey 来调整页面布局和内容显示，三个关键词是：Fluid grids，Flexible images，Media queries。</p>

<p>其中 Flexible images 是最为棘手的地方。因为前面提到，现在的设备多样化，不同分辨率和不同 PPI 给图片自适应带来了空前复杂度。目前还没有一套完美的解决方案来应对，W3C 那边还在拟定 <a href="http://www.w3.org/community/respimg/">Responsive Images</a> 和 <a href="http://www.w3.org/TR/2013/WD-html-picture-element-20130226/">Picture Element</a> 的相关标准。但在这之前你需要采取多管齐下的方式，针对媒体元素不同的使用场景，制定不同的自适应策略。目前主要有三种主流方式：</p>

<p>1）max-width: 100% 来自适应容器：同一张图片，在不同容器里，自动适应到容器的大小。存在的问题是，大尺寸图片在小尺寸屏幕下的带宽浪费和加载速度慢。</p>

<p>2）多版本图片更换：针对写在 CSS 里的 background-image，可以借助 media query 来适应显示 @1x 或 @2x 的版本。针对 HTML 里的图片可以利用 Piturefill.js 来做自适应。</p>

<p>3）使用矢量化图形，包括：icon fonts，SVG。</p>

<h2>什么是 icon fonts</h2>

<p>利用字体工具把我们平时 Web 上用的图形图标（icons）转换成 web fonts，就成了 icon fonts，它可以借助 CSS 的 @font-face 嵌入到网页里，用以显示 icons。因为字体是矢量化图形，它天生具有<code>分辨率无关</code>的特性，在任何分辨率和 PPI 下面，都可以做到完美缩放，不会像传统位图，如：png，jpeg，放大后有锯齿或模糊现象。</p>

<h2>为什么要用 icon fonts</h2>

<ul>
<li>icon fonts 优点</li>
</ul>


<p>1）分辨率无关。</p>

<p>2）文件小：相比图片几十几百KB的容量，icon fonts 几乎是羽翼级轻量。</p>

<p>3）加载性能好：因为图标都被打包进一套字体内，http request 减少。这如同我们常用的 css sprites 技术。</p>

<p>4）支持 CSS 样式：和普通字体一样，你可以利用 CSS 来定义大小、颜色、阴影、hover 状态、透明度、渐变等等。</p>

<p>5）兼容性好：web fonts 起源很早，别说主流浏览器，连 IE6/7 都能良好支持。除了一些老的移动端浏览器，如 Android 2.1 以下的初代浏览器，Opera mini 这类自限型浏览器。</p>

<ul>
<li>icon fonts 缺点</li>
</ul>


<p>1）样式单一，无法针对不同分辨率来调整 icon 的细节，比如降低大尺寸 icon 的线条粗细。</p>

<p>2）颜色单一，CSS 无法方便的去定义彩色的 icon，倒是有通过叠加组合的方式来达到彩色图标的目的。</p>

<p>3）移动端浏览器兼容性还不够完善，像 Opera mini、Windows phone 7.0-7.8 都不能正常显示 icon fonts。</p>

<p>4）有少量的移动设备有可能会和 icon fonts 的字符编码冲突，导致 icon 显示不正常。</p>

<ul>
<li>icon fonts 适用场景</li>
</ul>


<p>1）你的网站是扁平化或简约风格，图标样式单一，颜色为纯色。</p>

<p>2）你的目标用户使用桌面浏览器为主，或者</p>

<p>3）你愿意为非兼容设备做兼容 hack。</p>

<h2>如何制作 icon fonts</h2>

<ul>
<li>利用字体工具手动制作</li>
</ul>


<p>在 icon fonts 自动生成器没有诞生之初，大家只能依靠字体编辑软件来完成 icon fonts 的制作，简单介绍一下手动制作的流程。</p>

<p>1）在 illustrator 或 Sketch 这类矢量图形软件里创建你的 icon。</p>

<p>2）然后把 icon 一个一个导入到字体编辑工具，转换成 glyphs 进行编辑，设置对应的 unicode 编码。常用字体工具有：<a href="http://www.glyphsapp.com/">Glyphs</a>，<a href="http://fontforge.org/">FontForge</a>，<a href="http://www.high-logic.com/font-editor/fontcreator.html">FontCreator</a>。</p>

<p>3）完成glyphs 编辑后，从字体工具导出 OTF 字体文件，然后利用 <a href="http://www.fontsquirrel.com/tools/webfont-generator">Font Squirrel</a> 生成器来生成 web fonts 支持的格式。</p>

<ul>
<li>利用在线工具自动生成</li>
</ul>


<p>利用在线工具生成 icon fonts，比如：阿里巴巴提供的免费在线工具 <a href="http://www.iconfont.cn/">iconfont.cn</a></p>

<p>1）参照 iconfont.cn 提供的图标制作模版，在 Illustrator 画布的 16x16 网格内，参考基线、上升部、下降部来调整图标大小和位置。</p>

<p><img src="http://blog.longgen.me/images/blog/icon_fonts_01.jpg" alt="icon_fonts_01" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>调整矢量图标需要注意：
</span><span class='line'>1. 图形需要闭合，不要用 stroke，否则会显示不出来。
</span><span class='line'>2. 图形合并并扩展。
</span><span class='line'>3. 用单色。
</span><span class='line'>4. 在 16x16 画布中进行排版，这样制作好的 icon fonts 16px 大小的时候和其它字体保持一致。
</span></code></pre></td></tr></table></div></figure>


<p>2）然后从 Illustrator 保存为 SVG 文件，使用默认的 SVG 设置即可。</p>

<p><img src="http://blog.longgen.me/images/blog/icon_fonts_02.jpg" alt="icon_fonts_02" /></p>

<p>3）你可以拖动一个或多个 SVG 图标到 iconfont.cn 的上传表单，完成上传后会提示设置名称和 tag，点击<code>完成上传</code>开始生成 icon fonts。生成完成后，你可以点击要下载的图标加入购物车，然后<code>下载至本地</code>。</p>

<p><img src="http://blog.longgen.me/images/blog/icon_fonts_03.png" alt="icon_fonts_03" /></p>

<p>4）解压刚下载的文件包，除了 EOT、SVG、TTF、WOFF 四种 web fonts 字体外，还有个 demo.html 展示所有 icons 及其对应的字体编码。之所以有 4 种字体格式，是考虑到不同浏览器不同平台对字体格式的支持不一样，具体看下面 CSS 里的注解。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="c">/*复制 4 个字体文件到 assets 或 fonts 目录下，然后在 CSS 文件加入 @font-face 声明(注意更改字体所在的文件路径)。*/</span>
</span><span class='line'>
</span><span class='line'><span class="k">@font-face</span> <span class="p">{</span><span class="nt">font-family</span><span class="o">:</span> <span class="s1">&#39;iconfont&#39;</span><span class="o">;</span>
</span><span class='line'>    <span class="nt">src</span><span class="o">:</span> <span class="nt">url</span><span class="o">(</span><span class="s1">&#39;iconfont.eot&#39;</span><span class="o">);</span> <span class="c">/* IE9*/</span>
</span><span class='line'>    <span class="nt">src</span><span class="o">:</span> <span class="nt">url</span><span class="o">(</span><span class="s1">&#39;iconfont.eot?#iefix&#39;</span><span class="o">)</span> <span class="nt">format</span><span class="o">(</span><span class="s1">&#39;embedded-opentype&#39;</span><span class="o">),</span> <span class="c">/* IE6-IE8 */</span>
</span><span class='line'>    <span class="nt">url</span><span class="o">(</span><span class="s1">&#39;iconfont.woff&#39;</span><span class="o">)</span> <span class="nt">format</span><span class="o">(</span><span class="s1">&#39;woff&#39;</span><span class="o">),</span> <span class="c">/* chrome、firefox */</span>
</span><span class='line'>    <span class="nt">url</span><span class="o">(</span><span class="s1">&#39;iconfont.ttf&#39;</span><span class="o">)</span> <span class="nt">format</span><span class="o">(</span><span class="s1">&#39;truetype&#39;</span><span class="o">),</span> <span class="c">/* chrome、firefox、opera、Safari, Android, iOS 4.2+*/</span>
</span><span class='line'>    <span class="nt">url</span><span class="o">(</span><span class="s1">&#39;iconfont.svg#uxiconfont&#39;</span><span class="o">)</span> <span class="nt">format</span><span class="o">(</span><span class="s1">&#39;svg&#39;</span><span class="o">);</span> <span class="c">/* iOS 4.1- */</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c">/*再定义一个 icon-* 通配我们所有图标的共有 CSS 样式*/</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span><span class="nt">class</span><span class="o">^=</span><span class="s2">&quot;icon-&quot;</span><span class="o">],</span> <span class="o">[</span><span class="nt">class</span><span class="o">*=</span><span class="s2">&quot; icon-&quot;</span><span class="o">]</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">display</span><span class="o">:</span> <span class="k">inline</span><span class="o">-</span><span class="k">block</span><span class="p">;</span>
</span><span class='line'>  <span class="k">speak</span><span class="o">:</span> <span class="k">none</span>
</span><span class='line'>  <span class="k">font-family</span><span class="o">:</span> <span class="s2">&quot;iconfont&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="k">font-size</span><span class="o">:</span> <span class="m">16px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">line-height</span><span class="o">:</span> <span class="m">1</span><span class="p">;</span>
</span><span class='line'>  <span class="k">font-style</span><span class="o">:</span> <span class="k">normal</span><span class="p">;</span>
</span><span class='line'>  <span class="o">-</span><span class="n">webkit</span><span class="o">-</span><span class="k">font</span><span class="o">-</span><span class="n">smoothing</span><span class="o">:</span> <span class="n">antialiased</span><span class="p">;</span>
</span><span class='line'>  <span class="o">-</span><span class="n">moz</span><span class="o">-</span><span class="n">osx</span><span class="o">-</span><span class="k">font</span><span class="o">-</span><span class="n">smoothing</span><span class="o">:</span> <span class="n">grayscale</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c">/*最后是利用 :before 来注入每个 icon 对应的字体编码*/</span>
</span><span class='line'>
</span><span class='line'><span class="nc">.icon-bell</span><span class="nd">:before</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">content</span><span class="o">:</span> <span class="s2">&quot;\003432&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nc">.icon-search</span><span class="nd">:before</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">content</span><span class="o">:</span> <span class="s2">&quot;\003433&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="c">&lt;!--现在你可以这样显示一个铃铛图标--&gt;</span>
</span><span class='line'><span class="nt">&lt;i</span> <span class="na">class=</span><span class="s">&quot;icon-bell&quot;</span><span class="nt">&gt;&lt;/i&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>icon fonts 移动端应用</h2>

<p>icon fonts 在移动端的兼容性稍微差一点：</p>

<p>1）浏览器根本不支持：举例 Opera mini，在移动设备和带宽比较落后的地方，用户量还是很大的，如果你的网站访问数据里这类浏览器流量不可忽视，那么你就需要额外处理 icon fonts 的向下兼容，比如 js 嗅探后用 CSS spirtes 替代。各平台 icon fonts 的兼容情况，参见这张网友测试汇集的<a href="https://docs.google.com/spreadsheet/ccc?key=0Ag5_yGvxpINRdHFYeUJPNnZMWUZKR2ItMEpRTXZPdUE#gid=0">表格</a>。</p>

<p>2）unicode 冲突问题：一般情况下，icon fonts 生成器会使用 PUA（<a href="http://en.wikipedia.org/wiki/Private_Use_Areas">Private Unicode Area</a>）这个安全区域的字符编码（code point）。PUA 是专门预留<code>私用</code>的 unicode 区间, 一般会用 U+E000..U+F8FF 这个 <a href="http://en.wikipedia.org/wiki/Plane_(Unicode)#Basic_Multilingual_Plane">BMP</a> 区间里预留的 PUA code point。比如： 这个 Apple 平台特有的字符，就是用 U+F8FF 这个 code point 来对应的，在其它平台就看不到那个字符。</p>

<p>阿里巴巴的 iconfont.cn 没有遵循这个最佳实践，用得的是 CJK 编码区间（U+3432），所以当你浏览器加载字体出问题时，会还原成一些奇怪的中文文字，这对读屏软件也非常不友好。好在它的管理后台，可以手动的编辑这个 code point。</p>

<p>另外，如果发现有 icon 显示不出来，或被替换成了其它字符，那么更换一下 code point 可能可以快速的解决。</p>

<p>关于如何应用 icon fonts 到原生的 iOS/Android App 中去，iconfont.cn 上面有<a href="http://www.iconfont.cn/help/iconuse.html">具体的教程</a>，可以查看一下。</p>

<h2>其它 icon fonts 工具</h2>

<p>类似 iconfont.cn 这类在线生成工具有很多，就不再一一详细介绍，最著名的还有：<a href="http://icomoon.io/">icomoon</a>，<a href="http://fontello.com/">fontfello</a>。</p>

<p>这些工具基本功能类似，但有少许功能差别，像 icomoon 还支持字体的连字（Ligatures）功能。通过设置 <code>bell</code>为铃铛图标的连字，当你在文本中写 <code>bell</code>时自动转换成铃铛图标。像 fontfello 是开源软件，意味着更加灵活和定制的可能性。</p>

<p>如果你对使用英文软件完全没有障碍，我强烈建议使用 icomoon，体验和功能都非常强大。当然作为国内的同行，还是要支持一下 iconfont.cn。</p>

<p>icon fonts 作为 web fonts 的一种特殊应用，很好的解决了响应式设计中图形无损自适应的难题。设计师不再需要维护不同大小、不同颜色的多版本素材，图形矢量化之后，交给那些在线生成器就可以了。对于前端工程师，利用 HTML+CSS 就可以灵活的使用成百上千种图标，无需担心切图、定位、优化等传统位图要应付的情况。而用户，简洁、清晰的图标带给他们赏心悦目的感觉之外，浏览网站的速度体验也将大大提升。</p>

<h2>参考资料</h2>

<ol>
<li><a href="http://www.infoq.com/cn/articles/icons-fonts-as-your-responsive-strategy">响应式Web图形篇 —— icon fonts 的探析及应用</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NodeJS 安装、配置及使用]]></title>
    <link href="http://blog.longgen.me/blog/2014/07/14/nodejs-an-zhuang-%2C-pei-zhi-ji-shi-yong/"/>
    <updated>2014-07-14T09:40:39+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/07/14/nodejs-an-zhuang-,-pei-zhi-ji-shi-yong</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>Windows 下安装及配置 NodeJS</h2>

<p>直接通过 <a href="http://www.nodejs.org/">NodeJS 主页</a> 中的 INSTALL 按钮下载并安装。当前 NodeJS 最新版本为 v0.10.29。配置环境变量NODEJS_HOME，并加入path。</p>

<ul>
<li>Windows 下安装 PostgreSQL 的 pg Module，可用于 NodeJS 连接 PostgreSQL 数据库</li>
</ul>


<p>1）安装 node-gyp Module</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># nodejs 目录下执行</span>
</span><span class='line'>npm install node-gyp
</span></code></pre></td></tr></table></div></figure>


<p>2）node-gyp（0.13.1）的执行需要依赖 Python 以及 vc++。根据 node-gyp 的 <code>README.md</code> 文件选择合适的 <a href="https://www.python.org/downloads/release/python-273/">Python（v2.7.3）</a>版本安装。。根据操作系统版本及 <code>README.md</code> 说明，选择合适的 <a href="http://go.microsoft.com/?linkid=9816758">vc++ （Win7 下，选择 vc++ 2012）</a>版本安装。</p>

<p>3）安装 pg Module。安装 PostgreSQL 的 Module 之前，请确认 PostgreSQL 的环境变量已经配置好。否则会出现 pg_config 命令无法执行的错误。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># nodejs 目录下执行</span>
</span><span class='line'>npm install pg
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Windows 下安装 PostgreSQL 的 pg.js Module，可用于 NodeJS 连接 PostgreSQL 数据库</li>
</ul>


<p>1）安装 pg.js Module 仅需执行以下操作</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># nodejs 目录下执行</span>
</span><span class='line'>npm install pg.js
</span></code></pre></td></tr></table></div></figure>


<h2>使用</h2>

<h2>参考资料</h2>

<ol>
<li><a href="http://www.nodejs.org/">NodeJS 主页</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[【转】RESTful API 设计指南]]></title>
    <link href="http://blog.longgen.me/blog/2014/07/09/%5B%28zhuan-%29%5D-restful-api-she-ji-zhi-nan/"/>
    <updated>2014-07-09T19:30:23+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/07/09/[(zhuan-)]-restful-api-she-ji-zhi-nan</id>
    <content type="html"><![CDATA[<p>网络应用程序，分为前端和后端两个部分。当前的发展趋势，就是前端设备层出不穷（手机、平板、桌面电脑、其他专用设备……）。
因此，必须有一种统一的机制，方便不同的前端设备与后端进行通信。这导致 API 构架的流行，甚至出现<a href="http://www.google.com.hk/search?spm=0.0.0.0.hQSkUs&amp;q=API+first">“API First”</a>的设计思想。<a href="http://en.wikipedia.org/wiki/Representational_state_transfer?spm=0.0.0.0.hQSkUs">RESTful API</a>是目前比较成熟的一套互联网应用程序的 API 设计理论。我以前写过一篇<a href="http://www.ruanyifeng.com/blog/2011/09/restful.html?spm=0.0.0.0.hQSkUs">《理解 RESTful 架构》</a>，探讨如何理解这个概念。</p>

<p>今天，我将介绍 RESTful API 的设计细节，探讨如何设计一套合理、好用的 API。我的主要参考资料是这篇<a href="http://codeplanet.io/principles-good-restful-api-design/?spm=0.0.0.0.hQSkUs">《Principles of good RESTful API Design》</a>。</p>

<!-- more -->


<p><img src="http://blog.longgen.me/images/blog/rest_api_01.jpg" alt="rest_api" /></p>

<h2>协议</h2>

<p>API 与用户的通信协议，总是使用 HTTPs 协议。</p>

<h2>域名</h2>

<p>应该尽量将 API 部署在专用域名之下。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>https://api.example.com
</span></code></pre></td></tr></table></div></figure>


<p>如果确定 API 很简单，不会有进一步扩展，可以考虑放在主域名下。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>https://example.org/api/
</span></code></pre></td></tr></table></div></figure>


<h2>版本（Versioning）</h2>

<p>应该将 API 的版本号放入URL。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>https://api.example.com/v1/
</span></code></pre></td></tr></table></div></figure>


<p>另一种做法是，将版本号放在 HTTP 头信息中，但不如放入 URL 方便和直观。</p>

<h2>路径（Endpoint）</h2>

<p>路径又称”终点”（endpoint），表示API的具体网址。</p>

<p>在 RESTful 架构中，每个网址代表一种资源（resource），所以网址中不能有动词，只能有名词，而且所用的名词往往与数据库的表格名对应。一般来说，数据库中的表都是同种记录的”集合”（collection），所以 API 中的名词也应该使用复数。
举例来说，有一个 API 提供动物园（zoo）的信息，还包括各种动物和雇员的信息，则它的路径应该设计成下面这样。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>https://api.example.com/v1/zoos
</span><span class='line'>https://api.example.com/v1/animals
</span><span class='line'>https://api.example.com/v1/employees
</span></code></pre></td></tr></table></div></figure>


<h2>HTTP 动词</h2>

<p>对于资源的具体操作类型，由 HTTP 动词表示。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># 常用的 HTTP 动词有下面五个（括号里是对应的 SQL 命令）。</span>
</span><span class='line'>GET（SELECT）：从服务器取出资源（一项或多项）。
</span><span class='line'>POST（CREATE）：在服务器新建一个资源。
</span><span class='line'>PUT（UPDATE）：在服务器更新资源（客户端提供改变后的完整资源）。
</span><span class='line'>PATCH（UPDATE）：在服务器更新资源（客户端提供改变的属性）。
</span><span class='line'>DELETE（DELETE）：从服务器删除资源。
</span><span class='line'>
</span><span class='line'><span class="c"># 还有两个不常用的HTTP动词。</span>
</span><span class='line'>HEAD：获取资源的元数据。
</span><span class='line'>OPTIONS：获取信息，关于资源的哪些属性是客户端可以改变的。
</span><span class='line'>
</span><span class='line'><span class="c"># 下面是一些例子。</span>
</span><span class='line'>GET /zoos：列出所有动物园
</span><span class='line'>POST /zoos：新建一个动物园
</span><span class='line'>GET /zoos/ID：获取某个指定动物园的信息
</span><span class='line'>PUT /zoos/ID：更新某个指定动物园的信息（提供该动物园的全部信息）
</span><span class='line'>PATCH /zoos/ID：更新某个指定动物园的信息（提供该动物园的部分信息）
</span><span class='line'>DELETE /zoos/ID：删除某个动物园
</span><span class='line'>GET /zoos/ID/animals：列出某个指定动物园的所有动物
</span><span class='line'>DELETE /zoos/ID/animals/ID：删除某个指定动物园的指定动物
</span></code></pre></td></tr></table></div></figure>


<h2>过滤信息（Filtering）</h2>

<p>如果记录数量很多，服务器不可能都将它们返回给用户。API 应该提供参数，过滤返回结果。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># 下面是一些常见的参数。</span>
</span><span class='line'>?limit<span class="o">=</span>10：指定返回记录的数量
</span><span class='line'>?offset<span class="o">=</span>10：指定返回记录的开始位置。
</span><span class='line'>?sortby<span class="o">=</span>name&amp;order<span class="o">=</span>asc：指定返回结果按照哪个属性排序，以及排序顺序。
</span><span class='line'>?animal_type_id<span class="o">=</span>1：指定筛选条件
</span><span class='line'>
</span><span class='line'><span class="c"># 参数的设计允许存在冗余，即允许 API 路径和 URL 参数偶尔有重复。比如，GET /zoo/ID/animals 与 GET /animals?zoo_id=ID 的含义是相同的。</span>
</span></code></pre></td></tr></table></div></figure>


<h2>状态码（Status Codes）</h2>

<p>服务器向用户返回的状态码和提示信息，常见的有以下一些（方括号中是该状态码对应的 HTTP 动词）。</p>

<ul>
<li>200 OK – [GET]：服务器成功返回用户请求的数据，该操作是幂等的（Idempotent）。</li>
<li>201 CREATED – [POST/PUT/PATCH]：用户新建或修改数据成功。</li>
<li>204 NO CONTENT – [DELETE]：用户删除数据成功。</li>
<li>400 INVALID REQUEST – [POST/PUT/PATCH]：用户发出的请求有错误，服务器没有进行新建或修改数据的操作，该操作是幂等的。。</li>
<li>404 NOT FOUND – [*]：用户发出的请求针对的是不存在的记录，服务器没有进行操作，该操作是幂等的。</li>
<li>500 INTERNAL SERVER ERROR – [*]：服务器发生错误，用户将无法判断发出的请求是否成功。</li>
</ul>


<p>状态码的完全列表参见<a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html?spm=0.0.0.0.hQSkUs">这里</a>。</p>

<h2>错误处理（Error handling）</h2>

<p>如果状态码是 4xx，就应该向用户返回出错信息。一般来说，返回的信息中将 error 作为键名，出错信息作为键值即可。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="err">error:</span> <span class="nt">&quot;Invalid API key&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>返回结果</h2>

<p>针对不同操作，服务器向用户返回的结果应该符合以下规范。</p>

<ul>
<li>GET /collection：返回资源对象的列表（数组）</li>
<li>GET /collection/resource：返回单个资源对象</li>
<li>POST /collection：返回新生成的资源对象</li>
<li>PUT /collection/resource：返回完整的资源对象</li>
<li>PATCH /collection/resource：返回完整的资源对象</li>
<li>DELETE /collection/resource：返回一个空文档</li>
</ul>


<h2>Hypermedia API</h2>

<p>RESTful API最好做到 Hypermedia，即返回结果中提供链接，连向其他 API 方法，使得用户不查文档，也知道下一步应该做什么。</p>

<p>比如，当用户向 api.example.com 的根目录发出请求，会得到这样一个文档。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span><span class="nt">&quot;link&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;rel&quot;</span><span class="p">:</span>   <span class="s2">&quot;collection https://www.example.com/zoos&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;href&quot;</span><span class="p">:</span>  <span class="s2">&quot;https://api.example.com/zoos&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;title&quot;</span><span class="p">:</span> <span class="s2">&quot;List of zoos&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;type&quot;</span><span class="p">:</span>  <span class="s2">&quot;application/vnd.yourformat+json&quot;</span>
</span><span class='line'><span class="p">}}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面代码表示，文档中有一个 link 属性，用户读取这个属性就知道下一步该调用什么 API 了。rel 表示这个 API 与当前网址的关系（collection 关系，并给出该 collection 的网址），href 表示 API 的路径，title 表示 API 的标题，type 表示返回类型。</p>

<p>Hypermedia API 的设计被称为 HATEOAS。Github 的 API 就是这种设计，访问 <a href="https://api.github.com/">https://api.github.com/</a> 会得到一个所有可用 API 的网址列表。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;current_user_url&quot;</span><span class="p">:</span> <span class="s2">&quot;https://api.github.com/user&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;authorizations_url&quot;</span><span class="p">:</span> <span class="s2">&quot;https://api.github.com/authorizations&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="err">//</span> <span class="err">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>从上面可以看到，如果想获取当前用户的信息，应该去访问<a href="https://api.github.com/user">https://api.github.com/user</a>，然后就得到了下面结果。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;message&quot;</span><span class="p">:</span> <span class="s2">&quot;Requires authentication&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;documentation_url&quot;</span><span class="p">:</span> <span class="s2">&quot;https://developer.github.com/v3&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面代码表示，服务器给出了提示信息，以及文档的网址。</p>

<h2>其他</h2>

<ul>
<li>API 的身份认证应该使用 OAuth 2.0 框架。</li>
<li>服务器返回的数据格式，应该尽量使用 JSON，避免使用 XML。</li>
</ul>


<h2>参考资料</h2>

<ol>
<li><a href="http://www.google.com.hk/search?spm=0.0.0.0.hQSkUs&amp;q=API+first">RESTful API 设计指南</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PostGIS 安装、配置及使用]]></title>
    <link href="http://blog.longgen.me/blog/2014/07/09/postgis-an-zhuang-%2C-pei-zhi-ji-shi-yong/"/>
    <updated>2014-07-09T10:39:21+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/07/09/postgis-an-zhuang-,-pei-zhi-ji-shi-yong</id>
    <content type="html"><![CDATA[<p>本文主要介绍目前为止最新版本 PostGIS 及 PostgreSQL 的安装、配置及使用。</p>

<!-- more -->


<h2>Windows 下安装及配置</h2>

<p>Windows 下 Postgresql 安装包提供 Application Stack Builder 方式安装插件（包括 PostGIS 插件），所以 Windows 下安装仅需下载 Postgresql 并进行相关操作</p>

<p>Postgresql 下载地址：&lt;></p>

<h2>Linux 下安装及配置</h2>

<h2>从 shape 文件中将数据导入 PostGIS。</h2>

<p>需要注意，shape 文件目录不能包含中文名，shape 文件的编码一般设置为 GBK。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[【转】图片服务架构演进]]></title>
    <link href="http://blog.longgen.me/blog/2014/07/07/%5B%28zhuan-%29%5D-tu-pian-fu-wu-jia-gou-yan-jin/"/>
    <updated>2014-07-07T15:55:24+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/07/07/[(zhuan-)]-tu-pian-fu-wu-jia-gou-yan-jin</id>
    <content type="html"><![CDATA[<p>现在几乎任何一个网站、Web App 以及移动 APP 等应用都需要有图片展示的功能，对于图片功能从下至上都是很重要的。必须要具有前瞻性的规划好图片服务器，图片的上传和下载速度至关重要，当然这并不是说一上来就搞很NB的架构，至少具备一定扩展性和稳定性。虽然各种架构设计都有，在这里我只是谈谈我的一些个人想法。</p>

<!-- more -->


<p>对于图片服务器来说IO无疑是消耗资源最为严重的，对于web应用来说需要将图片服务器做一定的分离，否则很可能因为图片服务器的 IO 负载导致应用崩溃。因此尤其对于大型网站和应用来说，非常有必要将图片服务器和应用服务器分离，构建独立的图片服务器集群，构建独立的图片服务器其主要优势：</p>

<ol>
<li>分担 Web 服务器的 I/O 负载-将耗费资源的图片服务分离出来，提高服务器的性能和稳定性。</li>
<li>能够专门对图片服务器进行优化-为图片服务设置有针对性的缓存方案，减少带宽网络成本，提高访问速度。</li>
<li>提高网站的可扩展性-通过增加图片服务器，提高图片服务吞吐能力。</li>
</ol>


<p>从传统互联网的 web1.0，历经 web2.0 时代以及发展到现在的 web3.0，随着图片存储规模的增加，图片服务器的架构也在逐渐发生变化，以下主要论述三个阶段的图片服务器架构演进。</p>

<h2>初始阶段</h2>

<p><img src="http://blog.longgen.me/images/blog/%E6%97%A9%E6%9C%9F%E5%9B%BE%E7%89%87%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84.png" alt="早期图片服务架构" /></p>

<p>在介绍初始阶段的早期的小型图片服务器架构之前，首先让我们了解一下 NFS 技术，NFS 是 Network File System 的缩写，即网络文件系统。NFS 是由 Sun 开发并发展起来的一项用于在不同机器，不同操作系统之间通过网络互相分享各自的文件。NFS server 也可以看作是一个 FILE SERVER,用于在 UNIX 类系统之间共享文件，可以轻松的挂载(mount)到一个目录上，操作起来就像本地文件一样的方便。</p>

<p>如果不想在每台图片服务器同步所有图片，那么 NFS 是最简单的文件共享方式。NFS 是个分布式的客户机/服务器文件系统，NFS 的实质在于用户间计算机的共享，用户可以联结到共享计算机并象访问本地硬盘一样访问共享计算机上的文件。具体实现思路是：</p>

<ol>
<li>所有前端 web 服务器都通过 nfs 挂载 3 台图片服务器 export 出来的目录，以接收 web 服务器写入的图片。然后[图片1]服务器挂载另外两台图片服务器的 export 目录到本地给 apache 对外提供访问。</li>
<li>用户上传图片：用户通过 Internet 访问页面提交上传请求 post 到 web 服务器，web 服务器处理完图片后由 web 服务器拷贝到对应的 mount 本地目录。</li>
<li>用户访问图片：用户访问图片时，通过[图片1]这台图片服务器来读取相应 mount 目录里边的图片。</li>
</ol>


<p>以上架构存在的问题：</p>

<ol>
<li>性能：现有结构过度依赖 nfs,当图片服务器的 nfs 服务器有问题时，可能影响到前端 web 服务器。NFS 的问题主要是锁的问题. 很容易造成死锁, 只有硬件重启才能解决。尤其当图片达到一定的量级后，nfs 会有严重的性能问题。</li>
<li>高可用：对外提供下载的图片服务器只有一台，容易出现单点故障。</li>
<li>扩展性：图片服务器之间的依赖过多，而且横向扩展余地不够。</li>
<li>存储：web 服务器上传热点不可控，造成现有图片服务器空间占用不均衡。</li>
<li>安全性：nfs 方式对于拥有 web 服务器的密码的人来说，可以随意修改 nfs 里边的内容，安全级别不高。</li>
</ol>


<p>当然图片服务器的图片同步可以不采用 NFS,也可以采用 ftp 或 rsync，采用 ftp 这样的话每个图片服务器就都保存一份图片的副本，也起到了备份的作用。但是缺点是将图片 ftp 到服务器比较耗时，如果使用异步方式去同步图片的话又会有延时，不过一般的小图片文件也还好了。使用 rsync 同步，当数据文件达到一定的量级后，每次 rsync 扫描会耗时很久也会带来一定的延时性。</p>

<h2>发展阶段</h2>

<p><img src="http://blog.longgen.me/images/blog/%E5%8F%91%E5%B1%95%E9%98%B6%E6%AE%B5%E5%9B%BE%E7%89%87%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84.png" alt="发展阶段图片服务架构" /></p>

<p>当网站达到一定的规模后，对图片服务器的性能和稳定性有一定的要求后，上述 NFS 图片服务架构面临着挑战，严重的依赖 NFS,而且系统存在单点机器容易出现故障，需要对整体架构进行升级。于是出现了上图图片服务器架构，出现了分布式的图片存储。</p>

<p>其实现的具体思路如下：</p>

<ol>
<li>用户上传图片到 web 服务器后，web 服务器处理完图片，然后再由前端 web 服务器把图片 post 到到[图片1]、[图片2]…[图片N]其中的一个，图片服务器接收到 post 过来的图片，然后把图片写入到本地磁盘并返回对应成功状态码。前端web服务器根据返回状态码决定对应操作，如果成功的话，处理生成各尺寸的缩略图、打水印，把图片服务器对应的 ID 和对应图片路径写入 DB 数据库。</li>
<li>上传控制：我们需要调节上传时，只需要修改 web 服务器 post 到的目的图片服务器的 ID，就可以控制上传到哪台图片存储服务器,对应的图片存储服务器只需要安装 nginx 同时提供一个 python 或者 php 服务接收并保存图片，如果不想开启 python 或者 php 服务，也可以编写一个 nginx 扩展模块。</li>
<li>用户访问流程：用户访问页面的时候，根据请求图片的 URL 到对应图片服务器去访问图片。
如： <a href="http://imgN.xxx.com/image1.jpg">http://imgN.xxx.com/image1.jpg</a></li>
</ol>


<p>此阶段的图片服务器架构，增加了负载均衡和分布式图片存储，能够在一定程度上解决并发访问量高和存储量大的问题。负载均衡在有一定财力的情况下可以考虑 F5 硬负载，当然也可以考虑使用开源的 LVS 软负载(同时还可开启缓存功能)。此时将极大提升访问的并发量，可以根据情况随时调配服务器。当然此时也存在一定的瑕疵，那就是可能在多台 Squid 上存在同一张图片，因为访问图片时可能第一次分到 squid1，在 LVS 过期后第二次访问到 squid2 或者别的，当然相对并发问题的解决，此种少量的冗余完全在我们的允许范围之内。在该系统架构中二级缓存可以使用 squid 也可以考虑使用 varnish 或者 traffic server，对于 cache 的开源软件选型要考率以下几点</p>

<p>1）性能：varnish 本身的技术上优势要高于 squid，它采用了“Visual Page Cache”技术，在内存的利用上，Varnish 比 Squid 具有优势，它避免了 Squid 频繁在内存、磁盘中交换文件，性能要比 Squid 高。varnish 是不能 cache 到本地硬盘上的。还有强大的通过 Varnish 管理端口，可以使用正则表达式快速、批量地清除部分缓存。nginx 是用第三方模块 ncache 做的缓冲，其性能基本达到 varnish，但在架构中 nginx 一般作为反向（静态文件现在用 nginx 的很多，并发能支持到2万+）。在静态架构中，如果前端直接面对的是 cdn 活着前端了 4 层负载的话，完全用 nginx 的 cache 就够了。</p>

<p>2）避免文件系统式的缓存，在文件数据量非常大的情况下，文件系统的性能很差，像 squid,nginx的proxy_store,proxy_cache 之类的方式缓存，当缓存的量级上来后，性能将不能满足要求。开源的 traffic server 直接用裸盘缓存，是一个不错的选择，国内大规模应用并公布出来的主要是淘宝，并不是因为它做的差，而是开源时间晚。Traffic Server 在 Yahoo 内部使用了超过 4 年，主要用于 CDN 服务，CDN 用于分发特定的 HTTP 内容，通常是静态的内容如图片、JavaScript、CSS。当然使用 leveldb 之类的做缓存，我估计也能达到很好的效果。</p>

<p>3）稳定性：squid 作为老牌劲旅缓存，其稳定性更可靠一些，从我身边一些使用者反馈来看 varnish 偶尔会出现 crash 的情况。Traffic Server 在雅虎目前使用期间也没有出现已知的数据损坏情况，其稳定性相对也比较可靠，对于未来我其实更期待 Traffic Server 在国内能够拥有更多的用户。</p>

<p>以上图片服务架构设计消除了早期的 NFS 依赖以及单点问题，时能够均衡图片服务器的空间，提高了图片服务器的安全性等问题，但是又带来一个问题是图片服务器的横向扩展冗余问题。只想在普通的硬盘上存储，首先还是要考虑一下物理硬盘的实际处理能力。是 7200 转的还是 15000 转的，实际表现差别就很大。至于文件系统选择 xfs、ext3、ext4 还是 reiserFs，需要做一些性能方面的测试，从官方的一些测试数据来看，reiserFs 更适合存储一些小图片文件。创建文件系统的时候 Inode 问题也要加以考虑，选择合适大小的 inode size，因为 Linux 为每个文件分配一个称为索引节点的号码 inode，可以将 inode 简单理解成一个指针，它永远指向本文件的具体存储位置。一个文件系统允许的 inode 节点数是有限的，如果文件数量太多，即使每个文件都是 0 字节的空文件，系统最终也会因为节点空间耗尽而不能再创建文件，因此需要在空间和速度上做取舍，构造合理的文件目录索引。</p>

<h2>云存储阶段</h2>

<p><img src="http://blog.longgen.me/images/blog/%E4%BA%91%E5%AD%98%E5%82%A8%E9%98%B6%E6%AE%B5%E5%9B%BE%E7%89%87%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84.png" alt="云存储阶段图片服务架构" /></p>

<p>2011 年李彦宏在百度联盟峰会上就提到过互联网的读图时代已经到来，图片服务早已成为一个互联网应用中占比很大的部分，对图片的处理能力也相应地变成企业和开发者的一项基本技能,图片的下载和上传速度显得更加重要，要想处理好图片，需要面对的三个主要问题是：大流量、高并发、海量存储。</p>

<p>阿里云存储服务(OpenStorageService，简称OSS)，是阿里云对外提供的海量，安全，低成本，高可靠的云存储服务。用户可以通过简单的 REST 接口，在任何时间、任何地点上传和下载数据，也可以使用 WEB 页面对数据进行管理。同时，OSS 提供 Java、Python、PHP SDK，简化用户的编程。基于 OSS，用户可以搭建出各种多媒体分享网站、网盘、个人企业数据备份等基于大规模数据的服务。在以下图片云存储主要以阿里云的云存储 OSS 为切入点介绍，上图为 OSS 云存储的简单架构示意图。</p>

<p>真正意义上的“云存储”，不是存储而是提供云服务，使用云存储服务的主要优势有以下几点：</p>

<ol>
<li>用户无需了解存储设备的类型、接口、存储介质等。</li>
<li>无需关心数据的存储路径。</li>
<li>无需对存储设备进行管理、维护。</li>
<li>无需考虑数据备份和容灾</li>
<li>简单接入云存储，尽情享受存储服务。</li>
</ol>


<p>架构模块组成</p>

<p><img src="http://blog.longgen.me/images/blog/%E4%BA%91%E5%AD%98%E5%82%A8%E5%9B%BE%E7%89%87%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%9D%97%E7%BB%84%E6%88%90.png" alt="云存储图片服务架构模块组成" /></p>

<p>1）KV Engine：OSS 中的 Object 源信息和数据文件都是存放在 KV Engine 上。在 6.15 的版本，V Engine 将使用 0.8.6 版本，并使用为 OSS 提供的 OSSFileClient。</p>

<p>2）Quota：此模块记录了 Bucket 和用户的对应关系，和以分钟为单位的 Bucket 资源使用情况。Quota 还将提供 HTTP 接口供 Boss 系统查询。</p>

<p>3）安全模块：安全模块主要记录 User 对应的 ID 和 Key，并提供 OSS 访问的用户验证功能。</p>

<h2>OSS 术语名词汇</h2>

<ul>
<li><p>Access Key ID &amp; Access Key Secret （API 密钥）：用户注册 OSS 时，系统会给用户分配一对 Access Key ID &amp; Access Key Secret，称为 ID 对，用于标识用户，为访问 OSS 做签名验证。</p></li>
<li><p>Service：OSS 提供给用户的虚拟存储空间，在这个虚拟空间中，每个用户可拥有一个到多个 Bucket。</p></li>
<li><p>Bucket：Bucket 是 OSS 上的命名空间；Bucket 名在整个 OSS 中具有全局唯一性，且不能修改；存储在 OSS 上的每个 Object 必须都包含在某个 Bucket 中。一个应用，例如图片分享网站，可以对应一个或多个 Bucket。一个用户最多可创建 10 个 Bucket，但每个 Bucket 中存放的 Object 的数量和大小总和没有限制，用户不需要考虑数据的可扩展性。</p></li>
<li><p>Object：在 OSS 中，用户的每个文件都是一个 Object，每个文件需小于 5TB。Object 包含 key、data 和 user meta。其中，key 是 Object 的名字；data 是 Object 的数据；user meta 是用户对该 object 的描述。</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// 其使用方式非常简单,如下为 java sdk：</span>
</span><span class='line'><span class="n">OSSClient</span> <span class="n">ossClient</span> <span class="o">=</span> <span class="k">new</span> <span class="n">OSSClient</span><span class="o">(</span><span class="n">accessKeyId</span><span class="o">,</span><span class="n">accessKeySecret</span><span class="o">);</span>
</span><span class='line'><span class="n">PutObjectResult</span> <span class="n">result</span> <span class="o">=</span> <span class="n">ossClient</span><span class="o">.</span><span class="na">putObject</span><span class="o">(</span><span class="n">bucketname</span><span class="o">,</span> <span class="n">bucketKey</span><span class="o">,</span> <span class="n">inStream</span><span class="o">,</span> <span class="k">new</span> <span class="n">ObjectMetadata</span><span class="o">());</span>
</span><span class='line'><span class="c1">// 执行以上代码即可将图片流上传至 OSS 服务器上。</span>
</span><span class='line'><span class="c1">// 图片的访问方式也非常简单其 url 为：http://bucketname.oss.aliyuncs.com/bucketKey</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>分布式文件系统：用分布式存储有几个好处，分布式能自动提供冗余，不需要我们去备份，担心数据安全，在文件数量特别大的情况下，备份是一件很痛苦的事情，rsync 扫一次可能是就是好几个小时，还有一点就是分布式存储动态扩容方便。当然在国内的其他一些文件系统里，<a href="http://code.taobao.org/p/tfs/src/">TFS</a>和 FASTDFS 也有一些用户，但是 TFS 的优势更是针对一些小文件存储，主要是淘宝在用。另外 FASTDFS 在并发高于 300 写入的情况下出现性能问题，稳定性不够友好。OSS 存储使用的是阿里云基于飞天 5k 平台自主研发的高可用，高可靠的分布式文件系统盘古。分布式文件系统盘古和 Google 的 GFS 类似，盘古的架构是 Master-Slave 主从架构，Master 负责元数据管理，Slave 叫做 Chunk Server，负责读写请求。其中 Master 是基于 Paxos 的多 Master 架构，一个 Master 死了之后，另外一个 Master 可以很快接过去，基本能够做到故障恢复在一分钟以内 。文件是按照分片存放，每个会分三个副本，放在不同的机架上，最后提供端到端的数据校验。</p></li>
<li><p>HAPROXY 负载均衡：基于 haproxy 的自动 hash 架构 ,这是一种新的缓存架构，由 nginx 作为最前端，代理到缓存机器。 nginx 后面是缓存组，由 nginx 经过 url hash 后将请求分到缓存机器。这个架构方便纯 squid 缓存升级，可以在 squid 的机器上加装 nginx。 nginx 有缓存的功能，可以将一些访问量特大的链接直接缓存在 nginx 上，就不用经过多一次代理的请求，能够保证图片服务器的高可用、高性能。比如 favicon.ico 和网站的 logo。 负载均衡负责 OSS 所有的请求的负载均衡，后台的 http 服务器故障会自动切换，从而保证了 OSS 的服务不间断。</p></li>
<li><p>CDN：阿里云 CDN 服务是一个遍布全国的分布式缓存系统，能够将网站文件（如图片或 JavaScript 代码文件）缓存到全国多个城市机房中的服务器上，当一个用户访问你的网站时，会就近到靠近 TA 的城市的服务器上获取数据，这样最终用户访问你的服务速度会非常快。
阿里云 CDN 服务在全国部署超过 100 个节点，能提供给用户优良的网络加速效果。当网站业务突然爆发增长时，无需手忙脚乱地扩容网络带宽，使用 CDN 服务即可轻松应对。和 OSS 服务一样，使用 CDN，需要先在 aliyun.com 网站上开通 CDN 服务。开通后，需要在网站上的管理中心创建你的 distribution（即分发频道），每个 distribution 由两个必须的部分组成：distribution ID 和源站地址。
使用阿里云 OSS 和 CDN 可以非常方便的针对每个 bucket 进行内容加速，因为每个 bucket 对应一个独立的二级域名，针对每个文件进行 CDN 删除，简单、经济地解决服务的存储和网络问题，毕竟大多数网站或应用的存储和网络带宽多半是被图片或视频消耗掉的。
从整个业界来看，最近这样的面向个人用户的云存储如国外的 DropBox 和 Box.net 非常受欢迎，国内的云存储目前比较不错的主要有七牛云存储和又拍云存储。</p></li>
<li><p>上传下载分而治之：图片服务器的图片下载比例远远高于上传比例，业务逻辑的处理也区别明显，上传服器对图片重命名，记录入库信息，下载服务器对图片添加水印、修改尺寸之类的动态处理。从高可用的角度，我们能容忍部分图片下载失败，但绝不能有图片上传失败，因为上传失败，意味着数据的丢失。上传与下载分开，能保证不会因下载的压力影响图片的上传，而且还有一点，下载入口和上传入口的负载均衡策略也有所不同。上传需要经过 Quota Server 记录用户和图片的关系等逻辑处理，下载的逻辑处理如果绕过了前端缓存处理，穿透后端业务逻辑处理，需要从 OSS 获取图片路径信息。近期阿里云会推出基于 CDN 就近上传的功能，自动选择离用户最近的 CDN 节点，使得数据的上传下载速度均得到最优化。相较传统 IDC，访问速度提升数倍。</p></li>
<li><p>图片防盗链处理：如果服务不允许防盗链，那么访问量会引起带宽、服务器压力等问题。比较通用的解决方案是在 nginx 或者 squid 反向代理软件上添加 refer ACL 判断，OSS 也提供了基于 refer 的防盗链技术。当然 OSS 也提供了更为高级的 URL 签名防盗链，其其实现思路如下：</p></li>
</ul>


<p>首先，确认自己的 bucket 权限是 private，即这个 bucket 的所有请求必须在签名认证通过后才被认为是合法的。然后根据操作类型、要访问的 bucket、要访问的 object 以及超时时间，动态地生成一个经过签名的 URL。通过这个签名 URL，你授权的用户就可以在该签名 URL 过期时间前执行相应的操作。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// 签名的Python代码如下：</span>
</span><span class='line'><span class="n">h</span><span class="o">=</span><span class="n">hmac</span><span class="o">.</span><span class="na">new</span><span class="o">(</span><span class="err">“</span><span class="n">OtxrzxIsfpFjA7SwPzILwy8Bw21TLhquhboDYROV</span><span class="err">”</span><span class="o">,</span> <span class="err">“</span><span class="n">GET</span><span class="err">\</span><span class="n">n</span><span class="err">\</span><span class="n">n</span><span class="err">\</span><span class="n">n1141889120</span><span class="err">\</span><span class="n">n</span><span class="o">/</span><span class="n">oss</span><span class="o">-</span><span class="n">example</span><span class="o">/</span><span class="n">oss</span><span class="o">-</span><span class="n">api</span><span class="o">.</span><span class="na">jpg</span><span class="err">”</span><span class="o">,</span><span class="n">sha</span><span class="o">);</span>
</span><span class='line'><span class="n">urllib</span><span class="o">.</span><span class="na">quote_plus</span> <span class="o">(</span><span class="n">base64</span><span class="o">.</span><span class="na">encodestring</span><span class="o">(</span><span class="n">h</span><span class="o">.</span><span class="na">digest</span><span class="o">()).</span><span class="na">strip</span><span class="o">());</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中 method 可以是 PUT、GET、HEAD、DELETE 中的任意一种；最后一个参数“timeout”是超时的时间，单位是秒。一个通过上面 Python 方法，计算得到的签名 URL 为：
<a href="http://oss-example.oss-cn-hangzhou.aliyuncs.com/oss-api.jpg?OSSAccessKeyId=44CF9590006BF252F707&amp;Expires=1141889120&amp;Signature=vjbyPxybdZaNmGa%2ByT272YEAiv4%3D">http://oss-example.oss-cn-hangzhou.aliyuncs.com/oss-api.jpg?OSSAccessKeyId=44CF9590006BF252F707&amp;Expires=1141889120&amp;Signature=vjbyPxybdZaNmGa%2ByT272YEAiv4%3D</a></p>

<p>通过这种动态计算签名 URL 的方法，可以有效地保护放在 OSS 上的数据，防止被其他人盗链。</p>

<ul>
<li>图片编辑处理 API：对于在线图片的编辑处理，GraphicsMagick（GraphicsMagick(<a href="http://www.graphicsmagick.org/">http://www.graphicsmagick.org/</a>)）对于从事互联网的技术人员应该不会陌生。GraphicsMagick 是从 ImageMagick 5.5.2 分支出来的，但是现在他变得更稳定和优秀，GM 更小更容易安装、GM 更有效率、GM 的手册非常丰富 GraphicsMagick 的命令与 ImageMagick 基本是一样的。</li>
</ul>


<p>GraphicsMagick 提供了包括裁、缩放、合成、打水印、图像转换、填充等非常丰富的接口 API,其中的开发包 SDK 也非常丰富，包括了 JAVA(im4java)、C、C++、Perl、PHP、Tcl、Ruby 等的调用，支持超过 88 中图像格式，包括重要的 DPX、GIF、JPEG、JPEG-2000、PNG、PDF、PNM 和 TIFF，GraphicsMagick 可以再绝大多数的平台上使用，Linux、Mac、Windows 都没有问题。但是独立开发这些图片处理服务，对服务器的 IO 要求相对要高一些，而且目前这些开源的图片处理编辑库，相对来说还不是很稳定，笔者在使用 GraphicsMagick 的时候就遇到了 tomcat 进程 crash 情况，需要手动重启 tomcat 服务。</p>

<p>阿里云目前已经对外开放图片处理 API,包括了大多数常用处理解决方案：缩略图、打水印、文字水印、样式、管道等。开发者可以非常方便的使用如上图片处理方案，希望越来越多的开发者能够基于 OSS 开放出更多优秀的产品。</p>

<h2>参考资料</h2>

<ol>
<li><a href="http://blog.aliyun.com/967">图片服务架构演进</a></li>
</ol>

]]></content>
  </entry>
  
</feed>
