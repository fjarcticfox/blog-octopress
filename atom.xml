<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[逆水行舟]]></title>
  <link href="http://blog.longgen.me/atom.xml" rel="self"/>
  <link href="http://blog.longgen.me/"/>
  <updated>2014-04-11T12:18:23+08:00</updated>
  <id>http://blog.longgen.me/</id>
  <author>
    <name><![CDATA[Longgen]]></name>
    <email><![CDATA[fjarcticfox@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Linux 常用命令]]></title>
    <link href="http://blog.longgen.me/blog/2014/04/10/linux-chang-yong-ming-ling/"/>
    <updated>2014-04-10T21:20:11+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/04/10/linux-chang-yong-ming-ling</id>
    <content type="html"><![CDATA[<!-- more -->


<p>初级用户：以下是初学者常用的一些命令。</p>

<h2>ls 命令</h2>

<p>ls 命令是列出目录内容(List Directory Contents)的意思。运行它就是列出文件夹里的内容，可能是文件也可能是文件夹。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# ls
</span><span class='line'>
</span><span class='line'>Android-Games                     Music
</span><span class='line'>Pictures                          Public
</span><span class='line'>Desktop                           Tecmint.com
</span><span class='line'>Documents                         TecMint-Sync
</span><span class='line'>Downloads                         Templates
</span><span class='line'>
</span><span class='line'><span class="c"># “ls -l”命令以详情模式(long listing fashion)列出文件夹的内容。</span>
</span><span class='line'>root@tecmint:~# ls -l
</span><span class='line'>
</span><span class='line'>total 40588
</span><span class='line'>drwxrwxr-x 2 ravisaive ravisaive     4096 May  8 01:06 Android Games
</span><span class='line'>drwxr-xr-x 2 ravisaive ravisaive     4096 May 15 10:50 Desktop
</span><span class='line'>drwxr-xr-x 2 ravisaive ravisaive     4096 May 16 16:45 Documents
</span><span class='line'>drwxr-xr-x 6 ravisaive ravisaive     4096 May 16 14:34 Downloads
</span><span class='line'>drwxr-xr-x 2 ravisaive ravisaive     4096 Apr 30 20:50 Music
</span><span class='line'>drwxr-xr-x 2 ravisaive ravisaive     4096 May  9 17:54 Pictures
</span><span class='line'>drwxrwxr-x 5 ravisaive ravisaive     4096 May  3 18:44 Tecmint.com
</span><span class='line'>drwxr-xr-x 2 ravisaive ravisaive     4096 Apr 30 20:50 Templates
</span><span class='line'>
</span><span class='line'><span class="c"># &quot;ls -a&quot;命令会列出文件夹里的所有内容，包括以&quot;.&quot;开头的隐藏文件。</span>
</span><span class='line'>root@tecmint:~# ls -a
</span><span class='line'>
</span><span class='line'>.           .gnupg          .dbus           .goutputstream-PI5VVW       .mission-control
</span><span class='line'>.adobe                  deja-dup                .grsync                 .mozilla                    .themes
</span><span class='line'>.gstreamer-0.10         .mtpaint                .thumbnails             .gtk-bookmarks              .thunderbird
</span><span class='line'>.HotShots               .mysql_history          .htaccess       .apport-ignore.xml          .ICEauthority
</span><span class='line'>.profile                .bash_history           .icons                  .bash_logout                    .fbmessenger
</span><span class='line'>.jedit                  .pulse                  .bashrc                 .liferea_1.8                .pulse-cookie
</span><span class='line'>.Xauthority     .gconf                  .local                  .Xauthority.HGHVWW      .cache
</span><span class='line'>.gftp                   .macromedia             .remmina                .cinnamon                       .gimp-2.8
</span><span class='line'>.ssh                    .xsession-errors    .compiz                 .gnome                          teamviewer_linux.deb
</span><span class='line'>.xsession-errors.old    .config                 .gnome2                 .zoncolor
</span><span class='line'>
</span><span class='line'><span class="c"># 注意：在 Linux 中，文件以“.”开头的就是隐藏文件，并且每个文件，文件夹，设备或者命令都是以文件对待。ls -l 命令输出：</span>
</span><span class='line'>
</span><span class='line'>    1. d <span class="o">(</span>代表了是目录<span class="o">)</span>。
</span><span class='line'>    2. rwxr-xr-x 是文件或者目录对所属用户，同一组用户和其它用户的权限。
</span><span class='line'>    3. 上面例子中第一个ravisaive 代表了文件文件属于用户ravisaive
</span><span class='line'>    4. 上面例子中的第二个ravisaive代表了文件文件属于用户组ravisaive
</span><span class='line'>    5. 4096 代表了文件大小为4096字节。
</span><span class='line'>    6。 May 8 01:06 代表了文件最后一次修改的日期和时间.
</span><span class='line'>    7. 最后面的就是文件/文件夹的名字
</span></code></pre></td></tr></table></div></figure>


<h2>lsblk 命令</h2>

<p>&ldquo;lsblk&#8221;就是列出块设备。除了 RAM 外，以标准的树状输出格式，整齐地显示块设备。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# lsblk
</span><span class='line'>
</span><span class='line'>NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
</span><span class='line'>sda      8:0    0 232.9G  0 disk
</span><span class='line'>├─sda1   8:1    0  46.6G  0 part /
</span><span class='line'>├─sda2   8:2    0     1K  0 part
</span><span class='line'>├─sda5   8:5    0   190M  0 part /boot
</span><span class='line'>├─sda6   8:6    0   3.7G  0 part <span class="o">[</span>SWAP<span class="o">]</span>
</span><span class='line'>├─sda7   8:7    0  93.1G  0 part /data
</span><span class='line'>└─sda8   8:8    0  89.2G  0 part /personal
</span><span class='line'>sr0     11:0    1  1024M  0 rom
</span><span class='line'>
</span><span class='line'><span class="c"># “lsblk -l”命令以列表格式显示块设备(而不是树状格式)。</span>
</span><span class='line'>root@tecmint:~# lsblk -l
</span><span class='line'>
</span><span class='line'>NAME MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
</span><span class='line'>sda    8:0    0 232.9G  0 disk
</span><span class='line'>sda1   8:1    0  46.6G  0 part /
</span><span class='line'>sda2   8:2    0     1K  0 part
</span><span class='line'>sda5   8:5    0   190M  0 part /boot
</span><span class='line'>sda6   8:6    0   3.7G  0 part <span class="o">[</span>SWAP<span class="o">]</span>
</span><span class='line'>sda7   8:7    0  93.1G  0 part /data
</span><span class='line'>sda8   8:8    0  89.2G  0 part /personal
</span><span class='line'>sr0   11:0    1  1024M  0 rom
</span><span class='line'>
</span><span class='line'><span class="c"># 注意：lsblk 是最有用和最简单的方式来了解新插入的 USB 设备的名字，特别是当你在终端上处理磁盘/块设备时。</span>
</span></code></pre></td></tr></table></div></figure>


<h2>md5sum 命令</h2>

<p>“md5sum”就是计算和检验 MD5 信息签名。md5 checksum(通常叫做哈希)使用匹配或者验证文件的文件的完整性，因为文件可能因为传输错误，磁盘错误或者无恶意的干扰等原因而发生改变。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# md5sum teamviewer_linux.deb
</span><span class='line'>
</span><span class='line'>47790ed345a7b7970fc1f2ac50c97002  teamviewer_linux.deb
</span><span class='line'>
</span><span class='line'><span class="c"># 注意：用户可以使用官方提供的和 md5sum 生成签名信息匹对以此检测文件是否改变。Md5sum 没有 sha1sum 安全，这点我们稍后讨论。</span>
</span></code></pre></td></tr></table></div></figure>


<h2>dd命令</h2>

<p>“dd”命令代表了转换和复制文件。可以用来转换和复制文件，大多数时间是用来复制 iso 文件(或任何其它文件)到一个 usb 设备(或任何其它地方)中去，所以可以用来制作 USB 启动器。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# dd <span class="k">if</span><span class="o">=</span>/home/user/Downloads/debian.iso <span class="nv">of</span><span class="o">=</span>/dev/sdb1 <span class="nv">bs</span><span class="o">=</span>512M; sync
</span><span class='line'>
</span><span class='line'><span class="c"># 注意：在上面的例子中，usb 设备就是 sdb1（你应该使用 lsblk 命令验证它，否则你会重写你的磁盘或者系统），请慎重使用磁盘的名，切忌。</span>
</span><span class='line'>
</span><span class='line'><span class="c"># dd 命令在执行中会根据文件的大小和类型 以及 usb 设备的读写速度，消耗几秒到几分钟不等。</span>
</span></code></pre></td></tr></table></div></figure>


<h2>uname 命令</h2>

<p>&ldquo;uname&#8221;命令就是 Unix Name 的简写。显示机器名，操作系统和内核的详细信息。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# uname -a
</span><span class='line'>
</span><span class='line'>Linux tecmint 3.8.0-19-generic <span class="c">#30-Ubuntu SMP Wed May 1 16:36:13 UTC 2013 i686 i686 i686 GNU/Linux</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 注意： uname 显示内核类别， uname -a 显示详细信息。上面的输出详细说明了 uname -a</span>
</span><span class='line'>
</span><span class='line'>    1. “Linux“: 机器的内核名
</span><span class='line'>    2. “tecmint“: 机器的节点名
</span><span class='line'>    3. “3.8.0-19-generic“: 内核发布版本
</span><span class='line'>    4. “#30-Ubuntu SMP“: 内核版本
</span><span class='line'>    5. “i686“: 处理器架构
</span><span class='line'>    6。 “GNU/Linux“: 操作系统名
</span></code></pre></td></tr></table></div></figure>


<h2>history 命令</h2>

<p>“history”命令就是历史记录。它显示了在终端中所执行过的所有命令的历史。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# <span class="nb">history</span>
</span><span class='line'>
</span><span class='line'><span class="nb"> </span>1  sudo add-apt-repository ppa:tualatrix/ppa
</span><span class='line'> 2  sudo apt-get update
</span><span class='line'> 3  sudo apt-get install ubuntu-tweak
</span><span class='line'> 4  sudo add-apt-repository ppa:diesch/testing
</span><span class='line'> 5  sudo apt-get update
</span><span class='line'> 6  sudo apt-get install indicator-privacy
</span><span class='line'> 7  sudo add-apt-repository ppa:atareao/atareao
</span><span class='line'> 8  sudo apt-get update
</span><span class='line'> 9  sudo apt-get install my-weather-indicator
</span><span class='line'> 10 <span class="nb">pwd</span>
</span><span class='line'><span class="nb"> </span>11 <span class="nb">cd</span> <span class="o">&amp;&amp;</span> sudo cp -r unity/6 /usr/share/unity/
</span><span class='line'> 12 <span class="nb">cd</span> /usr/share/unity/icons/
</span><span class='line'> 13 <span class="nb">cd</span> /usr/share/unity
</span><span class='line'>
</span><span class='line'> <span class="c"># 注意：按住“CTRL + R”就可以搜索已经执行过的命令，它可以在你写命令时自动补全。</span>
</span><span class='line'>
</span><span class='line'> <span class="o">(</span>reverse-i-search<span class="o">)</span>‘if<span class="err">&#39;</span>: ifconfig
</span></code></pre></td></tr></table></div></figure>


<h2>sudo 命令</h2>

<p>“sudo”(super user do)命令允许授权用户执行超级用户或者其它用户的命令。通过在 sudoers 列表的安全策略来指定。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# sudo add-apt-repository ppa:tualatrix/ppa
</span><span class='line'>
</span><span class='line'><span class="c"># 注意：sudo 允许用户借用超级用户的权限，然而&quot;su&quot;命令实际上是允许用户以超级用户登录。</span>
</span><span class='line'><span class="c"># 所以 sudo 比 su 更安全。并不建议使用 sudo 或者 su 来处理日常用途，因为它可能导致严重的错误如果你意外的做错了事。</span>
</span><span class='line'><span class="c"># 这就是为什么在 linux 社区流行一句话：“To err is human, but to really foul up everything, you need root password.”</span>
</span></code></pre></td></tr></table></div></figure>


<h2>mkdir 命令</h2>

<p>“mkdir”(Make directory)命令在命名路径下创建新的目录。然而如果目录已经存在了，那么它就会返回一个错误信息&#8221;不能创建文件夹，文件夹已经存在了&#8221;(&ldquo;cannot create folder, folder already exists&rdquo;)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# mkdir tecmint
</span><span class='line'>
</span><span class='line'><span class="c"># 注意：目录只能在用户拥有写权限的目录下才能创建。mkdir：不能创建目录`tecmint`，因为文件已经存在了。</span>
</span><span class='line'><span class="c"># （上面的输出中不要被文件迷惑了，你应该记住我开头所说的-在 linux 中，文件，文件夹，驱动，命令，脚本都视为文件）</span>
</span></code></pre></td></tr></table></div></figure>


<h2>touch 命令</h2>

<p>“touch”命令代表了将文件的访问和修改时间更新为当前时间。touch命令只会在文件不存在的时候才会创建它。如果文件已经存在了，它会更新时间戳，但是并不会改变文件的内容。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# touch tecmintfile
</span><span class='line'>
</span><span class='line'><span class="c"># 注意：touch 可以用来在用户拥有写权限的目录下创建不存在的文件。</span>
</span></code></pre></td></tr></table></div></figure>


<h2>chmod 命令</h2>

<p>“chmod”命令就是改变文件的模式位。chmod 会根据要求的模式来改变每个所给的文件，文件夹，脚本等等的文件模式（权限）。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># 在文件(文件夹或者其它，为了简单起见，我们就使用文件)中存在3中类型的权限</span>
</span><span class='line'>
</span><span class='line'>    Read <span class="o">(</span>r<span class="o">)=</span>4
</span><span class='line'>    Write<span class="o">(</span>w<span class="o">)=</span>2
</span><span class='line'>    Execute<span class="o">(</span>x<span class="o">)=</span>1
</span><span class='line'>
</span><span class='line'><span class="c"># 所以如果你想给文件只读权限，就设置为&#39;4&#39;;只写权限，设置权限为&#39;2&#39;;只执行权限，设置为 1 ; 读写权限，就是 4 + 2 = 6, 以此类推。</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 现在需要设置 3 种用户和用户组权限。第一个是拥有者，然后是用户所在的组，最后是其它用户。</span>
</span><span class='line'>rwxr-x--x   abc.sh
</span><span class='line'>
</span><span class='line'><span class="c"># 这里 root 的权限是 rwx（读写和执行权限），</span>
</span><span class='line'><span class="c"># 所属用户组权限是 r-x (只有读和执行权限, 没有写权限)，</span>
</span><span class='line'><span class="c"># 对于其它用户权限是 -x(只有只执行权限)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 为了改变它的权限，为拥有者，用户所在组和其它用户提供读，写，执行权限。</span>
</span><span class='line'>root@tecmint:~# chmod 777 abc.sh
</span><span class='line'>
</span><span class='line'><span class="c"># 三种都只有读写权限</span>
</span><span class='line'>root@tecmint:~# chmod 666 abc.sh
</span><span class='line'>
</span><span class='line'><span class="c"># 拥有者用户有读写和执行权限，用户所在的组和其它用户只有可执行权限</span>
</span><span class='line'>root@tecmint:~# chmod 711 abc.sh
</span><span class='line'>
</span><span class='line'><span class="c"># 注意：对于系统管理员和用户来说，这个命令是最有用的命令之一了。</span>
</span><span class='line'><span class="c"># 在多用户环境或者服务器上，对于某个用户，如果设置了文件不可访问，那么这个命令就可以解决，如果设置了错误的权限，那么也就提供了为授权的访问。</span>
</span></code></pre></td></tr></table></div></figure>


<h2>chown 命令</h2>

<p>“chown”命令就是改变文件拥有者和所在用户组。每个文件都属于一个用户组和一个用户。在你的目录下，使用&#8221;ls -l&#8221;,你就会看到像这样的东西。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# ls -l
</span><span class='line'>
</span><span class='line'>drwxr-xr-x 3 server root 4096 May 10 11:14 Binary
</span><span class='line'>drwxr-xr-x 2 server server 4096 May 13 09:42 Desktop
</span><span class='line'>
</span><span class='line'><span class="c"># 在这里，目录 Binary 属于用户&quot;server&quot;,和用户组&quot;root&quot;,而目录&quot;Desktop&quot;属于用户“server”和用户组&quot;server&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># “chown”命令用来改变文件的所有权，所以仅仅用来管理和提供文件的用户和用户组授权。</span>
</span><span class='line'>root@tecmint:~# chown server:server Binary
</span><span class='line'>
</span><span class='line'>drwxr-xr-x 3 server server 4096 May 10 11:14 Binary
</span><span class='line'>drwxr-xr-x 2 server server 4096 May 13 09:42 Desktop
</span><span class='line'>
</span><span class='line'><span class="c"># 注意：“chown”所给的文件改变用户和组的所有权到新的拥有者或者已经存在的用户或者用户组。</span>
</span></code></pre></td></tr></table></div></figure>


<h2>apt 命令</h2>

<p>Debian 系列以“apt”命令为基础，“apt”代表了 Advanced Package Tool。APT 是一个为 Debian 系列系统（Ubuntu，Kubuntu等等）开发的高级包管理器，在 Gnu/Linux 系统上，它会为包自动地，智能地搜索，安装，升级以及解决依赖。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# apt-get install mplayer
</span><span class='line'>
</span><span class='line'>Reading package lists... Done
</span><span class='line'>Building dependency tree
</span><span class='line'>Reading state information... Done
</span><span class='line'>The following package was automatically installed and is no longer required:
</span><span class='line'>  java-wrappers
</span><span class='line'>Use <span class="s1">&#39;apt-get autoremove&#39;</span> to remove it.
</span><span class='line'>The following extra packages will be installed:
</span><span class='line'>  esound-common libaudiofile1 libesd0 libopenal-data libopenal1 libsvga1 libvdpau1 libxvidcore4
</span><span class='line'>Suggested packages:
</span><span class='line'>  pulseaudio-esound-compat libroar-compat2 nvidia-vdpau-driver vdpau-driver mplayer-doc netselect fping
</span><span class='line'>The following NEW packages will be installed:
</span><span class='line'>  esound-common libaudiofile1 libesd0 libopenal-data libopenal1 libsvga1 libvdpau1 libxvidcore4 mplayer
</span><span class='line'>0 upgraded, 9 newly installed, 0 to remove and 8 not upgraded.
</span><span class='line'>Need to get 3,567 kB of archives.
</span><span class='line'>After this operation, 7,772 kB of additional disk space will be used.
</span><span class='line'>Do you want to <span class="k">continue</span> <span class="o">[</span>Y/n<span class="o">]</span>? y
</span><span class='line'>
</span><span class='line'>root@tecmint:~# apt-get update
</span><span class='line'>
</span><span class='line'>Hit http://ppa.launchpad.net raring Release.gpg
</span><span class='line'>Hit http://ppa.launchpad.net raring Release.gpg
</span><span class='line'>Hit http://ppa.launchpad.net raring Release.gpg
</span><span class='line'>Hit http://ppa.launchpad.net raring Release.gpg
</span><span class='line'>Get:1 http://security.ubuntu.com raring-security Release.gpg <span class="o">[</span>933 B<span class="o">]</span>
</span><span class='line'>Hit http://in.archive.ubuntu.com raring Release.gpg
</span><span class='line'>Hit http://ppa.launchpad.net raring Release.gpg
</span><span class='line'>Get:2 http://security.ubuntu.com raring-security Release <span class="o">[</span>40.8 kB<span class="o">]</span>
</span><span class='line'>Ign http://ppa.launchpad.net raring Release.gpg
</span><span class='line'>Get:3 http://in.archive.ubuntu.com raring-updates Release.gpg <span class="o">[</span>933 B<span class="o">]</span>
</span><span class='line'>Hit http://ppa.launchpad.net raring Release.gpg
</span><span class='line'>Hit http://in.archive.ubuntu.com raring-backports Release.gpg
</span><span class='line'>
</span><span class='line'><span class="c"># 注意：上面的命令会导致系统整体的改变，所以需要 root 密码（查看提示符为&quot;#&quot;，而不是“$”）.和 yum 命令相比，Apt 更高级和智能。</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 见名知义，apt-cache 用来搜索包中是否包含子包 mplayer, apt-get 用来安装，升级所有的已安装的包到最新版。</span>
</span></code></pre></td></tr></table></div></figure>


<p>关于 apt-get 和 apt-cache 命令更多信息，请查看 <a href="http://www.tecmint.com/useful-basic-commands-of-apt-get-and-apt-cache-for-package-management/">25 APT-GET和APT-CACHE命令</a></p>

<h2>tar 命令</h2>

<p>“tar”命令是磁带归档(Tape Archive)，对创建一些文件的的归档和它们的解压很有用。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# tar -zxvf abc.tar.gz <span class="o">(</span>记住<span class="s1">&#39;z&#39;</span>代表了.tar.gz<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>root@tecmint:~# tar -jxvf abc.tar.bz2 <span class="o">(</span>记住<span class="s1">&#39;j&#39;</span>代表了.tar.bz2<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>root@tecmint:~# tar -cvf archieve.tar.gz<span class="o">(</span>.bz2<span class="o">)</span> /path/to/folder/abc
</span><span class='line'>
</span><span class='line'><span class="c"># 注意： &quot;tar.gz&quot;代表了使用 gzip 归档，“bar.bz2”使用 bzip 压缩的，它压缩的更好但是也更慢。</span>
</span></code></pre></td></tr></table></div></figure>


<p>了解更多&#8221;tar 命令&#8221;的例子，请查看 <a href="http://www.tecmint.com/18-tar-command-examples-in-linux/">18 Tar命名例子</a></p>

<h2>cal 命令</h2>

<p>“cal”（Calender），它用来显示当前月份或者未来或者过去任何年份中的月份。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# cal
</span><span class='line'>
</span><span class='line'>May 2013
</span><span class='line'>Su Mo Tu We Th Fr Sa
</span><span class='line'>          1  2  3  4
</span><span class='line'> 5  6  7  8  9 10 11
</span><span class='line'>12 13 14 15 16 17 18
</span><span class='line'>19 20 21 22 23 24 25
</span><span class='line'>26 27 28 29 30 31
</span><span class='line'>
</span><span class='line'><span class="c"># 显示已经过去的月份，1835 年 2 月</span>
</span><span class='line'>root@tecmint:~# cal 02 1835
</span><span class='line'>
</span><span class='line'>   February 1835
</span><span class='line'>Su Mo Tu We Th Fr Sa
</span><span class='line'> 1  2  3  4  5  6  7
</span><span class='line'> 8  9 10 11 12 13 14
</span><span class='line'>15 16 17 18 19 20 21
</span><span class='line'>22 23 24 25 26 27 28
</span><span class='line'>
</span><span class='line'><span class="c"># 显示未来的月份，2145 年 7 月。</span>
</span><span class='line'>root@tecmint:~# cal 07 2145
</span><span class='line'>
</span><span class='line'>     July 2145
</span><span class='line'>Su Mo Tu We Th Fr Sa
</span><span class='line'>             1  2  3
</span><span class='line'> 4  5  6  7  8  9 10
</span><span class='line'>11 12 13 14 15 16 17
</span><span class='line'>18 19 20 21 22 23 24
</span><span class='line'>25 26 27 28 29 30 31
</span><span class='line'>
</span><span class='line'><span class="c"># 注意： 你不需要往回调整日历 50 年，既不用复杂的数据计算你出生那天，也不用计算你的生日在哪天到来，因为它的最小单位是月，而不是日。</span>
</span></code></pre></td></tr></table></div></figure>


<h2>date 命令</h2>

<p>“date”命令使用标准的输出打印当前的日期和时间，也可以深入设置。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# date
</span><span class='line'>
</span><span class='line'>Fri May 17 14:13:29 IST 2013
</span><span class='line'>
</span><span class='line'>root@tecmint:~# date --set<span class="o">=</span><span class="s1">&#39;14 may 2013 13:57&#39;</span>
</span><span class='line'>
</span><span class='line'>Mon May 13 13:57:00 IST 2013
</span><span class='line'>
</span><span class='line'><span class="c"># 注意：这个命令在脚本中十分有用，以及基于时间和日期的脚本更完美。而且在终端中改变日期和时间，让你更专业！！！（当然你需要 root 权限才能操作这个，因为它是系统整体改变）</span>
</span></code></pre></td></tr></table></div></figure>


<h2>cat 命令</h2>

<p>“cat”代表了连结（Concatenation），连接两个或者更多文本文件或者以标准输出形式打印文件的内容。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# cat a.txt b.txt c.txt d.txt abcd.txt
</span><span class='line'>
</span><span class='line'>root@tecmint:~# cat abcd.txt
</span><span class='line'>....
</span><span class='line'>contents of file abcd
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'><span class="c"># 注意：“&gt;&gt;”和“&gt;”调用了追加符号。它们用来追加到文件里，而不是显示在标准输出上。“&gt;”符号会删除已存在的文件，然后创建一个新的文件。所以因为安全的原因，建议使用“&gt;&gt;”，它会写入到文件中，而不是覆盖或者删除。</span>
</span></code></pre></td></tr></table></div></figure>


<p>在深入探究之前，我必须让你知道通配符(你应该知道通配符，它出现在大多数电视选秀中)。通配符是 shell 的特色，和任何 GUI 文件管理器相比，它使命令行更强大有力！如你所看到那样，在一个图形文件管理器中，你想选择一大组文件，你通常不得不使用你的鼠标来选择它们。这可能觉得很简单，但是事实上，这种情形很让人沮丧！</p>

<p>例如，假如你有一个有很多很多各种类型的文件和子目录的目录，然后你决定移动所有文件名中包含“Linux”字样的 HTML 文件到另外一个目录。如何简单的完成这个？如果目录中包含了大量的不同名的 HTML 文件，你的任务很巨大，而不是简单了。</p>

<p>在 Linux CLI 中，这个任务就很简单，就好像只移动一个 HTML 文件，因为有 shell 的通配符，才会如此简单。这些是特殊的字符，允许你选择匹配某种字符模式的文件名。它帮助你来选择，即使是大量文件名中只有几个字符，而且在大多数情形中，它比使用鼠标选择文件更简单。</p>

<p>这里就是常用通配符列表：</p>

<pre><code>Wildcard Matches
*            零个或者更多字符
?            恰好一个字符
[abcde]             恰好列举中的一个字符
[a-e]          恰好在所给范围中的一个字符
[!abcde]        任何字符都不在列举中 
[!a-e]          任何字符都不在所给的范围中
{debian,linux}      恰好在所给选项中的一整个单词
</code></pre>

<p>! 叫做非，带&#8217;!&lsquo;的反向字符串为真</p>

<p>更多请阅读Linux cat 命令的实例 <a href="http://www.tecmint.com/13-basic-cat-command-examples-in-linux/">13 Linux中cat命令实例</a></p>

<h2>cp 命令</h2>

<p>“copy”就是复制。它会从一个地方复制一个文件到另外一个地方。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# cp /home/user/Downloads abc.tar.gz /home/user/Desktop <span class="o">(</span>Return 0 when sucess<span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 注意： cp，在 shell 脚本中是最常用的一个命令，而且它可以使用通配符（在前面一块中有所描述），来定制所需的文件的复制。</span>
</span></code></pre></td></tr></table></div></figure>


<h2>mv 命令</h2>

<p>“mv”命令将一个地方的文件移动到另外一个地方去。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# mv /home/user/Downloads abc.tar.gz /home/user/Desktop <span class="o">(</span>Return 0 when sucess<span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 注意：mv 命令可以使用通配符。mv 需谨慎使用，因为移动系统的或者未授权的文件不但会导致安全性问题，而且可能系统崩溃。</span>
</span></code></pre></td></tr></table></div></figure>


<h2>pwd 命令</h2>

<p>“pwd”（print working directory），在终端中显示当前工作目录的全路径。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# <span class="nb">pwd</span>
</span><span class='line'>
</span><span class='line'>/home/user/Desktop
</span><span class='line'>
</span><span class='line'><span class="c"># 注意： 这个命令并不会在脚本中经常使用，但是对于新手，当从连接到 nux 很久后在终端中迷失了路径，这绝对是救命稻草。</span>
</span></code></pre></td></tr></table></div></figure>


<h2>cd 命令</h2>

<p>最后，经常使用的“cd”命令代表了改变目录。它在终端中改变工作目录来执行，复制，移动，读，写等等操作。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# <span class="nb">cd</span> /home/user/Desktop
</span><span class='line'>
</span><span class='line'>server@localhost:~<span class="nv">$ </span><span class="nb">pwd</span>
</span><span class='line'>
</span><span class='line'>/home/user/Desktop
</span><span class='line'>
</span><span class='line'><span class="c"># 注意： 在终端中切换目录时，cd 就大显身手了。“cd ～”会改变工作目录为用户的家目录，而且当用户发现自己在终端中迷失了路径时，非常有用。“cd ..”从当前工作目录切换到(当前工作目录的)父目录。</span>
</span></code></pre></td></tr></table></div></figure>


<p>中级用户：下面你将学会如何进行自定义搜索，知道正在进行的进程和停掉进程，如何使用Linux的强势功能和如何在系统内编译C，C++和JAVA程序。</p>

<h2>命令: find</h2>

<p>搜索指定目录下的文件，从开始于父目录，然后搜索子目录。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# find -name *.sh
</span><span class='line'>
</span><span class='line'>./Desktop/load.sh
</span><span class='line'>./Desktop/test.sh
</span><span class='line'>./Desktop/shutdown.sh
</span><span class='line'>./Binary/firefox/run-mozilla.sh
</span><span class='line'>./Downloads/kdewebdev-3.5.8/quanta/scripts/externalpreview.sh
</span><span class='line'>./Downloads/kdewebdev-3.5.8/admin/doxygen.sh
</span><span class='line'>./Downloads/kdewebdev-3.5.8/admin/cvs.sh
</span><span class='line'>./Downloads/kdewebdev-3.5.8/admin/ltmain.sh
</span><span class='line'>./Downloads/wheezy-nv-install.sh
</span><span class='line'>
</span><span class='line'><span class="c"># 注意： `-name‘选项是搜索大小写敏感。可以使用`-iname‘选项，这样在搜索中可以忽略大小写。（* 是通配符，可以搜索所有的文件；‘.sh‘你可以使用文件名或者文件名的一部分来制定输出结果）</span>
</span><span class='line'>
</span><span class='line'>root@tecmint:~# find -iname *.SH <span class="o">(</span> find -iname *.Sh /  find -iname *.sH<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>./Desktop/load.sh
</span><span class='line'>./Desktop/test.sh
</span><span class='line'>./Desktop/shutdown.sh
</span><span class='line'>./Binary/firefox/run-mozilla.sh
</span><span class='line'>./Downloads/kdewebdev-3.5.8/quanta/scripts/externalpreview.sh
</span><span class='line'>./Downloads/kdewebdev-3.5.8/admin/doxygen.sh
</span><span class='line'>./Downloads/kdewebdev-3.5.8/admin/cvs.sh
</span><span class='line'>./Downloads/kdewebdev-3.5.8/admin/ltmain.sh
</span><span class='line'>./Downloads/wheezy-nv-install.sh
</span><span class='line'>
</span><span class='line'>root@tecmint:~# find -name *.tar.gz
</span><span class='line'>
</span><span class='line'>/var/www/modules/update/tests/aaa_update_test.tar.gz
</span><span class='line'>./var/cache/flashplugin-nonfree/install_flash_player_11_linux.i386.tar.gz
</span><span class='line'>./home/server/Downloads/drupal-7.22.tar.gz
</span><span class='line'>./home/server/Downloads/smtp-7.x-1.0.tar.gz
</span><span class='line'>./home/server/Downloads/noreqnewpass-7.x-1.2.tar.gz
</span><span class='line'>./usr/share/gettext/archive.git.tar.gz
</span><span class='line'>./usr/share/doc/apg/php.tar.gz
</span><span class='line'>./usr/share/doc/festival/examples/speech_pm_1.0.tar.gz
</span><span class='line'>./usr/share/doc/argyll/examples/spyder2.tar.gz
</span><span class='line'>./usr/share/usb_modeswitch/configPack.tar.gz
</span><span class='line'>
</span><span class='line'><span class="c"># 注意：以上命令查找根目录下和所有文件夹以及加载的设备的子目录下的所有包含‘tar.gz&#39;的文件。</span>
</span></code></pre></td></tr></table></div></figure>


<p>’find&#8217;命令的更详细信息请参考 <a href="http://www.tecmint.com/35-practical-examples-of-linux-find-command/">35 Find Command Examples in Linux</a></p>

<h2>命令: grep</h2>

<p>‘grep‘命令搜索指定文件中包含给定字符串或者单词的行。举例搜索‘/etc/passwd‘文件中的‘tecmint&#8217;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# grep tecmint /etc/passwd
</span><span class='line'>
</span><span class='line'>tecmint:x:1000:1000:Tecmint,,,:/home/tecmint:/bin/bash
</span><span class='line'>
</span><span class='line'><span class="c"># 使用’-i&#39;选项将忽略大小写。</span>
</span><span class='line'>root@tecmint:~# grep -i TECMINT /etc/passwd
</span><span class='line'>
</span><span class='line'>tecmint:x:1000:1000:Tecmint,,,:/home/tecmint:/bin/bash
</span><span class='line'>
</span><span class='line'><span class="c"># 使用’-r&#39;选项递归搜索所有自目录下包含字符串 “127.0.0.1“.的行。</span>
</span><span class='line'>
</span><span class='line'>root@tecmint:~# grep -r <span class="s2">&quot;127.0.0.1&quot;</span> /etc/
</span><span class='line'>
</span><span class='line'>/etc/vlc/lua/http/.hosts:127.0.0.1
</span><span class='line'>/etc/speech-dispatcher/modules/ivona.conf:#IvonaServerHost <span class="s2">&quot;127.0.0.1&quot;</span>
</span><span class='line'>/etc/mysql/my.cnf:bind-address      <span class="o">=</span> 127.0.0.1
</span><span class='line'>/etc/apache2/mods-available/status.conf:    Allow from 127.0.0.1 ::1
</span><span class='line'>/etc/apache2/mods-available/ldap.conf:    Allow from 127.0.0.1 ::1
</span><span class='line'>/etc/apache2/mods-available/info.conf:    Allow from 127.0.0.1 ::1
</span><span class='line'>/etc/apache2/mods-available/proxy_balancer.conf:#    Allow from 127.0.0.1 ::1
</span><span class='line'>/etc/security/access.conf:#+ : root : 127.0.0.1
</span><span class='line'>/etc/dhcp/dhclient.conf:#prepend domain-name-servers 127.0.0.1;
</span><span class='line'>/etc/dhcp/dhclient.conf:#  option domain-name-servers 127.0.0.1;
</span><span class='line'>/etc/init/network-interface.conf:   ifconfig lo 127.0.0.1 up <span class="o">||</span> <span class="nb">true</span>
</span><span class='line'>/etc/java-6-openjdk/net.properties:# localhost &amp; 127.0.0.1<span class="o">)</span>.
</span><span class='line'>/etc/java-6-openjdk/net.properties:# http.nonProxyHosts<span class="o">=</span>localhost|127.0.0.1
</span><span class='line'>/etc/java-6-openjdk/net.properties:# localhost &amp; 127.0.0.1<span class="o">)</span>.
</span><span class='line'>/etc/java-6-openjdk/net.properties:# ftp.nonProxyHosts<span class="o">=</span>localhost|127.0.0.1
</span><span class='line'>/etc/hosts:127.0.0.1    localhost
</span><span class='line'>
</span><span class='line'><span class="c"># 注意：您还可以使用以下选项：</span>
</span><span class='line'>
</span><span class='line'>    1. -w 搜索单词 <span class="o">(</span>egrep -w ‘word1|word2‘ /path/to/file<span class="o">)</span>。
</span><span class='line'>    2. -c 用于统计满足要求的行 <span class="o">(</span>i.e., total number of <span class="nb">times </span>the pattern matched<span class="o">)</span> <span class="o">(</span>grep -c ‘word‘ /path/to/file<span class="o">)</span>。
</span><span class='line'>    3. –color 彩色输出 <span class="o">(</span>grep –color server /etc/passwd<span class="o">)</span>。
</span></code></pre></td></tr></table></div></figure>


<h2>命令: man</h2>

<p>‘man‘是系统帮助页。Man 提供命令所有选项及用法的在线文档。几乎所有的命令都有它们的帮助页，例如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# man man
</span><span class='line'>
</span><span class='line'>MAN<span class="o">(</span>1<span class="o">)</span>                                                               Manual pager utils                                                              MAN<span class="o">(</span>1<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>NAME
</span><span class='line'>       man - an interface to the on-line reference manuals
</span><span class='line'>
</span><span class='line'>SYNOPSIS
</span><span class='line'>       man  <span class="o">[</span>-C  file<span class="o">]</span>  <span class="o">[</span>-d<span class="o">]</span>  <span class="o">[</span>-D<span class="o">]</span>  <span class="o">[</span>--warnings<span class="o">[=</span>warnings<span class="o">]]</span>  <span class="o">[</span>-R  encoding<span class="o">]</span>  <span class="o">[</span>-L  locale<span class="o">]</span>  <span class="o">[</span>-m  system<span class="o">[</span>,...<span class="o">]]</span>  <span class="o">[</span>-M  path<span class="o">]</span>  <span class="o">[</span>-S list<span class="o">]</span> <span class="o">[</span>-e extension<span class="o">]</span> <span class="o">[</span>-i|-I<span class="o">]</span>
</span><span class='line'>       <span class="o">[</span>--regex|--wildcard<span class="o">]</span> <span class="o">[</span>--names-only<span class="o">]</span> <span class="o">[</span>-a<span class="o">]</span> <span class="o">[</span>-u<span class="o">]</span> <span class="o">[</span>--no-subpages<span class="o">]</span> <span class="o">[</span>-P pager<span class="o">]</span> <span class="o">[</span>-r prompt<span class="o">]</span> <span class="o">[</span>-7<span class="o">]</span> <span class="o">[</span>-E encoding<span class="o">]</span> <span class="o">[</span>--no-hyphenation<span class="o">]</span> <span class="o">[</span>--no-justification<span class="o">]</span>  <span class="o">[</span>-p
</span><span class='line'>       string<span class="o">]</span> <span class="o">[</span>-t<span class="o">]</span> <span class="o">[</span>-T<span class="o">[</span>device<span class="o">]]</span> <span class="o">[</span>-H<span class="o">[</span>browser<span class="o">]]</span> <span class="o">[</span>-X<span class="o">[</span>dpi<span class="o">]]</span> <span class="o">[</span>-Z<span class="o">]</span> <span class="o">[[</span>section<span class="o">]</span> page ...<span class="o">]</span> ...
</span><span class='line'>       man -k <span class="o">[</span>apropos options<span class="o">]</span> regexp ...
</span><span class='line'>       man -K <span class="o">[</span>-w|-W<span class="o">]</span> <span class="o">[</span>-S list<span class="o">]</span> <span class="o">[</span>-i|-I<span class="o">]</span> <span class="o">[</span>--regex<span class="o">]</span> <span class="o">[</span>section<span class="o">]</span> term ...
</span><span class='line'>       man -f <span class="o">[</span>whatis options<span class="o">]</span> page ...
</span><span class='line'>       man -l <span class="o">[</span>-C file<span class="o">]</span> <span class="o">[</span>-d<span class="o">]</span> <span class="o">[</span>-D<span class="o">]</span> <span class="o">[</span>--warnings<span class="o">[=</span>warnings<span class="o">]]</span> <span class="o">[</span>-R encoding<span class="o">]</span> <span class="o">[</span>-L locale<span class="o">]</span> <span class="o">[</span>-P pager<span class="o">]</span> <span class="o">[</span>-r prompt<span class="o">]</span> <span class="o">[</span>-7<span class="o">]</span> <span class="o">[</span>-E encoding<span class="o">]</span> <span class="o">[</span>-p string<span class="o">]</span> <span class="o">[</span>-t<span class="o">]</span> <span class="o">[</span>-T<span class="o">[</span>device<span class="o">]]</span>
</span><span class='line'>       <span class="o">[</span>-H<span class="o">[</span>browser<span class="o">]]</span> <span class="o">[</span>-X<span class="o">[</span>dpi<span class="o">]]</span> <span class="o">[</span>-Z<span class="o">]</span> file ...
</span><span class='line'>       man -w|-W <span class="o">[</span>-C file<span class="o">]</span> <span class="o">[</span>-d<span class="o">]</span> <span class="o">[</span>-D<span class="o">]</span> page ...
</span><span class='line'>       man -c <span class="o">[</span>-C file<span class="o">]</span> <span class="o">[</span>-d<span class="o">]</span> <span class="o">[</span>-D<span class="o">]</span> page ...
</span><span class='line'>       man <span class="o">[</span>-hV<span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 上面是 man 命令的系统帮助页，类似的有 cat 和 ls 的帮助页。</span>
</span><span class='line'><span class="c"># 注意：系统帮助页是为了命令的使用和学习而设计的。</span>
</span></code></pre></td></tr></table></div></figure>


<h2>命令: ps</h2>

<p>ps命令给出正在运行的某个进程的状态，每个进程有特定的 id 成为 PID。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# ps
</span><span class='line'>
</span><span class='line'> PID TTY          TIME CMD
</span><span class='line'> 4170 pts/1    00:00:00 bash
</span><span class='line'> 9628 pts/1    00:00:00 ps
</span><span class='line'>
</span><span class='line'> <span class="c"># 使用‘-A‘选项可以列出所有的进程及其 PID。</span>
</span><span class='line'>
</span><span class='line'>root@tecmint:~# ps -A
</span><span class='line'>
</span><span class='line'> PID TTY          TIME CMD
</span><span class='line'>    1 ?        00:00:01 init
</span><span class='line'>    2 ?        00:00:00 kthreadd
</span><span class='line'>    3 ?        00:00:01 ksoftirqd/0
</span><span class='line'>    5 ?        00:00:00 kworker/0:0H
</span><span class='line'>    7 ?        00:00:00 kworker/u:0H
</span><span class='line'>    8 ?        00:00:00 migration/0
</span><span class='line'>    9 ?        00:00:00 rcu_bh
</span><span class='line'>....
</span><span class='line'>
</span><span class='line'><span class="c"># 注意：当你要知道有哪些进程在运行或者需要知道想杀死的进程 PID 时 ps 命令很管用。你可以把它与‘grep‘合用来查询指定的输出结果，例如：</span>
</span><span class='line'>root@tecmint:~# ps -A | grep -i ssh
</span><span class='line'>
</span><span class='line'> 1500 ?        00:09:58 sshd
</span><span class='line'> 4317 ?        00:00:00 sshd
</span><span class='line'>
</span><span class='line'> <span class="c"># ps 命令与 grep 命令用管道线分割可以得到我们想要的结果。</span>
</span></code></pre></td></tr></table></div></figure>


<h2>命令: kill</h2>

<p>也许你从命令的名字已经猜出是做什么的了,kill 是用来杀死已经无关紧要或者没有响应的进程.它是一个非常有用的命令,而不是非常非常有用.你可能很熟悉 Windows 下要杀死进程可能需要频繁重启机器因为一个在运行的进程大部分情况下不能够杀死,即使杀死了进程也需要重新启动操作系统才能生效.但在 linux 环境下,事情不是这样的.你可以杀死一个进程并且重启它而不是重启整个操作系统.</p>

<p>杀死一个进程需要知道进程的 PID.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># 假设你想杀死已经没有响应的‘apache2&#39;进程,运行如下命令:</span>
</span><span class='line'>root@tecmint:~# ps -A | grep -i apache2
</span><span class='line'>
</span><span class='line'>1285 ?        00:00:00 apache2
</span><span class='line'>
</span><span class='line'><span class="c"># 搜索‘apache2&#39;进程,找到 PID 并杀掉它.例如:在本例中‘apache2&#39;进程的 PID 是 1285..</span>
</span><span class='line'>root@tecmint:~# <span class="nb">kill </span>1285 <span class="o">(</span>to <span class="nb">kill </span>the process apache2<span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 注意:每次你重新运行一个进程或者启动系统,每个进程都会生成一个新的 PID.你可以使用 ps 命令获得当前运行进程的 PID.</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 另一个杀死进程的方法是:</span>
</span><span class='line'>root@tecmint:~# pkill apache2
</span><span class='line'>
</span><span class='line'><span class="c"># 注意:kill 需要 PID 作为参数,pkill 可以选择应用的方式,比如指定进程的所有者等.</span>
</span></code></pre></td></tr></table></div></figure>


<h2>命令: whereis</h2>

<p>whereis的作用是用来定位命令的二进制文件\资源\或者帮助页.举例来说,获得ls和kill命令的二进制文件/资源以及帮助页:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# whereis ls
</span><span class='line'>
</span><span class='line'>ls: /bin/ls /usr/share/man/man1/ls.1.gz
</span><span class='line'>
</span><span class='line'>root@tecmint:~# whereis <span class="nb">kill</span>
</span><span class='line'>
</span><span class='line'><span class="nb">kill</span>: /bin/kill /usr/share/man/man2/kill.2.gz /usr/share/man/man1/kill.1.gz
</span><span class='line'>
</span><span class='line'><span class="c"># 注意:当需要知道二进制文件保存位置时有用.</span>
</span></code></pre></td></tr></table></div></figure>


<h2>命令: service</h2>

<p>‘service‘命令控制服务的启动、停止和重启，它让你能够不重启整个系统就可以让配置生效以开启、停止或者重启某个服务。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># 在 Ubuntu 上启动 apache2 server：</span>
</span><span class='line'>root@tecmint:~# service apache2 start
</span><span class='line'>
</span><span class='line'> * Starting web server apache2                                                                                                                                 apache2: Could not reliably determine the server<span class="s1">&#39;s fully qualified domain name, using 127.0.1.1 for ServerName</span>
</span><span class='line'><span class="s1">httpd (pid 1285) already running                        [ OK ]</span>
</span><span class='line'>
</span><span class='line'><span class="s1"># 重启 apache2 server：</span>
</span><span class='line'><span class="s1">root@tecmint:~# service apache2 restart</span>
</span><span class='line'>
</span><span class='line'><span class="s1">* Restarting web server apache2                                                                                                                               apache2: Could not reliably determine the server&#39;</span>s fully qualified domain name, using 127.0.1.1 <span class="k">for </span>ServerName
</span><span class='line'> ... waiting .apache2: Could not reliably determine the server<span class="s1">&#39;s fully qualified domain name, using 127.0.1.1 for ServerName  [ OK ]</span>
</span><span class='line'>
</span><span class='line'><span class="s1"> # 停止 apache2 server：</span>
</span><span class='line'><span class="s1">root@tecmint:~# service apache2 stop</span>
</span><span class='line'>
</span><span class='line'><span class="s1"> * Stopping web server apache2                                                                                                                                 apache2: Could not reliably determine the server&#39;</span>s fully qualified domain name, using 127.0.1.1 <span class="k">for </span>ServerName
</span><span class='line'> ... waiting                                                                <span class="o">[</span> OK <span class="o">]</span>
</span><span class='line'>
</span><span class='line'> <span class="c"># 注意：要想使用 service 命令，进程的脚本必须放在‘/etc/init.d‘，并且路径必须在指定的位置。</span>
</span><span class='line'> <span class="c"># 如果要运行“service apache2 start”实际上实在执行“service /etc/init.d/apache2 start”.</span>
</span></code></pre></td></tr></table></div></figure>


<h2>命令: alias</h2>

<p>alias 是一个系统自建的 shell 命令，允许你为名字比较长的或者经常使用的命令指定别名。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># 我经常用‘ls -l‘命令，它有五个字符（包括空格）。于是我为它创建了一个别名‘l&#39;。</span>
</span><span class='line'>root@tecmint:~# <span class="nb">alias </span><span class="nv">l</span><span class="o">=</span><span class="s1">&#39;ls -l&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 试试它是否能用：</span>
</span><span class='line'>root@tecmint:~# l
</span><span class='line'>
</span><span class='line'>total 36
</span><span class='line'>drwxr-xr-x 3 tecmint tecmint 4096 May 10 11:14 Binary
</span><span class='line'>drwxr-xr-x 3 tecmint tecmint 4096 May 21 11:21 Desktop
</span><span class='line'>drwxr-xr-x 2 tecmint tecmint 4096 May 21 15:23 Documents
</span><span class='line'>drwxr-xr-x 8 tecmint tecmint 4096 May 20 14:56 Downloads
</span><span class='line'>drwxr-xr-x 2 tecmint tecmint 4096 May  7 16:58 Music
</span><span class='line'>drwxr-xr-x 2 tecmint tecmint 4096 May 20 16:17 Pictures
</span><span class='line'>drwxr-xr-x 2 tecmint tecmint 4096 May  7 16:58 Public
</span><span class='line'>drwxr-xr-x 2 tecmint tecmint 4096 May  7 16:58 Templates
</span><span class='line'>drwxr-xr-x 2 tecmint tecmint 4096 May  7 16:58 Videos
</span><span class='line'>
</span><span class='line'><span class="c"># 去掉’l&#39;别名，要使用 unalias 命令：</span>
</span><span class='line'>root@tecmint:~# <span class="nb">unalias </span>l
</span><span class='line'>
</span><span class='line'><span class="c"># 再试试：</span>
</span><span class='line'>root@tecmint:~# l
</span><span class='line'>
</span><span class='line'>bash: l: <span class="nb">command </span>not found
</span></code></pre></td></tr></table></div></figure>


<h2>命令: df</h2>

<p>报告系统的磁盘使用情况。在跟踪磁盘使用情况方面对于普通用户和系统管理员都很有用。 ‘df‘ 通过检查目录大小工作，但这一数值仅当文件关闭时才得到更新。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# df
</span><span class='line'>
</span><span class='line'>Filesystem     1K-blocks    Used Available Use% Mounted on
</span><span class='line'>/dev/sda1       47929224 7811908  37675948  18% /
</span><span class='line'>none                   4       0         4   0% /sys/fs/cgroup
</span><span class='line'>udev             1005916       4   1005912   1% /dev
</span><span class='line'>tmpfs             202824     816    202008   1% /run
</span><span class='line'>none                5120       0      5120   0% /run/lock
</span><span class='line'>none             1014120     628   1013492   1% /run/shm
</span><span class='line'>none              102400      44    102356   1% /run/user
</span><span class='line'>/dev/sda5         184307   79852     94727  46% /boot
</span><span class='line'>/dev/sda7       95989516   61104  91045676   1% /data
</span><span class='line'>/dev/sda8       91953192   57032  87218528   1% /personal
</span></code></pre></td></tr></table></div></figure>


<p>‘df’命令的更多例子请参阅 <a href="http://www.tecmint.com/how-to-check-disk-space-in-linux/">12 df Command Examples in Linux.</a></p>

<h2>命令: du</h2>

<p>估计文件的空间占用。 逐层统计文件（例如以递归方式）并输出摘要。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# du
</span><span class='line'>
</span><span class='line'>8       ./Daily Pics/wp-polls/images/default_gradient
</span><span class='line'>8       ./Daily Pics/wp-polls/images/default
</span><span class='line'>32      ./Daily Pics/wp-polls/images
</span><span class='line'>8       ./Daily Pics/wp-polls/tinymce/plugins/polls/langs
</span><span class='line'>8       ./Daily Pics/wp-polls/tinymce/plugins/polls/img
</span><span class='line'>28      ./Daily Pics/wp-polls/tinymce/plugins/polls
</span><span class='line'>32      ./Daily Pics/wp-polls/tinymce/plugins
</span><span class='line'>36      ./Daily Pics/wp-polls/tinymce
</span><span class='line'>580     ./Daily Pics/wp-polls
</span><span class='line'>1456    ./Daily Pics
</span><span class='line'>36      ./Plugins/wordpress-author-box
</span><span class='line'>16180   ./Plugins
</span><span class='line'>12      ./May Articles 2013/Xtreme Download Manager
</span><span class='line'>4632    ./May Articles 2013/XCache
</span><span class='line'>
</span><span class='line'><span class="c"># 注意: ‘df‘只显示文件系统的使用统计，但‘du‘统计目录内容。</span>
</span></code></pre></td></tr></table></div></figure>


<p>‘du‘命令的更详细信息请参阅 <a href="http://www.tecmint.com/check-linux-disk-usage-of-files-and-directories/">10 du (Disk Usage) Commands</a>.</p>

<h2>命令: rm</h2>

<p>&lsquo;rm&rsquo; 标准移除命令。 rm 可以用来删除文件和目录。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># 删除目录</span>
</span><span class='line'>root@tecmint:~# rm PassportApplicationForm_Main_English_V1.0
</span><span class='line'>
</span><span class='line'>rm: cannot remove <span class="s1">&#39;PassportApplicationForm_Main_English_V1.0&#39;</span>: Is a directory
</span><span class='line'>
</span><span class='line'><span class="c"># &#39;rm&#39; 不能直接删除目录,需要加上相应的&#39;-rf&#39;参数才可以。</span>
</span><span class='line'>root@tecmint:~# rm -rf PassportApplicationForm_Main_English_V1.0
</span><span class='line'>
</span><span class='line'><span class="c"># 警告: &quot;rm -rf&quot; 命令是一个破坏性的命令,假如你不小心删除一个错误的目录。一旦你使用&#39;rm -rf&#39; 删除一个目录,在目录中所有的文件包括目录本身会被永久的删除,所以使用这个命令要非常小心。</span>
</span></code></pre></td></tr></table></div></figure>


<h2>命令: echo</h2>

<p>echo 的功能正如其名，就是基于标准输出打印一段文本。它和 shell 无关，shell 也不读取通过 echo 命令打印出的内容。然而在一种交互式脚本中，echo 通过终端将信息传递给用户。它是在脚本语言，交互式脚本语言中经常用到的命令。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# <span class="nb">echo</span> <span class="s2">&quot;Tecmint.com is a very good website&quot;</span>
</span><span class='line'>
</span><span class='line'>Tecmint.com is a very good website
</span><span class='line'>
</span><span class='line'><span class="c"># 创建一小段交互式脚本</span>
</span><span class='line'>
</span><span class='line'>    1. 在桌面上新建一个文件，命名为 ‘interactive_shell.sh‘  <span class="o">(</span>记住必须带 ‘.sh‘扩展名<span class="o">)</span>。
</span><span class='line'>    2. 复制粘贴如下脚本代码，确保和下面的一致。
</span><span class='line'>
</span><span class='line'>        <span class="c">#!/bin/bash</span>
</span><span class='line'>        <span class="nb">echo</span> <span class="s2">&quot;Please enter your name:&quot;</span>
</span><span class='line'>        <span class="nb">read </span>name
</span><span class='line'>        <span class="nb">echo</span> <span class="s2">&quot;Welcome to Linux $name&quot;</span>
</span><span class='line'>
</span><span class='line'>    3. 接下来，设置执行权限并运行脚本。
</span><span class='line'>
</span><span class='line'>        root@tecmint:~# chmod 777 interactive_shell.sh
</span><span class='line'>
</span><span class='line'>        root@tecmint:~# ./interactive_shell.sh
</span><span class='line'>
</span><span class='line'>        Please enter your name:
</span><span class='line'>        Ravi Saive
</span><span class='line'>        Welcome to Linux Ravi Saive
</span><span class='line'>
</span><span class='line'><span class="c"># 注意: ‘#!/bin/bash‘ 告诉 shell 这是一个脚本，并且在脚本首行写上这句话是个好习惯。. ‘read‘ 读取给定的输出.</span>
</span></code></pre></td></tr></table></div></figure>


<h2>命令: passwd</h2>

<p>这是一个很重要的命令，在终端中用来改变自己密码很有用。显然的，因为安全的原因，你需要知道当前的密码。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# passwd
</span><span class='line'>
</span><span class='line'>Changing password <span class="k">for </span>tecmint.
</span><span class='line'><span class="o">(</span>current<span class="o">)</span> UNIX password: ********
</span><span class='line'>Enter new UNIX password: ********
</span><span class='line'>Retype new UNIX password: ********
</span><span class='line'>Password unchanged   <span class="o">[</span>这里表示密码未改变，例如：新密码<span class="o">=</span>旧密码<span class="o">]</span>
</span><span class='line'>Enter new UNIX password: <span class="c">#####</span>
</span><span class='line'>Retype new UNIX password:#####
</span></code></pre></td></tr></table></div></figure>


<h2>命令: lpr</h2>

<p>这个命令用来在命令行上将指定的文件在指定的打印机上打印。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>root@tecmint:~# lpr -P deskjet-4620-series 1-final.pdf
</span><span class='line'>
</span><span class='line'><span class="c"># 注意： &quot;lpq&quot;命令让你查看打印机的状态（是开启状态还是关闭状态）和等待打印中的工作(文件)的状态。</span>
</span></code></pre></td></tr></table></div></figure>


<h2>命令: cmp</h2>

<p>比较两个任意类型的文件并将结果输出至标准输出。如果两个文件相同， ‘cmp‘默认返回0；如果不同，将显示不同的字节数和第一处不同的位置。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># 以下面两个文件为例：</span>
</span><span class='line'><span class="c"># file1.txt</span>
</span><span class='line'>root@tecmint:~# cat file1.txt
</span><span class='line'>
</span><span class='line'>Hi My name is Tecmint
</span><span class='line'>
</span><span class='line'><span class="c"># file2.txt</span>
</span><span class='line'>root@tecmint:~# cat file2.txt
</span><span class='line'>
</span><span class='line'>Hi My name is tecmint <span class="o">[</span>dot<span class="o">]</span> com
</span><span class='line'>
</span><span class='line'><span class="c"># 比较一下这两个文件，看看命令的输出。</span>
</span><span class='line'>root@tecmint:~# cmp file1.txt file2.txt
</span><span class='line'>
</span><span class='line'>file1.txt file2.txt differ: byte 15, line 1
</span></code></pre></td></tr></table></div></figure>


<h2>命令: wget</h2>

<p>Wget是用于非交互式（例如后台）下载文件的免费工具.支持HTTP, HTTPS, FTP协议和 HTTP 代理。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># 使用wget下载ffmpeg</span>
</span><span class='line'>root@tecmint:~# wget http://downloads.sourceforge.net/project/ffmpeg-php/ffmpeg-php/0.6.0/ffmpeg-php-0.6.0.tbz2
</span><span class='line'>
</span><span class='line'>--2013-05-22 18:54:52--  http://downloads.sourceforge.net/project/ffmpeg-php/ffmpeg-php/0.6.0/ffmpeg-php-0.6.0.tbz2
</span><span class='line'>Resolving downloads.sourceforge.net <span class="o">(</span>downloads.sourceforge.net<span class="o">)</span>... 216.34.181.59
</span><span class='line'>Connecting to downloads.sourceforge.net <span class="o">(</span>downloads.sourceforge.net<span class="o">)</span>|216.34.181.59|:80... connected.
</span><span class='line'>HTTP request sent, awaiting response... 302 Found
</span><span class='line'>Location: http://kaz.dl.sourceforge.net/project/ffmpeg-php/ffmpeg-php/0.6.0/ffmpeg-php-0.6.0.tbz2 <span class="o">[</span>following<span class="o">]</span>
</span><span class='line'>--2013-05-22 18:54:54--  http://kaz.dl.sourceforge.net/project/ffmpeg-php/ffmpeg-php/0.6.0/ffmpeg-php-0.6.0.tbz2
</span><span class='line'>Resolving kaz.dl.sourceforge.net <span class="o">(</span>kaz.dl.sourceforge.net<span class="o">)</span>... 92.46.53.163
</span><span class='line'>Connecting to kaz.dl.sourceforge.net <span class="o">(</span>kaz.dl.sourceforge.net<span class="o">)</span>|92.46.53.163|:80... connected.
</span><span class='line'>HTTP request sent, awaiting response... 200 OK
</span><span class='line'>Length: 275557 <span class="o">(</span>269K<span class="o">)</span> <span class="o">[</span>application/octet-stream<span class="o">]</span>
</span><span class='line'>Saving to: ‘ffmpeg-php-0.6.0.tbz2’
</span><span class='line'>
</span><span class='line'>100%<span class="o">[===========================================================================</span>&gt;<span class="o">]</span> 2,75,557    67.8KB/s   in 4.0s
</span><span class='line'>
</span><span class='line'>2013-05-22 18:55:00 <span class="o">(</span>67.8 KB/s<span class="o">)</span> - ‘ffmpeg-php-0.6.0.tbz2’ saved <span class="o">[</span>275557/275557<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h2>命令: mount</h2>

<p>mount 是一个很重要的命令，用来挂载不能自动挂载的文件系统。你需要 root 权限挂载设备。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># 在插入你的文件系统后，首先运行&quot;lsblk&quot;命令，识别出你的设备，然后把分配的设备名记下来。</span>
</span><span class='line'>root@tecmint:~# lsblk
</span><span class='line'>
</span><span class='line'>NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
</span><span class='line'>sda      8:0    0 931.5G  0 disk
</span><span class='line'>├─sda1   8:1    0 923.6G  0 part /
</span><span class='line'>├─sda2   8:2    0     1K  0 part
</span><span class='line'>└─sda5   8:5    0   7.9G  0 part <span class="o">[</span>SWAP<span class="o">]</span>
</span><span class='line'>sr0     11:0    1  1024M  0 rom
</span><span class='line'>sdb      8:16   1   3.7G  0 disk
</span><span class='line'>└─sdb1   8:17   1   3.7G  0 part
</span><span class='line'>
</span><span class='line'><span class="c"># 从这个输出上来看，很明显我插入的是 4GB 的 U 盘，因而“sdb1”就是要挂载上来的文件系统。以 root 用户操作，然后切换到 /dev 目录，它是所有文件系统挂载的地方。</span>
</span><span class='line'>root@tecmint:~# su
</span><span class='line'>Password:
</span><span class='line'>
</span><span class='line'>root@tecmint:~# <span class="nb">cd</span> /dev
</span><span class='line'>
</span><span class='line'><span class="c"># 创建一个任何名字的目录，但是最好和引用相关。</span>
</span><span class='line'>root@tecmint:~# mkdir usb
</span><span class='line'>
</span><span class='line'><span class="c"># 现在将“sdb1”文件系统挂载到“usb”目录.</span>
</span><span class='line'>root@tecmint:~# mount /dev/sdb1 /dev/usb
</span></code></pre></td></tr></table></div></figure>


<h2>命令: gcc</h2>

<p>gcc 是 Linux 环境下 C 语言的内建编译器。下面是一个简单的 C 程序，在桌面上保存为 Hello.c （记住必须要有‘.c‘扩展名）。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Hello world</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># 编译</span>
</span><span class='line'>root@tecmint:~# gcc Hello.c
</span><span class='line'>
</span><span class='line'><span class="c"># 运行</span>
</span><span class='line'>root@tecmint:~# ./a.out
</span><span class='line'>
</span><span class='line'>Hello world
</span><span class='line'>
</span><span class='line'><span class="c"># 注意: 编译 C 程序时，输出会自动保存到一个名为“a.out”的新文件，因此每次编译C程序“a.out”都会被修改。 因此编译期间最好定义输出文件名.，这样就不会有覆盖输出文件的风险了。</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 用这种方法编译</span>
</span><span class='line'>root@tecmint:~# gcc -o Hello Hello.c
</span><span class='line'>
</span><span class='line'><span class="c"># 这里‘-o‘将输出写到‘Hello‘文件而不是 ‘a.out‘。再运行一次。</span>
</span><span class='line'>root@tecmint:~# ./Hello
</span><span class='line'>
</span><span class='line'>Hello world
</span></code></pre></td></tr></table></div></figure>


<h2>命令: g++</h2>

<p>g++ 是 C++ 的内建编译器。下面是一个简单的 C++ 程序，在桌面上保存为 Add.cpp （记住必须要有‘.cpp‘扩展名）。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#include &lt;iostream&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">a</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">b</span><span class="p">;</span>
</span><span class='line'>    <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">&quot;Enter first number:</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">a</span><span class="p">;</span>
</span><span class='line'>    <span class="n">cout</span> <span class="o">&lt;&lt;</span><span class="s">&quot;Enter the second number:</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">cin</span><span class="o">&gt;&gt;</span> <span class="n">b</span><span class="p">;</span>
</span><span class='line'>    <span class="n">cin</span><span class="p">.</span><span class="n">ignore</span><span class="p">();</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">result</span> <span class="o">=</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span><span class="p">;</span>
</span><span class='line'>    <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">&quot;Result is&quot;</span><span class="o">&lt;&lt;</span><span class="s">&quot;  &quot;</span><span class="o">&lt;&lt;</span><span class="n">result</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
</span><span class='line'>    <span class="n">cin</span><span class="p">.</span><span class="n">get</span><span class="p">();</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># 编译</span>
</span><span class='line'>root@tecmint:~# g++ Add.cpp
</span><span class='line'>
</span><span class='line'><span class="c"># 运行</span>
</span><span class='line'>root@tecmint:~# ./a.out
</span><span class='line'>
</span><span class='line'>Enter first number:
</span><span class='line'>...
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'><span class="c"># 注意：编译 C++ 程序时，输出会自动保存到一个名为“a.out”的新文件，因此每次编译 C++ 程序 “a.out”都会被修改。 因此编译期间最好定义输出文件名.，这样就不会有覆盖输出文件的风险了。</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 用这种方法编译</span>
</span><span class='line'>root@tecmint:~# g++ -o Add Add.cpp
</span><span class='line'>
</span><span class='line'><span class="c"># 运行</span>
</span><span class='line'>root@tecmint:~# ./Add
</span><span class='line'>
</span><span class='line'>Enter first number:
</span><span class='line'>...
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<h2>命令：java</h2>

<p>Java 是世界上使用最广泛的编程语言之一. 它也被认为是高效, 安全和可靠的编程语言. 现在大多数基于网络的服务都使用 Java实 现.</p>

<p>拷贝以下代码到一个文件就可以创建一个简单的 Java 程序. 不妨把文件命名为 tecmint.java (记住：&#8217;.java&#8217;扩展名是必需的).</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">class</span> <span class="nc">tecmint</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">arguments</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Tecmint &quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># 用 javac 编译 tecmint.java</span>
</span><span class='line'>root@tecmint:~# javac tecmint.java
</span><span class='line'>
</span><span class='line'><span class="c"># 运行</span>
</span><span class='line'>root@tecmint:~# java tecmint
</span><span class='line'>
</span><span class='line'><span class="c"># 注意：几乎所有的 Linux 发行版都带有 gcc 编译器, 大多数发行版都内建了 g++ 和 java 编译器, 有些也可能没有. 你可以用 apt 或 yum 安装需要的包.</span>
</span></code></pre></td></tr></table></div></figure>


<p>高级用户：以下将解释管理 Linux 服务器所需的一些命令。</p>

<h2>命令：ifconfig</h2>

<p>ifconfig 用来配置常驻内核的网络接口信息。在系统启动必要时用来设置网络适配器的信息。之后，它通常是只需要在调试时或当系统需要调整时使用。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># 检查活动网络适配器</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>ifconfig
</span><span class='line'>
</span><span class='line'>eth0      Link encap:Ethernet  HWaddr 40:2C:F4:EA:CF:0E
</span><span class='line'>          inet addr:192.168.1.3  Bcast:192.168.1.255  Mask:255.255.255.0
</span><span class='line'>          inet6 addr: fe80::422c:f4ff:feea:cf0e/64 Scope:Link
</span><span class='line'>          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
</span><span class='line'>          RX packets:163843 errors:0 dropped:0 overruns:0 frame:0
</span><span class='line'>          TX packets:124990 errors:0 dropped:0 overruns:0 carrier:0
</span><span class='line'>          collisions:0 txqueuelen:1000
</span><span class='line'>          RX bytes:154389832 <span class="o">(</span>147.2 MiB<span class="o">)</span>  TX bytes:65085817 <span class="o">(</span>62.0 MiB<span class="o">)</span>
</span><span class='line'>          Interrupt:20 Memory:f7100000-f7120000
</span><span class='line'>
</span><span class='line'>lo        Link encap:Local Loopback
</span><span class='line'>          inet addr:127.0.0.1  Mask:255.0.0.0
</span><span class='line'>          inet6 addr: ::1/128 Scope:Host
</span><span class='line'>          UP LOOPBACK RUNNING  MTU:16436  Metric:1
</span><span class='line'>          RX packets:78 errors:0 dropped:0 overruns:0 frame:0
</span><span class='line'>          TX packets:78 errors:0 dropped:0 overruns:0 carrier:0
</span><span class='line'>          collisions:0 txqueuelen:0
</span><span class='line'>          RX bytes:4186 <span class="o">(</span>4.0 KiB<span class="o">)</span>  TX bytes:4186 <span class="o">(</span>4.0 KiB<span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 检查所有的网络适配器</span>
</span><span class='line'><span class="c"># “-a”参数用来显示所有网络适配器(网卡)的详细信息,包括那些停用的适配器。</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>ifconfig -a
</span><span class='line'>
</span><span class='line'>eth0      Link encap:Ethernet  HWaddr 40:2C:F4:EA:CF:0E
</span><span class='line'>          inet addr:192.168.1.3  Bcast:192.168.1.255  Mask:255.255.255.0
</span><span class='line'>          inet6 addr: fe80::422c:f4ff:feea:cf0e/64 Scope:Link
</span><span class='line'>          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
</span><span class='line'>          RX packets:163843 errors:0 dropped:0 overruns:0 frame:0
</span><span class='line'>          TX packets:124990 errors:0 dropped:0 overruns:0 carrier:0
</span><span class='line'>          collisions:0 txqueuelen:1000
</span><span class='line'>          RX bytes:154389832 <span class="o">(</span>147.2 MiB<span class="o">)</span>  TX bytes:65085817 <span class="o">(</span>62.0 MiB<span class="o">)</span>
</span><span class='line'>          Interrupt:20 Memory:f7100000-f7120000
</span><span class='line'>
</span><span class='line'>lo        Link encap:Local Loopback
</span><span class='line'>          inet addr:127.0.0.1  Mask:255.0.0.0
</span><span class='line'>          inet6 addr: ::1/128 Scope:Host
</span><span class='line'>          UP LOOPBACK RUNNING  MTU:16436  Metric:1
</span><span class='line'>          RX packets:78 errors:0 dropped:0 overruns:0 frame:0
</span><span class='line'>          TX packets:78 errors:0 dropped:0 overruns:0 carrier:0
</span><span class='line'>          collisions:0 txqueuelen:0
</span><span class='line'>          RX bytes:4186 <span class="o">(</span>4.0 KiB<span class="o">)</span>  TX bytes:4186 <span class="o">(</span>4.0 KiB<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>virbr0    Link encap:Ethernet  HWaddr 0e:30:a3:3a:bf:03
</span><span class='line'>          inet addr:192.168.122.1  Bcast:192.168.122.255  Mask:255.255.255.0
</span><span class='line'>          UP BROADCAST MULTICAST  MTU:1500  Metric:1
</span><span class='line'>          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
</span><span class='line'>          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
</span><span class='line'>          collisions:0 txqueuelen:0
</span><span class='line'>          RX bytes:0 <span class="o">(</span>0.0 B<span class="o">)</span>  TX bytes:0 <span class="o">(</span>0.0 B<span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 停用网络适配器</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>ifconfig eth0 down
</span><span class='line'>
</span><span class='line'><span class="c"># 启用网络适配器</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>ifconfig eth0 up
</span><span class='line'>
</span><span class='line'><span class="c"># 指定 IP 地址到网络适配器，为网络适配器 eth0 设定 IP 地址“192.168.1.12”。</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>ifconfig eth0 192.168.1.12
</span><span class='line'>
</span><span class='line'><span class="c"># 更改网络适配器 eth0 的子网掩码</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>ifconfig eth0 netmask 255.255.255.
</span><span class='line'>
</span><span class='line'><span class="c"># 更改网络适配器 eth0 的广播地址</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>ifconfig eth0 broadcast 192.168.1.255
</span><span class='line'>
</span><span class='line'><span class="c"># 为网络适配器 eth0 指定 IP 地址,子网掩码，广播地址</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>ifconfig eth0 192.168.1.12 netmask 255.255.255.0 broadcast 192.168.1.255
</span><span class='line'>
</span><span class='line'><span class="c"># 注：如果你设置一块无线网卡的信息，你可以使用的命令是“iwconfig”。</span>
</span></code></pre></td></tr></table></div></figure>


<p>欲知更多 ifconfig 命令的例子和使用方法，读 <a href="http://www.tecmint.com/ifconfig-command-examples/">15个有用的ifconfig 命令</a>。</p>

<h2>命令：netstat</h2>

<p>netstat 命令显示各种网络相关的信息，如网络连接，路由表，接口统计，伪装连接，组播成员身份等&hellip;.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># 列出所有的网络端口</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>netstat -a
</span><span class='line'>
</span><span class='line'>Active UNIX domain sockets <span class="o">(</span>servers and established<span class="o">)</span>
</span><span class='line'>Proto RefCnt Flags       Type       State         I-Node   Path
</span><span class='line'>unix  2      <span class="o">[</span> ACC <span class="o">]</span>     STREAM     LISTENING     741379   /run/user/user1/keyring-I5cn1c/gpg
</span><span class='line'>unix  2      <span class="o">[</span> ACC <span class="o">]</span>     STREAM     LISTENING     8965     /var/run/acpid.socket
</span><span class='line'>unix  2      <span class="o">[</span> ACC <span class="o">]</span>     STREAM     LISTENING     18584    /tmp/.X11-unix/X0
</span><span class='line'>unix  2      <span class="o">[</span> ACC <span class="o">]</span>     STREAM     LISTENING     741385   /run/user/user1/keyring-I5cn1c/ssh
</span><span class='line'>unix  2      <span class="o">[</span> ACC <span class="o">]</span>     STREAM     LISTENING     741387   /run/user/user1/keyring-I5cn1c/pkcs11
</span><span class='line'>unix  2      <span class="o">[</span> ACC <span class="o">]</span>     STREAM     LISTENING     20242    @/tmp/dbus-ghtTjuPN46
</span><span class='line'>unix  2      <span class="o">[</span> ACC <span class="o">]</span>     STREAM     LISTENING     13332    /var/run/samba/winbindd_privileged/pipe
</span><span class='line'>unix  2      <span class="o">[</span> ACC <span class="o">]</span>     STREAM     LISTENING     13331    /tmp/.winbindd/pipe
</span><span class='line'>unix  2      <span class="o">[</span> ACC <span class="o">]</span>     STREAM     LISTENING     11030    /var/run/mysqld/mysqld.sock
</span><span class='line'>unix  2      <span class="o">[</span> ACC <span class="o">]</span>     STREAM     LISTENING     19308    /tmp/ssh-qnZadSgJAbqd/agent.3221
</span><span class='line'>unix  2      <span class="o">[</span> ACC <span class="o">]</span>     STREAM     LISTENING     436781   /tmp/HotShots
</span><span class='line'>unix  2      <span class="o">[</span> ACC <span class="o">]</span>     STREAM     LISTENING     46110    /run/user/ravisaive/pulse/native
</span><span class='line'>unix  2      <span class="o">[</span> ACC <span class="o">]</span>     STREAM     LISTENING     19310    /tmp/gpg-zfE9YT/S.gpg-agent
</span><span class='line'>....
</span><span class='line'>
</span><span class='line'><span class="c"># 显示所有 tcp 相关端口</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>netstat -at
</span><span class='line'>
</span><span class='line'>Active Internet connections <span class="o">(</span>servers and established<span class="o">)</span>
</span><span class='line'>Proto Recv-Q Send-Q Local Address           Foreign Address         State
</span><span class='line'>tcp        0      0 localhost:mysql         *:*                     LISTEN
</span><span class='line'>tcp        0      0 *:5901                  *:*                     LISTEN
</span><span class='line'>tcp        0      0 *:5902                  *:*                     LISTEN
</span><span class='line'>tcp        0      0 *:x11-1                 *:*                     LISTEN
</span><span class='line'>tcp        0      0 *:x11-2                 *:*                     LISTEN
</span><span class='line'>tcp        0      0 *:5938                  *:*                     LISTEN
</span><span class='line'>tcp        0      0 localhost:5940          *:*                     LISTEN
</span><span class='line'>tcp        0      0 ravisaive-OptiPl:domain *:*                     LISTEN
</span><span class='line'>tcp        0      0 ravisaive-OptiPl:domain *:*                     LISTEN
</span><span class='line'>tcp        0      0 localhost:ipp           *:*                     LISTEN
</span><span class='line'>tcp        0      0 ravisaive-OptiPle:48270 ec2-23-21-236-70.c:http ESTABLISHED
</span><span class='line'>tcp        0      0 ravisaive-OptiPle:48272 ec2-23-21-236-70.c:http TIME_WAIT
</span><span class='line'>tcp        0      0 ravisaive-OptiPle:48421 bom03s01-in-f22.1:https ESTABLISHED
</span><span class='line'>tcp        0      0 ravisaive-OptiPle:48269 ec2-23-21-236-70.c:http ESTABLISHED
</span><span class='line'>tcp        0      0 ravisaive-OptiPle:39084 channel-ecmp-06-f:https ESTABLISHED
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'><span class="c"># 显示所有连接的统计信息</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>netstat -s
</span><span class='line'>
</span><span class='line'>Ip:
</span><span class='line'>    4994239 total packets received
</span><span class='line'>    0 forwarded
</span><span class='line'>    0 incoming packets discarded
</span><span class='line'>    4165741 incoming packets delivered
</span><span class='line'>    3248924 requests sent out
</span><span class='line'>    8 outgoing packets dropped
</span><span class='line'>Icmp:
</span><span class='line'>    29460 ICMP messages received
</span><span class='line'>    566 input ICMP message failed.
</span><span class='line'>    ICMP input histogram:
</span><span class='line'>        destination unreachable: 98
</span><span class='line'>        redirects: 29362
</span><span class='line'>    2918 ICMP messages sent
</span><span class='line'>    0 ICMP messages failed
</span><span class='line'>    ICMP output histogram:
</span><span class='line'>        destination unreachable: 2918
</span><span class='line'>IcmpMsg:
</span><span class='line'>        InType3: 98
</span><span class='line'>        InType5: 29362
</span><span class='line'>        OutType3: 2918
</span><span class='line'>Tcp:
</span><span class='line'>    94533 active connections openings
</span><span class='line'>    23 passive connection openings
</span><span class='line'>    5870 failed connection attempts
</span><span class='line'>    7194 connection resets received
</span><span class='line'>....
</span><span class='line'>
</span><span class='line'><span class="c"># 好的！由于某些原因如果你不想解析 netstat 输出的主机、端口和用户名称的话。</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>netstat -an
</span><span class='line'>
</span><span class='line'><span class="c"># 好，你可能需要获取的 netstat 持续输出的动态信息，通过传递中断输出指令 (ctrl + c)来停止。</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>netstat -c
</span></code></pre></td></tr></table></div></figure>


<p>更多关于“netstat”的例子和使用方法，浏览文章 <a href="http://www.tecmint.com/20-netstat-commands-for-linux-network-management/">20 个 netstat 的使用案例</a>。</p>

<h2>命令：nslookup</h2>

<p>网络实用程序，用于获得互联网服务器的信息。顾名思义，该实用程序将发现通过查询 DNS 域的名称服务器信息。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>nslookup tecmint.com
</span><span class='line'>
</span><span class='line'>Server:     192.168.1.1
</span><span class='line'>Address:    192.168.1.1#53
</span><span class='line'>
</span><span class='line'>Non-authoritative answer:
</span><span class='line'>Name:   tecmint.com
</span><span class='line'>Address: 50.16.67.239
</span><span class='line'>
</span><span class='line'><span class="c"># 查询邮件、交换器记录</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>nslookup -query<span class="o">=</span>mx tecmint.com
</span><span class='line'>
</span><span class='line'>Server:     192.168.1.1
</span><span class='line'>Address:    192.168.1.1#53
</span><span class='line'>
</span><span class='line'>Non-authoritative answer:
</span><span class='line'>tecmint.com mail <span class="nv">exchanger</span> <span class="o">=</span> 0 smtp.secureserver.net.
</span><span class='line'>tecmint.com mail <span class="nv">exchanger</span> <span class="o">=</span> 10 mailstore1.secureserver.net.
</span><span class='line'>
</span><span class='line'>Authoritative answers can be found from:
</span><span class='line'>
</span><span class='line'><span class="c"># 查询域名服务器</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>nslookup -type<span class="o">=</span>ns tecmint.com
</span><span class='line'>
</span><span class='line'>Server:     192.168.1.1
</span><span class='line'>Address:    192.168.1.1#53
</span><span class='line'>
</span><span class='line'>Non-authoritative answer:
</span><span class='line'>tecmint.com <span class="nv">nameserver</span> <span class="o">=</span> ns3404.com.
</span><span class='line'>tecmint.com <span class="nv">nameserver</span> <span class="o">=</span> ns3403.com.
</span><span class='line'>
</span><span class='line'>Authoritative answers can be found from:
</span><span class='line'>
</span><span class='line'><span class="c"># 查询 DNS 记录</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>nslookup -type<span class="o">=</span>any tecmint.com
</span><span class='line'>
</span><span class='line'>Server:     192.168.1.1
</span><span class='line'>Address:    192.168.1.1#53
</span><span class='line'>
</span><span class='line'>Non-authoritative answer:
</span><span class='line'>tecmint.com mail <span class="nv">exchanger</span> <span class="o">=</span> 10 mailstore1.secureserver.net.
</span><span class='line'>tecmint.com mail <span class="nv">exchanger</span> <span class="o">=</span> 0 smtp.secureserver.net.
</span><span class='line'>tecmint.com <span class="nv">nameserver</span> <span class="o">=</span> ns06.domaincontrol.com.
</span><span class='line'>tecmint.com <span class="nv">nameserver</span> <span class="o">=</span> ns3404.com.
</span><span class='line'>tecmint.com <span class="nv">nameserver</span> <span class="o">=</span> ns3403.com.
</span><span class='line'>tecmint.com <span class="nv">nameserver</span> <span class="o">=</span> ns05.domaincontrol.com.
</span><span class='line'>
</span><span class='line'>Authoritative answers can be found from:
</span><span class='line'>
</span><span class='line'><span class="c"># 查询 起始 授权机构</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>nslookup -type<span class="o">=</span>soa tecmint.com
</span><span class='line'>
</span><span class='line'>Server:     192.168.1.1
</span><span class='line'>Address:    192.168.1.1#53
</span><span class='line'>
</span><span class='line'>Non-authoritative answer:
</span><span class='line'>tecmint.com
</span><span class='line'>    <span class="nv">origin</span> <span class="o">=</span> ns3403.hostgator.com
</span><span class='line'>    mail <span class="nv">addr</span> <span class="o">=</span> dnsadmin.gator1702.hostgator.com
</span><span class='line'>    <span class="nv">serial</span> <span class="o">=</span> 2012081102
</span><span class='line'>    <span class="nv">refresh</span> <span class="o">=</span> 86400
</span><span class='line'>    <span class="nv">retry</span> <span class="o">=</span> 7200
</span><span class='line'>    <span class="nv">expire</span> <span class="o">=</span> 3600000
</span><span class='line'>    <span class="nv">minimum</span> <span class="o">=</span> 86400
</span><span class='line'>
</span><span class='line'>Authoritative answers can be found from:
</span><span class='line'>
</span><span class='line'><span class="c"># 查询端口号，更改使用你想要连接的端口号</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>nslookup -port 56 tecmint.com
</span><span class='line'>
</span><span class='line'>Server:     tecmint.com
</span><span class='line'>Address:    50.16.76.239#53
</span><span class='line'>
</span><span class='line'>Name:   56
</span><span class='line'>Address: 14.13.253.12
</span></code></pre></td></tr></table></div></figure>


<p>更多阅读 <a href="http://www.tecmint.com/8-linux-nslookup-commands-to-troubleshoot-dns-domain-name-server/">8个 Nslookup 命令</a></p>

<h2>命令：dig</h2>

<p>dig 是查询 DNS 域名服务器的工具，可以查询的主机地址、 邮件交流、 域名服务器相关的信息。在任何 Linux (Unix) 或 Macintosh OS X 操作系统上，都可以使用该工具。dig 的最典型的用法是单个主机的查询。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>dig tecmint.com
</span><span class='line'>
</span><span class='line'>; &lt;&lt;&gt;&gt; DiG 9.8.2rc1-RedHat-9.8.2-0.17.rc1.el6 &lt;&lt;&gt;&gt; tecmint.com
</span><span class='line'>;; global options: +cmd
</span><span class='line'>;; Got answer:
</span><span class='line'>;; -&gt;&gt;HEADER&lt;
</span><span class='line'>
</span><span class='line'><span class="c"># 关闭注释行</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>dig tecmint.com +nocomments
</span><span class='line'>
</span><span class='line'>; &lt;&lt;&gt;&gt; DiG 9.8.2rc1-RedHat-9.8.2-0.17.rc1.el6 &lt;&lt;&gt;&gt; tecmint.com +nocomments
</span><span class='line'>;; global options: +cmd
</span><span class='line'>;tecmint.com.           IN  A
</span><span class='line'>tecmint.com.        14400   IN  A   40.216.66.239
</span><span class='line'>;; Query <span class="nb">time</span>: 418 msec
</span><span class='line'>;; SERVER: 192.168.1.1#53<span class="o">(</span>192.168.1.1<span class="o">)</span>
</span><span class='line'>;; WHEN: Sat Jun 29 13:53:22 2013
</span><span class='line'>;; MSG SIZE  rcvd: 45
</span><span class='line'>
</span><span class='line'><span class="c"># 关闭认证块</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>dig tecmint.com +noauthority
</span><span class='line'>
</span><span class='line'>; &lt;&lt;&gt;&gt; DiG 9.8.2rc1-RedHat-9.8.2-0.17.rc1.el6 &lt;&lt;&gt;&gt; tecmint.com +noauthority
</span><span class='line'>;; global options: +cmd
</span><span class='line'>;; Got answer:
</span><span class='line'>;; -&gt;&gt;HEADER&lt;
</span><span class='line'>
</span><span class='line'><span class="c"># 关闭 其他 块</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>dig  tecmint.com +noadditional
</span><span class='line'>
</span><span class='line'>; &lt;&lt;&gt;&gt; DiG 9.9.2-P1 &lt;&lt;&gt;&gt; tecmint.com +noadditional
</span><span class='line'>;; global options: +cmd
</span><span class='line'>;; Got answer:
</span><span class='line'>;; -&gt;&gt;HEADER&lt;
</span><span class='line'>
</span><span class='line'><span class="c"># 关闭 统计块</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>dig tecmint.com +nostats
</span><span class='line'>
</span><span class='line'>; &lt;&lt;&gt;&gt; DiG 9.8.2rc1-RedHat-9.8.2-0.17.rc1.el6 &lt;&lt;&gt;&gt; tecmint.com +nostats
</span><span class='line'>;; global options: +cmd
</span><span class='line'>;; Got answer:
</span><span class='line'>;; -&gt;&gt;HEADER&lt;
</span><span class='line'>
</span><span class='line'><span class="c"># 关闭回复块</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>dig tecmint.com +noanswer
</span><span class='line'>
</span><span class='line'>; &lt;&lt;&gt;&gt; DiG 9.8.2rc1-RedHat-9.8.2-0.17.rc1.el6 &lt;&lt;&gt;&gt; tecmint.com +noanswer
</span><span class='line'>;; global options: +cmd
</span><span class='line'>;; Got answer:
</span><span class='line'>;; -&gt;&gt;HEADER&lt;
</span><span class='line'>
</span><span class='line'><span class="c"># 关闭所有块</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>dig tecmint.com +noall
</span><span class='line'>
</span><span class='line'>; &lt;&lt;&gt;&gt; DiG 9.8.2rc1-RedHat-9.8.2-0.17.rc1.el6 &lt;&lt;&gt;&gt; tecmint.com +noall
</span><span class='line'>;; global options: +cmd
</span></code></pre></td></tr></table></div></figure>


<p>阅读更多 <a href="http://www.tecmint.com/10-linux-dig-domain-information-groper-commands-to-query-dns/">10 个 Linux Dig 命令实例</a>。</p>

<h2>命令：uptime</h2>

<p>你连接到你的 Linux 服务器时发现一些不寻常或恶意的东西，你会做什么？猜测&hellip;&hellip;不，绝不！你可以运行 uptime 来验证当服务器无人值守时到底发生了什么事情。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>uptime
</span><span class='line'>
</span><span class='line'>14:37:10 up  4:21,  2 users,  load average: 0.00, 0.00, 0.04
</span></code></pre></td></tr></table></div></figure>


<h2>命令：wall</h2>

<p>对系统管理员来说一个最重要的命令。wall 发送一条消息到大家登录端将其 mesg 权限设置为&#8221;yes&#8221;。这条信息可以被 wall 作为参数，或者可以将它作为 wall 的标准输入。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>wall <span class="s2">&quot;we will be going down for maintenance for one hour sharply at 03:30 pm&quot;</span>
</span><span class='line'>
</span><span class='line'>Broadcast message from root@localhost.localdomain <span class="o">(</span>pts/0<span class="o">)</span> <span class="o">(</span>Sat Jun 29 14:44:02 2013<span class="o">)</span>:
</span><span class='line'>
</span><span class='line'>we will be going down <span class="k">for </span>maintenance <span class="k">for </span>one hour sharply at 03:30 pm
</span></code></pre></td></tr></table></div></figure>


<h2>命令：mesg</h2>

<p>其他人们可以使用&#8221;wtrite&#8221;命令,将在在向您发送文本到屏幕上。你可以控制是否显示。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>mesg <span class="o">[</span>n|y<span class="o">]</span>
</span><span class='line'>n - prevents the message from others popping up on the screen.
</span><span class='line'>y – Allows messages to appear on your screen.
</span></code></pre></td></tr></table></div></figure>


<h2>命令：write</h2>

<p>如果 &lsquo;mesg&rsquo; 是 &lsquo;y&#8217;，让你的文本直接发送到另一台 Linux 机器的屏幕。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>write ravisaive
</span></code></pre></td></tr></table></div></figure>


<h2>命令：talk</h2>

<p>增强的 write 命令，talk 命令可让你与其他登录的用户交谈。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>talk ravisaive
</span><span class='line'>
</span><span class='line'><span class="c"># 注：如果 talk 命令没安装的话，可以通过 apt 或 yum 安装所需的包。</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>yum install talk
</span><span class='line'>OR
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>apt-get install talk
</span></code></pre></td></tr></table></div></figure>


<h2>命令：w</h2>

<p>是否觉得命令&#8217;w&#8217;很滑稽？但是事实上不是的。它是一个命令，尽管只有一个字符长！命令&#8221;w&#8221;是 uptime 和 who 命令，以前后的顺序组合在一起。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>w
</span><span class='line'>
</span><span class='line'>15:05:42 up  4:49,  3 users,  load average: 0.02, 0.01, 0.00
</span><span class='line'>USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT
</span><span class='line'>server   tty7     :0               14:06    4:43m  1:42   0.08s pam: gdm-passwo
</span><span class='line'>server   pts/0    :0.0             14:18    0.00s  0.23s  1.65s gnome-terminal
</span><span class='line'>server   pts/1    :0.0             14:47    4:43   0.01s  0.01s bash
</span></code></pre></td></tr></table></div></figure>


<h2>命令：rename</h2>

<p>见名知意，这个命令重命名文件。rename 将会通过从文件名的首字符开始替换，重命名为指定的文件名。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Give the file names a1, a2, a3, a4.....1213
</span><span class='line'>
</span><span class='line'><span class="c"># 仅仅写这些命令：[@Lesus 注： 在 Ubuntu上 不支持这种格式， rename 与 mv 不同的是，rename 可以批量修改，如同带了 while 的 mv 操作。]</span>
</span><span class='line'>rename a1 a0 a?
</span><span class='line'>rename a1 a0 a??
</span></code></pre></td></tr></table></div></figure>


<h2>命令：top</h2>

<p>显示 CPU 进程信息。这个命令自动刷新，默认是持续显示 CPU 进程信息，除非使用了中断指令。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>top
</span><span class='line'>
</span><span class='line'>top - 14:06:45 up 10 days, 20:57,  2 users,  load average: 0.10, 0.16, 0.21
</span><span class='line'>Tasks: 240 total,   1 running, 235 sleeping,   0 stopped,   4 zombie
</span><span class='line'>%Cpu<span class="o">(</span>s<span class="o">)</span>:  2.0 us,  0.5 sy,  0.0 ni, 97.5 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
</span><span class='line'>KiB Mem:   2028240 total,  1777848 used,   250392 free,    81804 buffers
</span><span class='line'>KiB Swap:  3905532 total,   156748 used,  3748784 free,   381456 cached
</span><span class='line'>
</span><span class='line'>  PID USER      PR  NI  VIRT  RES  SHR S  %CPU %MEM    TIME+ COMMAND
</span><span class='line'>23768 ravisaiv  20   0 1428m 571m  41m S   2.3 28.9  14:27.52 firefox
</span><span class='line'>24182 ravisaiv  20   0  511m 132m  25m S   1.7  6.7   2:45.94 plugin-containe
</span><span class='line'>26929 ravisaiv  20   0  5344 1432  972 R   0.7  0.1   0:00.07 top
</span><span class='line'>24875 ravisaiv  20   0  263m  14m  10m S   0.3  0.7   0:02.76 lxterminal
</span><span class='line'>    1 root      20   0  3896 1928 1228 S   0.0  0.1   0:01.62 init
</span><span class='line'>    2 root      20   0     0    0    0 S   0.0  0.0   0:00.06 kthreadd
</span><span class='line'>    3 root      20   0     0    0    0 S   0.0  0.0   0:17.28 ksoftirqd/0
</span><span class='line'>    5 root       0 -20     0    0    0 S   0.0  0.0   0:00.00 kworker/0:0H
</span><span class='line'>    7 root       0 -20     0    0    0 S   0.0  0.0   0:00.00 kworker/u:0H
</span><span class='line'>    8 root      rt   0     0    0    0 S   0.0  0.0   0:00.12 migration/0
</span><span class='line'>    9 root      20   0     0    0    0 S   0.0  0.0   0:00.00 rcu_bh
</span><span class='line'>   10 root      20   0     0    0    0 S   0.0  0.0   0:26.94 rcu_sched
</span><span class='line'>   11 root      rt   0     0    0    0 S   0.0  0.0   0:01.95 watchdog/0
</span><span class='line'>   12 root      rt   0     0    0    0 S   0.0  0.0   0:02.00 watchdog/1
</span><span class='line'>   13 root      20   0     0    0    0 S   0.0  0.0   0:17.80 ksoftirqd/1
</span><span class='line'>   14 root      rt   0     0    0    0 S   0.0  0.0   0:00.12 migration/1
</span><span class='line'>   16 root       0 -20     0    0    0 S   0.0  0.0   0:00.00 kworker/1:0H
</span><span class='line'>   17 root       0 -20     0    0    0 S   0.0  0.0   0:00.00 cpuset
</span><span class='line'>   18 root       0 -20     0    0    0 S   0.0  0.0   0:00.00 khelper
</span><span class='line'>   19 root      20   0     0    0    0 S   0.0  0.0   0:00.00 kdevtmpfs
</span><span class='line'>   20 root       0 -20     0    0    0 S   0.0  0.0   0:00.00 netns
</span><span class='line'>   21 root      20   0     0    0    0 S   0.0  0.0   0:00.04 bdi-default
</span><span class='line'>   22 root       0 -20     0    0    0 S   0.0  0.0   0:00.00 kintegrityd
</span><span class='line'>   23 root       0 -20     0    0    0 S   0.0  0.0   0:00.00 kblockd
</span><span class='line'>   24 root       0 -20     0    0    0 S   0.0  0.0   0:00.00 ata_sff
</span></code></pre></td></tr></table></div></figure>


<p>另查看 <a href="http://www.tecmint.com/12-top-command-examples-in-linux/">12 TOP命令例子</a>。[@Lesus 注：htop 比 top 命令更好用，不过需要自己安装
]</p>

<h2>命令：mkfs.ext4</h2>

<p>这个命令在指定的设备上创建一个新的 ext4 文件系统，如果这个命令后面跟的是个错误的设备，那么整个设备就会被擦除和格式化，所以建议不要运行这个命令，除非你清楚自己正在干什么。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Mkfs.ext4 /dev/sda1 <span class="o">(</span>sda1 block will be formatted<span class="o">)</span>
</span><span class='line'>mkfs.ext4 /dev/sdb1 <span class="o">(</span>sdb1 block will be formatted<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>更多查看：<a href="http://www.tecmint.com/what-is-ext2-ext3-ext4-and-how-to-create-and-convert-linux-file-systems/">Ext4是什么及怎么创建和转换</a></p>

<h2>vi/emac/nano 命令</h2>

<p>vi (visual), emac, nano 是 linux 中最常用的一些编辑器。它们经常用于编辑文本，配置,… 等文件. A quick guide to work around vi and nano is, emac is a.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># vi 编辑器：</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>touch a.txt <span class="o">(</span>创建一个名为a.txt的文本文件<span class="o">)</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>vi a.txt <span class="o">(</span>用vi打开a.txt<span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 按下‘i’键进入插入模式, 否则你不能输入任何内容</span>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;Hello&quot;</span>  <span class="o">(</span>这里的文本会存到文件中<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>    1. alt+x <span class="o">(</span>退出插入模式, 记得在最后的字符间留有一些空格。
</span><span class='line'>    2. ctrl+x 命令或你上一个单词将被删除<span class="o">)</span>。
</span><span class='line'>    3. :wq! <span class="o">(</span>以当前的文本保存文件, 记住‘!’ 是覆盖的意思<span class="o">)</span>。
</span><span class='line'>
</span><span class='line'><span class="c"># nano 编辑器：</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>nano a.txt <span class="o">(</span>用nano打开 a.txt<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>edit, with the content, required
</span><span class='line'>
</span><span class='line'><span class="c"># ctrl +x (关闭编辑器)。它会显示如下的提示输出信息：</span>
</span><span class='line'>Save modified buffer <span class="o">(</span>ANSWERING <span class="s2">&quot;No&quot;</span> WILL DESTROY CHANGES<span class="o">)</span> ?
</span><span class='line'> Y Yes
</span><span class='line'> N No           ^C Cancel
</span><span class='line'>
</span><span class='line'><span class="c"># 点击‘y’ 选择 yes 并输入文件名，就完成编辑了。</span>
</span></code></pre></td></tr></table></div></figure>


<h2>命令：rsync</h2>

<p>Rsync 复制文件，参数 -P 开启进度条。如果你已经安装了 rsync，你可以使用一个简单的别名。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">alias </span><span class="nv">cp</span><span class="o">=</span><span class="s1">&#39;rsync -aP&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 现在尝试在终端复制一个大文件，这样将会看到显示剩余部分的输出，与进度条类似。</span>
</span><span class='line'><span class="c"># 而且，保持和维护备份是系统管理员不得不做的最重要、最无聊的工作之一。Rsync 是一个用于新建和维护备份的非常好用的终端工具（也存在许多其它工具）。</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>rsync -zvr IMG_5267<span class="se">\ </span>copy<span class="se">\=</span>33<span class="se">\ </span>copy<span class="se">\=</span>ok.jpg ~/Desktop/
</span><span class='line'>
</span><span class='line'>sending incremental file list
</span><span class='line'>IMG_5267 <span class="nv">copy</span><span class="o">=</span>33 <span class="nv">copy</span><span class="o">=</span>ok.jpg
</span><span class='line'>
</span><span class='line'>sent 2883830 bytes  received 31 bytes  5767722.00 bytes/sec
</span><span class='line'>total size is 2882771  speedup is 1.00
</span><span class='line'>
</span><span class='line'><span class="c"># 注意: -z 表示压缩， -v 表示详细信息，-r 表示递归。</span>
</span></code></pre></td></tr></table></div></figure>


<h2>命令：free</h2>

<p>跟踪内存的使用和资源一样重要，就像管理员执行的任何其它任务，可以使用 &lsquo;free&rsquo; 命令来在这里救援.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># 当前内存使用状态Current Usage Status of Memory</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>free
</span><span class='line'>
</span><span class='line'>             total       used       free     shared    buffers     cached
</span><span class='line'>Mem:       2028240    1788272     239968          0      69468     363716
</span><span class='line'>-/+ buffers/cache:    1355088     673152
</span><span class='line'>Swap:      3905532     157076    3748456
</span><span class='line'>
</span><span class='line'><span class="c"># 设置输出单位为KB，MB或GB</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>free -b
</span><span class='line'>
</span><span class='line'>             total       used       free     shared    buffers     cached
</span><span class='line'>Mem:    2076917760 1838272512  238645248          0   71348224  372670464
</span><span class='line'>-/+ buffers/cache: 1394253824  682663936
</span><span class='line'>Swap:   3999264768  160845824 3838418944
</span><span class='line'>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>free -k
</span><span class='line'>
</span><span class='line'>             total       used       free     shared    buffers     cached
</span><span class='line'>Mem:       2028240    1801484     226756          0      69948     363704
</span><span class='line'>-/+ buffers/cache:    1367832     660408
</span><span class='line'>Swap:      3905532     157076    3748456
</span><span class='line'>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>free -m
</span><span class='line'>
</span><span class='line'>             total       used       free     shared    buffers     cached
</span><span class='line'>Mem:          1980       1762        218          0         68        355
</span><span class='line'>-/+ buffers/cache:       1338        641
</span><span class='line'>Swap:         3813        153       3660
</span><span class='line'>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>free -g
</span><span class='line'>
</span><span class='line'>             total       used       free     shared    buffers     cached
</span><span class='line'>Mem:             1          1          0          0          0          0
</span><span class='line'>-/+ buffers/cache:          1          0
</span><span class='line'>Swap:            3          0          3
</span><span class='line'>
</span><span class='line'><span class="c"># 以可读的格式显示，检查当前内存使用</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>free -h
</span><span class='line'>
</span><span class='line'>             total       used       free     shared    buffers     cached
</span><span class='line'>Mem:          1.9G       1.7G       208M         0B        68M       355M
</span><span class='line'>-/+ buffers/cache:       1.3G       632M
</span><span class='line'>Swap:         3.7G       153M       3.6G
</span><span class='line'>
</span><span class='line'><span class="c"># 设定 时间间隔 后 ，持续检查 使用状态</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>free -s 3
</span><span class='line'>
</span><span class='line'>             total       used       free     shared    buffers     cached
</span><span class='line'>Mem:       2028240    1824096     204144          0      70708     364180
</span><span class='line'>-/+ buffers/cache:    1389208     639032
</span><span class='line'>Swap:      3905532     157076    3748456
</span><span class='line'>
</span><span class='line'>             total       used       free     shared    buffers     cached
</span><span class='line'>Mem:       2028240    1824192     204048          0      70716     364212
</span><span class='line'>-/+ buffers/cache:    1389264     638976
</span><span class='line'>Swap:      3905532     157076    3748456
</span></code></pre></td></tr></table></div></figure>


<p>阅读更多 <a href="http://www.tecmint.com/10-examples-of-linux-free-command/">10 个 Free 命令使用实例</a>。</p>

<h2>命令：mysqldump</h2>

<p>好了，现在你从名字上就能明白这个命令所代表的作用。mysqldump 命令会转储(备份)数据库的全部或特定一部分数据到一个给定的文件中。例如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>mysqldump -u root -p --all-databases &gt; /home/server/Desktop/backupfile.sql
</span></code></pre></td></tr></table></div></figure>


<p>注意： mysqldump 需要 mysql 在运行中并且有正确的授权密码。我们在 <a href="http://www.tecmint.com/mysql-backup-and-restore-commands-for-database-administration/">用 mysqldump 命令备份数据库</a>中讨论了一些有用的 “mysqldump” 命令用法。</p>

<h2>命令：mkpasswd</h2>

<p>根据指定的长度，产生一个难猜的随机密码。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>mkpasswd -l 10
</span><span class='line'>
</span><span class='line'>zI4+Ybqfx9
</span><span class='line'>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>mkpasswd -l 20
</span><span class='line'>
</span><span class='line'>w0Pr7aqKk&amp;hmbmqdrlmk
</span><span class='line'>
</span><span class='line'><span class="c"># 注意： -l 10 产生一个 10 个字符的随机密码，而 -l 20 产生 20 个字符的密码，它可以设置为任意长度来取得所希望的结果。</span>
</span><span class='line'><span class="c"># 这个命令很有用，经常在脚本语言里使用来产生随机的密码。你可能需要 yum 或 apt ‘expect’ 包来使用这个命令。</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>yum install expect
</span><span class='line'><span class="c"># 或</span>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>apt-get install expect
</span></code></pre></td></tr></table></div></figure>


<h2>命令：paste</h2>

<p>合并两个或多个文本文件，按行来进行合并。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># 如果 file1 的内容是：</span>
</span><span class='line'>1
</span><span class='line'>2
</span><span class='line'>3
</span><span class='line'>
</span><span class='line'><span class="c"># file2 是这样的: </span>
</span><span class='line'>a
</span><span class='line'>b
</span><span class='line'>c
</span><span class='line'>d
</span><span class='line'>
</span><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>paste file1 file2 &gt; file3
</span><span class='line'><span class="c"># 结果file3将是: </span>
</span><span class='line'>1    a
</span><span class='line'>2    b
</span><span class='line'>3    c
</span><span class='line'>     d
</span></code></pre></td></tr></table></div></figure>


<h2>命令：lsof</h2>

<p>lsof 是&#8221;list open files&#8221;(&ldquo;列表中打开的文件&rdquo;) 的缩写，显示您的系统当前已打开的所有文件。这是非常有用的对于想找出哪些进程使用某一特定文件，或显示为单个进程打开所有文件。一些有用的 <a href="http://www.tecmint.com/10-lsof-command-examples-in-linux/">10 个 lsof 命令示例</a>，你可能会感兴趣阅读。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="o">[</span>avishek@tecmint ~<span class="o">]</span><span class="nv">$ </span>lsof
</span><span class='line'>
</span><span class='line'>COMMAND     PID   TID            USER   FD      TYPE     DEVICE SIZE/OFF       NODE NAME
</span><span class='line'>init          1                  root  cwd       DIR        8,1     4096          2 /
</span><span class='line'>init          1                  root  rtd       DIR        8,1     4096          2 /
</span><span class='line'>init          1                  root  txt       REG        8,1   227432     395571 /sbin/init
</span><span class='line'>init          1                  root  mem       REG        8,1    47080     263023 /lib/i386-linux-gnu/libnss_files-2.17.so
</span><span class='line'>init          1                  root  mem       REG        8,1    42672     270178 /lib/i386-linux-gnu/libnss_nis-2.17.so
</span><span class='line'>init          1                  root  mem       REG        8,1    87940     270187 /lib/i386-linux-gnu/libnsl-2.17.so
</span><span class='line'>init          1                  root  mem       REG        8,1    30560     263021 /lib/i386-linux-gnu/libnss_compat-2.17.so
</span><span class='line'>init          1                  root  mem       REG        8,1   124637     270176 /lib/i386-linux-gnu/libpthread-2.17.so
</span><span class='line'>init          1                  root  mem       REG        8,1  1770984     266166 /lib/i386-linux-gnu/libc-2.17.so
</span><span class='line'>init          1                  root  mem       REG        8,1    30696     262824 /lib/i386-linux-gnu/librt-2.17.so
</span><span class='line'>init          1                  root  mem       REG        8,1    34392     262867 /lib/i386-linux-gnu/libjson.so.0.1.0
</span><span class='line'>init          1                  root  mem       REG        8,1   296792     262889 /lib/i386-linux-gnu/libdbus-1.so.3.7.2
</span><span class='line'>init          1                  root  mem       REG        8,1    34168     262840 /lib/i386-linux-gnu/libnih-dbus.so.1.0.0
</span><span class='line'>init          1                  root  mem       REG        8,1    95616     262848 /lib/i386-linux-gnu/libnih.so.1.0.0
</span><span class='line'>init          1                  root  mem       REG        8,1   134376     270186 /lib/i386-linux-gnu/ld-2.17.so
</span><span class='line'>init          1                  root    0u      CHR        1,3      0t0       1035 /dev/null
</span><span class='line'>init          1                  root    1u      CHR        1,3      0t0       1035 /dev/null
</span><span class='line'>init          1                  root    2u      CHR        1,3      0t0       1035 /dev/null
</span><span class='line'>init          1                  root    3r     FIFO        0,8      0t0       1714 pipe
</span><span class='line'>init          1                  root    4w     FIFO        0,8      0t0       1714 pipe
</span><span class='line'>init          1                  root    5r     0000        0,9        0       6245 anon_inode
</span><span class='line'>init          1                  root    6r     0000        0,9        0       6245 anon_inode
</span><span class='line'>init          1                  root    7u     unix 0xf5e91f80      0t0       8192 @/com/ubuntu/upstart
</span><span class='line'>init          1                  root    8w      REG        8,1     3916        394 /var/log/upstart/teamviewerd.log.1 <span class="o">(</span>deleted<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>参考资料</h2>

<ol>
<li><a href="http://www.oschina.net/translate/useful-linux-commands-for-newbies?cmp">对 Linux 新手非常有用的 20 个命令</a></li>
<li><a href="http://www.tecmint.com/useful-linux-commands-for-newbies/">20 Useful Commands for Linux Newbies</a></li>
<li><a href="http://www.oschina.net/translate/20-advanced-commands-for-middle-level-linux-users">对中级 Linux 用户非常有用的 20 个命令</a></li>
<li><a href="http://www.tecmint.com/20-advanced-commands-for-middle-level-linux-users/">20 Advanced Commands for Middle Level Linux Users</a></li>
<li><a href="http://www.oschina.net/translate/20-advanced-commands-for-linux-experts">对 Linux 专家非常有用的 20 个命令</a></li>
<li><a href="http://www.tecmint.com/20-advanced-commands-for-linux-experts/">20 Advanced Commands for Linux Experts</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux 查看系统配置常用命令]]></title>
    <link href="http://blog.longgen.me/blog/2014/04/10/linux-cha-kan-xi-tong-pei-zhi-chang-yong-ming-ling/"/>
    <updated>2014-04-10T12:47:27+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/04/10/linux-cha-kan-xi-tong-pei-zhi-chang-yong-ming-ling</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>系统</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>uname -an                   <span class="c"># 查看内核/操作系统/ CPU 信息</span>
</span><span class='line'>head -n 1 /etc/issue        <span class="c"># 查看操作系统版本</span>
</span><span class='line'>cat /proc/cpuinfo           <span class="c"># 查看 CPU 信息</span>
</span><span class='line'>hostname                    <span class="c"># 查看计算机名</span>
</span><span class='line'>lspci -tv                   <span class="c"># 列出所有 PCI 设备</span>
</span><span class='line'>lsusb -tv                   <span class="c"># 列出所有 USB 设备</span>
</span><span class='line'>ismod                       <span class="c"># 列出加载的内核模块</span>
</span><span class='line'>env                         <span class="c"># 查看环境变量</span>
</span></code></pre></td></tr></table></div></figure>


<h2>资源</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>free  -m                    <span class="c"># 查看内存使用量和交换区使用量</span>
</span><span class='line'>df -h                       <span class="c"># 查看各分区使用情况</span>
</span><span class='line'>du -sh &lt;目录名&gt;              <span class="c"># 查看指定目录的大小</span>
</span><span class='line'>grep MemTotal /proc/meminfo <span class="c"># 查看内存总量</span>
</span><span class='line'>grep MemFree /proc/meminfo  <span class="c"># 查看空闲内存量</span>
</span><span class='line'>uptime                      <span class="c"># 查看系统运行时间、用户数、负载</span>
</span><span class='line'>cat /proc/loadavg           <span class="c"># 查看系统负载</span>
</span></code></pre></td></tr></table></div></figure>


<h2>磁盘和分区</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>mount | column -t           <span class="c"># 查看挂接的分区状态</span>
</span><span class='line'>fdisk  -l                   <span class="c"># 查看所有分区</span>
</span><span class='line'>swapon -s                   <span class="c"># 查看所有交换分区</span>
</span><span class='line'>hdparm -i /dev/hda          <span class="c"># 查看磁盘参数（仅适用于 IDE 设备）</span>
</span><span class='line'>dmesg | grep IDE            <span class="c"># 查看启动时 IDE 设备检测状况</span>
</span></code></pre></td></tr></table></div></figure>


<h2>网络</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>ifconfig                    <span class="c"># 查看所有网络接口的属性</span>
</span><span class='line'>iptables -L                 <span class="c"># 查看防火墙设置</span>
</span><span class='line'>route -n                    <span class="c"># 查看路由表</span>
</span><span class='line'>netstat -lntp               <span class="c"># 查看所有监听端口</span>
</span><span class='line'>netstat -antp               <span class="c"># 查看所有已经建立的连接</span>
</span><span class='line'>netstat -s                  <span class="c"># 查看网络统计信息</span>
</span></code></pre></td></tr></table></div></figure>


<h2>进程</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>ps -ef                      <span class="c"># 查看所有进程</span>
</span><span class='line'>top                         <span class="c"># 实时显示进程状态</span>
</span></code></pre></td></tr></table></div></figure>


<h2>用户</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>w                           <span class="c"># 查看活动用户</span>
</span><span class='line'>id &lt;用户名&gt;                  <span class="c"># 查看指定用户信息</span>
</span><span class='line'>last                        <span class="c"># 查看用户登录日志</span>
</span><span class='line'>cut -d: -f1 /etc/passwd     <span class="c"># 查看系统所有用户</span>
</span><span class='line'>cut -d: -f1 /etc/group      <span class="c"># 查看系统所有组</span>
</span><span class='line'>crontab -l                  <span class="c"># 查看当前用户的计划任务</span>
</span></code></pre></td></tr></table></div></figure>


<h2>服务</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>chkconfig --list            <span class="c"># 列出所有系统服务</span>
</span><span class='line'>chkconfig --list | grep on  <span class="c"># 列出所有启动的系统服务</span>
</span></code></pre></td></tr></table></div></figure>


<h2>程序</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rpm -qa                     <span class="c"># 查看所有安装的软件包</span>
</span></code></pre></td></tr></table></div></figure>


<h2>其他</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># 查看主板序列号</span>
</span><span class='line'>dmidecode | grep -i <span class="s1">&#39;serial number&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 用硬件检测程序 kuduz 探测新硬件</span>
</span><span class='line'>service kudzu start
</span><span class='line'>service kudzu restart
</span><span class='line'>
</span><span class='line'><span class="c"># 查看 CPU 信息</span>
</span><span class='line'>cat /proc/cpuinfo
</span><span class='line'>dmesg | grep -i <span class="s1">&#39;cpu&#39;</span>
</span><span class='line'>dmidecode -t processor
</span><span class='line'>
</span><span class='line'><span class="c"># 查看内存信息</span>
</span><span class='line'>cat /proc/meminfo
</span><span class='line'>free -m
</span><span class='line'>vmstat
</span><span class='line'>
</span><span class='line'><span class="c"># 查看板卡信息</span>
</span><span class='line'>cat /proc/pci
</span><span class='line'>
</span><span class='line'><span class="c"># 查看显卡/声卡信息</span>
</span><span class='line'>ispci | grep -i <span class="s1">&#39;VGA&#39;</span>
</span><span class='line'>dmesg | grep -i <span class="s1">&#39;VGA&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 查看网卡信息</span>
</span><span class='line'>dmesg | grep -i <span class="s1">&#39;eth&#39;</span>
</span><span class='line'>cat /etc/sysconfig/hwconf
</span><span class='line'>grep -i <span class="s1">&#39;eth&#39;</span>
</span><span class='line'>lspci | grep -i <span class="s1">&#39;eth&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 查看 PCI 信息</span>
</span><span class='line'>lspci
</span><span class='line'>cat /proc/pci
</span><span class='line'>
</span><span class='line'><span class="c"># 查看 USB 设备</span>
</span><span class='line'>cat /proc/bus/usb/devices
</span><span class='line'>
</span><span class='line'><span class="c"># 查看键盘和鼠标</span>
</span><span class='line'>cat /proc/bus/input/devices
</span><span class='line'>
</span><span class='line'><span class="c"># 查看系统硬盘信息和使用情况</span>
</span><span class='line'>fdisk
</span><span class='line'>disk -l
</span><span class='line'>df
</span><span class='line'>
</span><span class='line'><span class="c"># 查看各设备的中断请求（IRQ）</span>
</span><span class='line'>cat /proc/interrupts
</span><span class='line'>
</span><span class='line'><span class="c"># 查看系统体系结构</span>
</span><span class='line'>uname -an
</span><span class='line'>
</span><span class='line'><span class="c"># 查看及启动系统的 32 位或 64 位内核模式</span>
</span><span class='line'>isalist -v
</span><span class='line'>isainfo -v
</span><span class='line'>isainfo -b
</span><span class='line'>
</span><span class='line'><span class="c"># 查看硬件信息，包括 bios、cpu、内存等信息</span>
</span><span class='line'>dmidecode
</span><span class='line'>
</span><span class='line'><span class="c"># 测定当前的显示器刷新频率</span>
</span><span class='line'>/usr/sbin/ffbconfig -rev <span class="se">\?</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 查看系统配置</span>
</span><span class='line'>/usr/platform/sun4u/sbin/prtdiag -v
</span><span class='line'>
</span><span class='line'><span class="c"># 查看当前系统中已经应用的补丁</span>
</span><span class='line'>showrev -p
</span><span class='line'>
</span><span class='line'><span class="c"># 显示当前的运行级别</span>
</span><span class='line'>who -rH
</span><span class='line'>
</span><span class='line'><span class="c"># 查看当前的 bind 版本信息</span>
</span><span class='line'>nslookup -class<span class="o">=</span>chaos -q<span class="o">=</span>txt version.bind
</span><span class='line'>
</span><span class='line'><span class="c"># 查看硬件信息</span>
</span><span class='line'>dmesg | more
</span><span class='line'>
</span><span class='line'><span class="c"># 显示外设信息，如 usb、网卡等信息</span>
</span><span class='line'>lspci
</span><span class='line'>
</span><span class='line'><span class="c"># 查看已加载的驱动</span>
</span><span class='line'>lsnod
</span><span class='line'>lshw
</span><span class='line'>
</span><span class='line'><span class="c"># 查看当前处理器的类型和速度（主频）</span>
</span><span class='line'>psrinfo -v
</span><span class='line'>
</span><span class='line'><span class="c"># 打印当前的 OBP 版本号</span>
</span><span class='line'>prtconf -v
</span><span class='line'>
</span><span class='line'><span class="c"># 查看硬盘物理信息（vendor、RPM、Capacity）</span>
</span><span class='line'>iostat -E
</span><span class='line'>
</span><span class='line'><span class="c"># 查看磁盘的几何参数和分区信息</span>
</span><span class='line'>prtvtoc /dev/rdsk/c0t0d0s
</span><span class='line'>
</span><span class='line'><span class="c"># 显示已经使用和未使用的 i-node 数目</span>
</span><span class='line'>df -F ufs -o i
</span><span class='line'>isalist -v
</span><span class='line'>
</span><span class='line'><span class="c"># 对于“/proc”中文件可使用文件查看命令浏览其内容，文件中包含系统特定信息</span>
</span><span class='line'>
</span><span class='line'>    主机 CPU 信息：Cpuinfo
</span><span class='line'>    主机 DMA 通道信息：Dma
</span><span class='line'>    文件系统信息：Filesystems
</span><span class='line'>    主机中断信息：Interrupts
</span><span class='line'>    主机 I/O 端口号信息：Ioports
</span><span class='line'>    主机内存信息：Meninfo
</span><span class='line'>    Linux 内存版本信息：Version
</span><span class='line'>
</span><span class='line'>    <span class="c"># 备注：proc - process infomation pseudo-filesystem 进程信息伪装文件系统</span>
</span></code></pre></td></tr></table></div></figure>


<h2>参考资料</h2>

<p><a href="http://7177526.blog.51cto.com/7167526/1392066">Linux 系统配置常用命令</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[开源协议简介]]></title>
    <link href="http://blog.longgen.me/blog/2014/04/10/kai-yuan-xie-yi-jian-jie/"/>
    <updated>2014-04-10T12:42:15+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/04/10/kai-yuan-xie-yi-jian-jie</id>
    <content type="html"><![CDATA[<p><a href="http://www.opensource.org/licenses/alphabetical">Open Source Initiative 组织批准的开源协议</a>中，我们常见的有：BSD、GPL、LGPL、MIT 等。</p>

<!-- more -->


<h2>BSD 开源协议（original BSD license、FreeBSD license、Original BSD license）</h2>

<p>BSD 开源协议是一个给予使用者很大自由的协议。基本上使用者可以”为所欲为”,可以自由的使用，修改源代码，也可以将修改后的代码作为开源或者专有软件再发布。</p>

<p>但”为所欲为”的前提当你发布使用了 BSD 协议的代码，或则以 BSD 协议代码为基础做二次开发自己的产品时，需要满足三个条件：</p>

<ol>
<li>如果再发布的产品中包含源代码，则在源代码中必须带有原来代码中的 BSD 协议。</li>
<li>如果再发布的只是二进制类库/软件，则需要在类库/软件的文档和版权声明中包含原来代码中的BSD协议。</li>
<li>不可以用开源代码的作者/机构名字和原来产品的名字做市场推广。</li>
</ol>


<p>BSD 代码鼓励代码共享，但需要尊重代码作者的著作权。BSD 由于允许使用者修改和重新发布代码，也允许使用或在 BSD 代码上开发商业软件发布和销售，因此是对商业集成很友好的协议。而很多的公司企业在选用开源产品的时候都首选 BSD 协议，因为可以完全控制这些第三方的代码，在必要的时候可以修改或者二次开发。</p>

<h2>Apache Licence 2.0（Apache License, Version 2.0、Apache License, Version 1.1、Apache License, Version 1.0）</h2>

<p>Apache Licence 是著名的非盈利开源组织 Apache 采用的协议。该协议和 BSD 类似，同样鼓励代码共享和尊重原作者的著作权，同样允许代码修改，再发布（作为开源或商业软件）。需要满足的条件也和 BSD 类似：</p>

<ol>
<li>需要给代码的用户一份 Apache Licence。</li>
<li>如果你修改了代码，需要再被修改的文件中说明。</li>
<li>在延伸的代码中（修改和有源代码衍生的代码中）需要带有原来代码中的协议，商标，专利声明和其他原来作者规定需要包含的说明。</li>
<li>如果再发布的产品中包含一个 Notice 文件，则在 Notice 文件中需要带有 Apache Licence。你可以在 Notice 中增加自己的许可，但不可以表现为对 Apache Licence 构成更改。</li>
</ol>


<p>Apache Licence 也是对商业应用友好的许可。使用者也可以在需要的时候修改代码来满足需要并作为开源或商业产品发布/销售。</p>

<h2>GPL（GNU General Public License）</h2>

<p>我们很熟悉的 Linux 就是采用了 GPL。GPL 协议和 BSD, Apache Licence 等鼓励代码重用的许可很不一样。GPL 的出发点是代码的开源/免费使用和引用/修改/衍生代码的开源/免费使用，但不允许修改后和衍生的代码做为闭源的商业软件发布和销售。这也就是为什么我们能用免费的各种linux，包括商业公司的 linux 和 linux 上各种各样的由个人，组织，以及商业软件公司开发的免费软件了。</p>

<p>GPL 协议的主要内容是只要在一个软件中使用(“使用”指类库引用，修改后的代码或者衍生代码)GPL 协议的产品，则该软件产品必须也采用 GPL 协议，既必须也是开源和免费。这就是所谓的”传染性”。GPL 协议的产品作为一个单独的产品使用没有任何问题，还可以享受免费的优势。</p>

<p>由于 GPL 严格要求使用了 GPL 类库的软件产品必须使用 GPL 协议，对于使用 GPL 协议的开源代码，商业软件或者对代码有保密要求的部门就不适合集成/采用作为类库和二次开发的基础。</p>

<p>其它细节如再发布的时候需要伴随GPL协议等和BSD/Apache等类似。</p>

<h2>LGPL（GNU Lesser General Public License）</h2>

<p>LGPL 是 GPL 的一个为主要为类库使用设计的开源协议。和 GPL 要求任何使用/修改/衍生之GPL类库的的软件必须采用 GPL 协议不同。LGPL 允许商业软件通过类库引用(link)方式使用 LGPL 类库而不需要开源商业软件的代码。这使得采用 LGPL 协议的开源代码可以被商业软件作为类库引用并发布和销售。</p>

<p>但是如果修改 LGPL 协议的代码或者衍生，则所有修改的代码，涉及修改部分的额外代码和衍生的代码都必须采用 LGPL 协议。因此 LGPL 协议的开源代码很适合作为第三方类库被商业软件引用，但不适合希望以 LGPL 协议代码为基础，通过修改和衍生的方式做二次开发的商业软件采用。</p>

<p>GPL/LGPL 都保障原作者的知识产权，避免有人利用开源代码复制并开发类似的产品。</p>

<h2>MIT（MIT）</h2>

<p>MIT 是和 BSD 一样宽范的许可协议，作者只想保留版权，而无任何其他了限制。也就是说，你必须在你的发行版里包含原许可协议的声明，无论你是以二进制发布的还是以源代码发布的。</p>

<h2>参考资料</h2>

<ol>
<li><a href="http://www.opensource.org/licenses/alphabetical">开源协议</a></li>
<li><a href="http://www.awflasher.com/blog/archives/939">五种开源协议的比较(BSD,Apache,GPL,LGPL,MIT)</a></li>
<li><a href="http://www.gnu.org/licenses/license-list.html">Various Licenses and Comments about Them</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pow 安装配置及使用]]></title>
    <link href="http://blog.longgen.me/blog/2014/03/29/pow-an-zhuang-pei-zhi-ji-shi-yong/"/>
    <updated>2014-03-29T01:48:36+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/03/29/pow-an-zhuang-pei-zhi-ji-shi-yong</id>
    <content type="html"><![CDATA[<p>Pow，Mac OS X 上零配置的 Rack Server。它使得开发 Rails 及 Rack 应用更为简便。</p>

<!-- more -->


<ul>
<li>官网：<a href="http://pow.cx/">http://pow.cx/</a></li>
<li>Homebrew 的 GitHub 源码：<a href="https://github.com/Homebrew/homebrew">https://github.com/Homebrew/homebrew</a></li>
<li>Pow 的 GitHub 源码：<a href="https://github.com/basecamp/pow">https://github.com/basecamp/pow</a></li>
<li>Pow 文档说明：<a href="http://pow.cx/manual.html">http://pow.cx/manual.html</a></li>
<li>Pow 安装说明：<a href="https://github.com/basecamp/pow/wiki/Installation">https://github.com/basecamp/pow/wiki/Installation</a></li>
<li>Pow 常见错误解决办法：<a href="https://github.com/basecamp/pow/wiki/Troubleshooting">https://github.com/basecamp/pow/wiki/Troubleshooting</a></li>
</ul>


<h2>通过官方包安装（<strong>推荐方式</strong>）</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>    curl get.pow.cx | sh
</span></code></pre></td></tr></table></div></figure>


<h2>通过源码安装</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># 若未安装node 先安装node</span>
</span><span class='line'>brew install node
</span><span class='line'><span class="c"># clone 源码</span>
</span><span class='line'>git clone git@github.com:basecamp/pow.git
</span><span class='line'><span class="nb">cd </span>pow
</span><span class='line'>npm --global install
</span><span class='line'>npm --global run-script pow restart
</span><span class='line'><span class="c"># 若你希望在每次登陆时都通过 launchd 启动 Pow 则 </span>
</span><span class='line'>launchctl load -Fw <span class="s2">&quot;$HOME/Library/LaunchAgents/cx.pow.powd.plist&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Homebrew 安装及配置</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>    <span class="c"># 安装 pow</span>
</span><span class='line'>    brew install pow
</span><span class='line'>    <span class="c"># 根据 Caveats 配置相关目录</span>
</span><span class='line'>    mkdir -p ~/Library/Application<span class="se">\ </span>Support/Pow/Hosts
</span><span class='line'>    <span class="c"># 创建软链接，若 ~/.pow 目录不存在，则先mkdir ~/.pow</span>
</span><span class='line'>    ln -s ~/Library/Application<span class="se">\ </span>Support/Pow/Hosts ~/.pow
</span><span class='line'>
</span><span class='line'>    <span class="c"># Setup port 80 forwarding and launchd agents:</span>
</span><span class='line'>    sudo pow --install-system
</span><span class='line'>    pow --install-local
</span><span class='line'>
</span><span class='line'>    <span class="c"># Load launchd agents:</span>
</span><span class='line'>    sudo launchctl load -w /Library/LaunchDaemons/cx.pow.firewall.plist
</span><span class='line'>    launchctl load -w ~/Library/LaunchAgents/cx.pow.powd.plist
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IOS 开发笔记]]></title>
    <link href="http://blog.longgen.me/blog/2014/03/28/ios-kai-fa-bi-ji/"/>
    <updated>2014-03-28T10:19:33+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/03/28/ios-kai-fa-bi-ji</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xcode 使用技巧]]></title>
    <link href="http://blog.longgen.me/blog/2014/03/26/xcode-shi-yong-ji-qiao/"/>
    <updated>2014-03-26T16:52:01+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/03/26/xcode-shi-yong-ji-qiao</id>
    <content type="html"><![CDATA[<!-- more -->


<ul>
<li><p>在 IB 中，选中一个 view 并右键点击，将会出现灰色的 HUD，可以在其上方便地拖拉或设定事件和 outlet。你可以同时打开多个这样的面板来一次性添加所有 outlet。右键点击面板，随便拖动一下面板，然后再打开另一个。你会发现前一个面板也留下来了，这样你就可以方便地进行拖拽设定了。（当然，对于成组和行为类似的 IBOutlet，应该直接使用 IBOutletCollection 来进行处理会更方便。）</p></li>
<li><p>快速显示控件之间的距离：选中一个控件 A，然后按住 option 键并将鼠标移动到其他控件上，你可以发现 view 之间的距离都以很容易理解的方式显示出来了。不仅是同层次的 view，被选中 view 与其他层次的 view 之间的距离关系也可以同样显示。</p></li>
<li><p>快速选择叠加控件：对于一些复杂的 view 层级关系，我们往往直接在 IB 中选择会比较困难。比如 view 相互覆盖时，我们很难甚至不能在编辑视图中选中底层的 view。这时候一般的做法是打开左侧的 view 层级面板，一层层展开然后选择自己需要的 view。其实我们也有更简单的方法：按住 Cmd + Shift，然后在需要选择的 view 上方按右键，就可以列出在点击位置上所有的 view 的列表。藉此就可以方便快速地选中想要的 view 了。</p></li>
<li><p>添加辅助线：IB 中是可以添加水平和垂直的辅助线的。并且辅助线是可以拖动、重复添加和删除的。
水平辅助线的快捷键是：Command ＋ Shift ＋ －
垂直辅助线的快捷键是：Command ＋ Shift ＋ ｜
当然，也可以通过菜单命令来生成，位置在 Editor 菜单下。</p></li>
<li><p>显示控件相对位置：在IB中，选中一个control A,然后按住alt键，鼠标指向B，就显示A和B的相对位置关系，指向父view也行</p></li>
<li><p>代码格式化：Re-Indent</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SourceTree 工具]]></title>
    <link href="http://blog.longgen.me/blog/2014/03/25/sourcetree-gong-ju/"/>
    <updated>2014-03-25T15:28:00+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/03/25/sourcetree-gong-ju</id>
    <content type="html"><![CDATA[<h2>本地文件和服务器文件冲突解决办法</h2>

<ul>
<li>Dsicard Hunk 服务器覆盖本地冲突文件</li>
<li>Stage Hunk 本地覆盖服务器冲突文件</li>
<li>Discard Selected 服务器覆盖本地冲突文件中选中行代码</li>
<li>Stage Selected 本地覆盖服务器冲突文件中选中行代码</li>
</ul>


<!-- more -->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IOS 7 iPhone/iPad 应用开发技术详解]]></title>
    <link href="http://blog.longgen.me/blog/2014/03/25/ios-7-iphone-slash-ipad-ying-yong-kai-fa-ji-zhu-xiang-jie/"/>
    <updated>2014-03-25T14:57:42+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/03/25/ios-7-iphone-slash-ipad-ying-yong-kai-fa-ji-zhu-xiang-jie</id>
    <content type="html"><![CDATA[<blockquote><ul>
<li>书名《IOS 7 iPhone/iPad 应用开发技术详解》</li>
<li>书号 ISBN 978-7-111-44051-2</li>
<li>刘一道 著</li>
<li>机械工业出版社</li>
<li>2013 年 11 月第 1 版第 1 次印刷</li>
</ul>
</blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android 开发环境搭建]]></title>
    <link href="http://blog.longgen.me/blog/2014/03/25/android-kai-fa-huan-jing-da-jian/"/>
    <updated>2014-03-25T10:54:13+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/03/25/android-kai-fa-huan-jing-da-jian</id>
    <content type="html"><![CDATA[<h2>基于 Android Studio 搭建</h2>

<!-- more -->


<h2>基于 Eclipse 搭建</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenGL ES（IOS，Android）开发环境搭建]]></title>
    <link href="http://blog.longgen.me/blog/2014/03/25/opengl-es%28ios%2Candroid%29kai-fa-huan-jing-da-jian/"/>
    <updated>2014-03-25T10:13:36+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/03/25/opengl-es(ios,android)kai-fa-huan-jing-da-jian</id>
    <content type="html"><![CDATA[<h2>Mac 下开发环境搭建</h2>

<h3>基于 Eclipse 搭建</h3>

<ul>
<li>Eclipse 下载地址：<a href="http://www.eclipse.org/downloads/">http://www.eclipse.org/downloads/</a></li>
</ul>


<!-- more -->


<pre><code>* 下载 Eclipse IDE for C/C++ Developers 或 Eclipse for Parallel Application Developers 版本。版本自带 C/C++ Development Tools（CDT）。或下载 Eclipse Standard 版本，自行安装 CDT 等相关插件

* DevCPP 工具安装。

* 配置 Eclipse - window - preference - C/C++ - environment

    1. path 配置
    2. LIBRARY_PATH
    3. C_INCLUDE_PATH
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenGL ES 学习]]></title>
    <link href="http://blog.longgen.me/blog/2014/03/25/opengl-es-xue-xi/"/>
    <updated>2014-03-25T10:07:26+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/03/25/opengl-es-xue-xi</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IOS 下 OpenGL ES]]></title>
    <link href="http://blog.longgen.me/blog/2014/03/25/ios-xia-opengl-es/"/>
    <updated>2014-03-25T10:07:07+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/03/25/ios-xia-opengl-es</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android 下 OpenGL ES]]></title>
    <link href="http://blog.longgen.me/blog/2014/03/25/android-xia-opengl-es/"/>
    <updated>2014-03-25T10:06:52+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/03/25/android-xia-opengl-es</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Objective-C 学习]]></title>
    <link href="http://blog.longgen.me/blog/2014/03/23/objective-c-xue-xi/"/>
    <updated>2014-03-23T17:01:01+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/03/23/objective-c-xue-xi</id>
    <content type="html"><![CDATA[<h1>1 简介</h1>

<h2>1.1 预备知识</h2>

<ul>
<li>具备 C 类似编程语言的经验，对于不具备语言基础的，可以先阅读 Dava Mark 写的《Learn C On the Mac》
。</li>
</ul>


<h2>1.2 历史背景</h2>

<ul>
<li>20世纪80年代早期，Brad Cox 结合 C 语言及 Smalltakl 语言形成了 Objective-C。</li>
</ul>


<h2>1.3 内容简介</h2>

<p>Objective-C 是 C 语言的一个扩展集。Objective-C 以 C 语言为基础，扩展了许多特性。</p>

<!-- more -->


<h1>2 对 C 的扩展</h1>

<h2>2.1 Hello World</h2>

<ul>
<li><p>安装 Xcode</p></li>
<li><p>编写代码</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &lt;Foundation/Foundation.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span> <span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">NSlog</span><span class="p">(</span><span class="s">@&quot;Hello, world!&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>   <span class="c1">// main</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>.m 扩展名表示 Objective-C 文件，应由 Objective-C 编译器处理；.c 由 C编译器处理；.cpp 由 C++ 编译器处理。在 Xcode 中，所有这些编译工作全由 GCC（GNU Compiler Collection，GNU编译器集合）处理，这个编译器能理解 C 语言的这三个变体</li>
</ul>


<h3>2.2.1 #import</h3>

<p>C 语言中使用 #include 语句通知编译器在头文件中查询定义；Objective-C 中也可以使用 #include 来实现这个目的，但一般只使用 #import。#import 保证头文件只被包含一次</p>

<blockquote><p>C 语言中，长用基于 #ifdef 命令的方案来避免一个文件包含另一个文件，而后者又包含第一个文件的情况；Objective-C 中，使用 #import 可以实现这个功能。</p></blockquote>

<p>框架是一种聚集在一个单元的部件集合，包含头文件、库、图像、声音文件等。苹果公司提供 Cocoa（Cocoa 包含 Foundation 和 Application Kit（也称为 AppKit））、Carbon、QuickTime、OpenGL 等技术框架。还有一个支持框架的套件，包含 Core Animation 和 Core Image。</p>

<ul>
<li>Foundation 框架包含的头文件 Headers 目录位置：/System/Library/Frameworks/Foundation.framework/Headers/ 。仅查看，不修改或删除以避免造成破坏。</li>
</ul>


<blockquote><p>学完本书后，还需要精通 Cocoa 和 Application Kit，用户界面元素、打印、声音、颜色和声音管理、AppleScript 支持等。参阅《Learn Cocoa on the Mac》。</p></blockquote>

<h3>2.2.2 NSLog() 和 @“字符串&#8221;</h3>

<ul>
<li><p>类似 C 语言的 printf()，相对添加了新特性，例如时间戳、日期戳和自动附加换行符（&#8217;\n&#8217;）等。</p></li>
<li><p>NS 前缀代表函数来自Cocoa（前身NextSTEP）。</p></li>
<li><p>双引号字符串前加 @ 符号，表示引用的字符串应该作为 Cocoa 的 NSString 元素来处理</p></li>
</ul>


<h2>2.3 布尔类型</h2>

<p>类型 BOOL，值 YES 或 NO。</p>

<blockquote><p>Objective-C 中的 BOOL 实际上是一种对带符号的字符类型（signed char）的定义（typedef），它使用8位存储空间。YES 定义为1，NO 定义为0（使用 #define）。Objective-C 并不将 BOOL 作为仅能保存 YES 或 NO 值得真正布尔类型来处理。编译器将 BOOL 认作8位二进制数，YES 和 NO 只是一种约定。这引发了一个小问题：如果不小心将一个长于1字节的整型值（例如 short 或 int 值）赋给一个 BOOL 变量，那么只有低位字节会用作 BOOL 值。假设该低位字节刚好为0（例如8960，写成十六进制为0x2300），BOOL 值将会是0，即 NO 值。</p></blockquote>

<h1>3 面向对象编程基础知识</h1>

<p>面向对象编程（Object-Oriented Programming，OOP）。Cocoa 基于 OOP 概念，Objective-C 是一种面向对象语言</p>

<h2>3.1 间接（indirection）</h2>

<h3>3.1.1 变量与间接</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &lt;Foundation/Foundation.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="n">argv</span><span class="p">[])</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;The numbers from 1 to %d:&quot;</span><span class="p">,</span> <span class="n">count</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">count</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>   <span class="c1">// main</span>
</span></code></pre></td></tr></table></div></figure>


<h3>3.1.2 使用文件名的间接</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &lt;Foundation/Foundation.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="n">argv</span><span class="p">[])</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">argc</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;You need to provide a file name!&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">FILE</span> <span class="o">*</span><span class="n">wordFile</span> <span class="o">=</span> <span class="n">fopen</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="s">&quot;r&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="kt">char</span> <span class="n">word</span><span class="p">[</span><span class="mi">100</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">while</span> <span class="p">(</span><span class="n">fgets</span><span class="p">(</span><span class="n">word</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="n">wordFile</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// strip off the trailing \n</span>
</span><span class='line'>        <span class="n">word</span><span class="p">[</span><span class="n">strlen</span><span class="p">[</span><span class="n">word</span><span class="p">]</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="sc">&#39;\0&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%s is %d characters long&quot;</span><span class="p">,</span> <span class="n">word</span><span class="p">,</span> <span class="n">strlen</span><span class="p">(</span><span class="n">word</span><span class="p">));</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">fclose</span><span class="p">(</span><span class="n">wordFile</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>   <span class="c1">// main</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>在 Xcode 中提供文件路径：在 Xcode 文件列表中展开 Executables，并双击程序名；单击 Arguments 区域下的加号，并输入启动参数。</p></blockquote>

<h2>3.2 在面向对象的编程中使用间接</h2>

<h1>4 继承</h1>

<h2>4.1 为何使用继承</h2>

<h2>4.2 继承语法</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">@interface</span> <span class="nc">Circle</span> : <span class="nc">NSObject</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>某些语言（例如 C++）具有多继承特性。但 Objective-C 不支持多继承。你可以通过 Objective-C 的其他特性获取多继承的优点，例如分类或协议</p></blockquote>

<h2>4.3 继承的工作机制</h2>

<h3>4.3.1 方法调度</h3>

<p>对象收到消息时，它从自身开始往其继承链上的超类层层往上查找对应方法，并执行。若在最高级别的超类（NSObject）中也没有该方法，则会出现运行时错误。</p>

<h3>4.3.2 实例变量</h3>

<h2>4.4 重写方法</h2>

<h1>5 复合</h1>

<h2>5.1 什么是复合</h2>

<h2>5.2 存取方法</h2>

<p>为存取方法命名：setter 方法需加前缀 set；getter 方法则仅仅根据其返回的属性名称来命名，不要将get作为前缀</p>

<blockquote><p>get 这个词在 Cocoa 中有特殊约定含义：get 出现在 Cocoa 的方法名称中，意味着这个方法会通过你当做参数传入的指针来返回数值。例如，NSData的getBytes方法。</p></blockquote>

<h2>5.3 复合（has a）与继承（is a）的选择</h2>

<h1>6 源文件组织</h1>

<p>Objective-C 类的源码分为两部分：接口（interface），用来提供类的公共描述；实现（implementation），告诉编译器如何让该类工作，实现了接口中声明的方法。</p>

<ul>
<li><p>.h 文件存放接口部分代码：类的 @interface 指令、公共 struct 定义、enum 常量、#defines 和 extern 全局变量等。</p></li>
<li><p>.m 文件存放所有实现细节：类的 @implementation 指令、全局变量的定义、私有struct等</p></li>
</ul>


<blockquote><p>.mm 文件表示你用 Objective-C++ 编写代码的文件，可以使用 C++ 语言和 Objective-C 结合编程</p>

<p>@class 创建向前引用，避免循环依赖关系时，编译错误</p></blockquote>

<h1>7 深入了解 Xcode</h1>

<ul>
<li><p>通用常用快捷键</p>

<ul>
<li>control + A：      移动到行首（同 command + 左箭头）</li>
<li>control + E：      移动到行尾（同 command + 右箭头）</li>
<li>control + D：      删除（Delete）光标右边的字符</li>
<li>control + K：      删除（Kill）光标所在行中光标后的代码</li>
<li>control + L：      将插入点置于窗口正中。找不到光标或者想要移动窗口使插入点快速位于正中的快捷键</li>
</ul>
</li>
<li><p>Xcode 快捷键</p>

<ul>
<li>command + shift + D：          查找文件</li>
<li>command + option + 上箭头：     查看当前文件的配套文件</li>
<li>command + shift + E：          打开扩展编辑器</li>
<li>command + [：                  左移代码块</li>
<li>command + ]：                  右移代码块</li>
<li>Tab：                          接受代码提示</li>
<li>Esc：                          显示代码提示菜单</li>
<li>control + .：                  循环浏览代码提示</li>
<li>shift + control + .：          反向循环浏览代码提示</li>
<li>control + /：                  移动到代码提示中得下一个占位符</li>
<li>command + option + D：         显示 Open Quickly 窗口</li>
<li>command + option + 上箭头：     查看当前文件的配套文件</li>
<li>command + D：                  添加书签</li>
<li>option + 双击某个符号：          查找该符号相关文档</li>
<li>command + R：                  运行程序</li>
<li>command + Y：                  调试程序</li>
<li>command + option + P：         继续（在调试器中）</li>
<li>command + option + O：         跳过</li>
<li>command + option + I：         跳入</li>
<li>command + option + T：         跳出</li>
</ul>
</li>
</ul>


<blockquote><p>Xcode 使用的调试器是 GDB。GDB 是GNU项目的一部分，它可以在很多不同平台上使用。</p></blockquote>

<h1>8 Foundation Kit</h1>

<h2>8.1 数据类型</h2>

<h3>8.1.1 NSRange</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">typedef</span> <span class="k">struct</span> <span class="n">_NSRange</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">location</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">length</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="n">NSRange</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* 聚合结构赋值 */</span>
</span><span class='line'><span class="n">NSRange</span> <span class="n">range</span> <span class="o">=</span> <span class="p">{</span><span class="mi">17</span><span class="p">,</span> <span class="mi">4</span><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* NSMakeRange()赋值 */</span>
</span><span class='line'><span class="n">NSRange</span> <span class="n">r</span> <span class="o">=</span> <span class="n">NSMakeRange</span><span class="p">(</span><span class="mi">17</span><span class="p">,</span> <span class="mi">4</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h3>8.1.2 几何数据类型</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">typedef</span> <span class="k">struct</span> <span class="n">_NSPoint</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">float</span> <span class="n">x</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">float</span> <span class="n">y</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="n">NSPoint</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">typedef</span> <span class="k">struct</span> <span class="n">_NSSize</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">float</span> <span class="n">width</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">float</span> <span class="n">height</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="n">NSSize</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">typedef</span> <span class="k">struct</span> <span class="n">_NSRect</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSPoint</span> <span class="n">origin</span><span class="p">;</span>
</span><span class='line'>    <span class="n">NSSize</span> <span class="n">size</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="n">NSRect</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* 创建这些数据类型的快捷函数：NSMakePoint()、NSMakeSize() 和 NSMakeRect() */</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>这些数据类型是 C 的 struct，能提升性能。程序（尤其是 GUI 程序）会用到许多临时的点，大小和句型来完成它们的工作。所有的 Objective-C 对象都是动态分配的，而动态分配是一个代价较高得操作，它会消耗大量的时间。所以将这些结构创建成第一等级的对象都会在使用过程中增加大量的系统开销。</p></blockquote>

<h2>8.2 不可变字符串 NSString</h2>

<ul>
<li><p>NSString 的 length 方法能够准确无误的处理国际字符串，如含有中文、俄文或日文字符的字符串，以及使用 Unicode 国际字符标准的字符串。</p></li>
<li><p>比较两个字符串内容是否相等时，应用 isEuqalToString:，而不能用 == 进行比较，后者仅进行指针（即是否是同一个对象）的比较。</p></li>
<li><p>NSString 是不可变的。它的子类 NSMutableString 是可变字符串。</p></li>
</ul>


<h2>8.4 集合家族</h2>

<h3>8.4.1 不可变数组 NSArray</h3>

<p>NSArray 是一个 Cocoa 类，用来存储对象的有序列表。它只能存储 Objective-C 对象，而不能存储 C 语言中的基本数据类型，如 int、float、enum、struct，或 NSArray 中的随机指针；同时，不能在 NSArray 中存储 nil（对象的零值或 NULL 值）。</p>

<h3>8.4.2 可变数组 NSMutableArray</h3>

<h3>8.4.3 枚举</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSArray</span> <span class="o">*</span><span class="n">array</span><span class="p">;</span>
</span><span class='line'><span class="n">array</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSArray</span> <span class="nl">arrayWithObjects:</span> <span class="s">@&quot;one&quot;</span><span class="p">,</span> <span class="s">@&quot;two&quot;</span><span class="p">,</span> <span class="s">@&quot;three&quot;</span><span class="p">,</span> <span class="nb">nil</span><span class="p">];</span>
</span><span class='line'><span class="n">NSEnumerator</span> <span class="o">*</span><span class="n">enumerator</span><span class="p">;</span>
</span><span class='line'><span class="n">enumerator</span> <span class="o">=</span> <span class="p">[</span><span class="n">array</span> <span class="n">objectEnumerator</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="kt">id</span> <span class="n">thingie</span><span class="p">;</span>
</span><span class='line'><span class="k">while</span> <span class="p">(</span><span class="n">thingie</span> <span class="o">=</span> <span class="p">[</span><span class="n">enumerator</span> <span class="n">nextObject</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;I found %@&quot;</span><span class="p">,</span> <span class="n">thingie</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* 可变数组枚举时，不能添加或身处对象等方式改变数组容器，否则可能会得到未定义结果 */</span>
</span></code></pre></td></tr></table></div></figure>


<h3>8.4.4 快速枚举</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cm">/* Mac OS X 10.5（Leopard），Objective-C 2.0 版本之后，增加快速枚举 */</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="n">string</span> <span class="k">in</span> <span class="n">array</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;I found %@&quot;</span><span class="p">,</span> <span class="n">string</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>8.4.5 不可变字典 NSDictionary 与 可变字典 NSMutableDictionary</h3>

<blockquote><p>字典（也被称为散列表或关联数组）使用的是键查询的优化存储方式，它可以立即找出要查询的数据，而不需要遍历整个数组，比普通数组的查询方式更为快速</p></blockquote>

<h3>8.4.6 使用，但不要扩展</h3>

<p>在 Cocoa 中，许多类实际上是以 <em>类簇</em> 的方式实现的，即它们是隐藏在通用接口下的与实现相关的类。创建 NSString 对象时，实际上获得的可能是 NSLiteralString、NSCFString、NSSimpleCString、NSBallofString 或者其他未写入文档的与实现相关的对象。通常，你可以将 NSString 或 NSArray 复合到你的某个类中或者使用类别来解决这种编程问题，而不用创建子类。</p>

<h2>8.5 数值类型</h2>

<p>NSArray 和 NSDictionary 只能存储对象，而不能直接存储任何基本类型的数据，如 int、float 或 struct。但你可以用对象来封装基本类型（装箱，boxing），例如，将 int 数据封装在一个对象中，然后就可以存入 NSArray 或 NSDictionary 了。</p>

<h3>8.5.1 NSNumber</h3>

<blockquote><p>通常将一个基本类型的数据封装成对象叫做 <em>装箱（boxing）</em>，从对象中提取基本类型的数据叫做 <em>取消装箱（unboxing）</em>。有些语言有 <em>自动装箱</em> 功能。Objective-C 语言不支持自动装箱。</p></blockquote>

<h3>8.5.2 NSValue</h3>

<p>NSNumber 实际上是 NSValue 的子类，NSValue 可以包装任意值。你可以用 NSValue 将结构放入 NSArray 或 NSDictionary 中。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSRect</span> <span class="n">rect</span> <span class="o">=</span> <span class="n">NSMakeRect</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">40</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSValue</span> <span class="o">*</span><span class="n">value</span><span class="p">;</span>
</span><span class='line'><span class="n">value</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSValue</span> <span class="nl">valueWithBytes:</span> <span class="o">&amp;</span><span class="n">rect</span> <span class="nl">objCType:</span> <span class="k">@encode</span><span class="p">(</span><span class="n">NSRect</span><span class="p">)];</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">array</span> <span class="nl">addObject:</span> <span class="n">value</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">value</span> <span class="o">=</span> <span class="p">[</span><span class="n">array</span> <span class="nl">objectAtIndex:</span> <span class="mi">0</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">value</span> <span class="nl">getValue:</span> <span class="o">&amp;</span><span class="n">rect</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<h3>8.5.3 NSNull</h3>

<p>使用NSNull值代表不存在的意义，它可以被加入到集合中。<code>[NSNull null]</code> 总是返回一样的数值，并且可以使用 == 运算符进行比较。</p>

<h1>9 内存管理</h1>

<p>Objective-C 2.0 提供了垃圾回收机制。</p>

<h2>9.1 对象生命周期</h2>

<h3>9.1.1 引用计数（reference counting，也叫保留计数）</h3>

<h3>9.1.2 对象所有权（object ownership）</h3>

<h3>访问方法中的保留和释放</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">setEnging:</span> <span class="p">(</span><span class="n">Engine</span> <span class="o">*</span><span class="p">)</span> <span class="n">newEngine</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">newEngine</span> <span class="n">retain</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">engine</span> <span class="n">release</span><span class="p">];</span>
</span><span class='line'>    <span class="n">engine</span> <span class="o">=</span> <span class="n">newEngine</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>   <span class="c1">// setEngine</span>
</span></code></pre></td></tr></table></div></figure>


<h2>9.2 自动释放</h2>

<h3>9.2.1 所有对象全部入池</h3>

<p>Cocoa 中有一个 <em>自动释放池（autorelease pool）</em> 的概念</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span> <span class="nf">description</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">NSString</span> <span class="o">*</span><span class="n">description</span><span class="p">;</span>
</span><span class='line'>    <span class="n">description</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSString</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFormat:</span> <span class="s">@&quot;I am %d years old.&quot;</span><span class="p">,</span> <span class="mi">4</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="p">([</span><span class="n">description</span> <span class="n">autorelease</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>   <span class="c1">// description</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 你可以编写如下代码</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="p">[</span><span class="n">someObject</span> <span class="n">description</span><span class="p">]);</span>
</span></code></pre></td></tr></table></div></figure>


<h3>9.2.2 自动释放池的销毁时间</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// 创建池</span>
</span><span class='line'><span class="n">NSAutoreleasePool</span> <span class="o">*</span><span class="n">pool</span><span class="p">;</span>
</span><span class='line'><span class="n">pool</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSAutoreleasePool</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="c1">// 其他代码</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 释放池</span>
</span><span class='line'><span class="p">[</span><span class="n">pool</span> <span class="n">release</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>-drain 方法只是清空自动释放池而不销毁它。-drain 方法适用于Mac OS X 10.4（Tiger）及更高版本。</p></blockquote>

<h3>9.2.3 自动释放池的工作过程</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="kt">int</span> <span class="nf">main</span> <span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">NSAutoreleasePool</span> <span class="o">*</span><span class="n">pool</span><span class="p">;</span>
</span><span class='line'>    <span class="n">pool</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSAutoreleasePool</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">RetainTracker</span> <span class="o">*</span><span class="n">tracker</span><span class="p">;</span>
</span><span class='line'>    <span class="n">tracker</span> <span class="o">=</span> <span class="p">[</span><span class="n">RetainTracker</span> <span class="n">new</span><span class="p">];</span>   <span class="c1">// count: 1</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">tracker</span> <span class="n">retain</span><span class="p">];</span> <span class="c1">// count: 2</span>
</span><span class='line'>    <span class="p">[</span><span class="n">tracker</span> <span class="n">autorelease</span><span class="p">];</span> <span class="c1">// count: still 2</span>
</span><span class='line'>    <span class="p">[</span><span class="n">tracker</span> <span class="n">release</span><span class="p">];</span>  <span class="c1">// count: 1</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;releasing pool&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">[</span><span class="n">pool</span> <span class="n">release</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>   <span class="c1">// main</span>
</span></code></pre></td></tr></table></div></figure>


<h2>9.3 Cocoa 内存管理规则</h2>

<ul>
<li><p>当你使用 new、alloc 或 copy 方法创建一个对象时，该对象的保留计数器值为1。当不再使用该对象时，你需要负责向该对象发送一条 release 或 autorelease 消息。</p></li>
<li><p>当你通过任何其他方法获得一个对象时，则将设该对象的保留计数器值为1，而且已经被设置为自动释放，你不需要执行任何操作来确保该对象被清理。如果你打算在一段时间内拥有该对象，则需要保留它并确保在操作完成时释放它。</p></li>
<li><p>如果你保留了某个对象，你需要（最终）释放或自动释放该对象。必须保持 retain 方法和 release 方法的使用次数相等。</p></li>
</ul>


<h3>9.3.1 临时对象</h3>

<h3>9.3.2 拥有对象</h3>

<p>通常，你可能希望在多个代码行中一直拥有某个对象。常见方法：在其他对象的实例变量中使用这些对象，将它们加入到诸如 NSArray 或 NSDictionary 等集合中，或者（更罕见的情况）将其作为全局变量使用。</p>

<p>如果你正在使用 new、alloc 或 copy 方法获得一个对象，则不需要执行任何其他操作。该对象的保留计数器值为1，因此它将一直保留，只是一定要在拥有该对象的对象的 dealloc 方法中释放该对象。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">doStuff</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// flonkArray is an instance variable</span>
</span><span class='line'>    <span class="n">flonkArray</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSMutableArray</span> <span class="n">new</span><span class="p">];</span>    <span class="c1">// count: 1</span>
</span><span class='line'><span class="p">}</span>   <span class="c1">// doStuff</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">dealloc</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">flonkArray</span> <span class="n">release</span><span class="p">];</span>     <span class="c1">// count: 0</span>
</span><span class='line'>    <span class="p">[</span><span class="n">super</span> <span class="n">dealloc</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>   <span class="c1">// dealloc</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果你使用除 alloc、new 或 copy 以外的方法获得一个对象，你需要保留该对象。考虑编写 GUI 应用程序时事件循环的情况。你希望保留自动释放的对象，使这些对象在当前的事件循环结束以后仍能继续存在。</p>

<p>为了降低程序的内存空间占用，Cocoa 在程序开始处理事件之前创建一个自动释放池，并在事件处理结束后销毁该自动释放池，这样可以使积累的临时对象的数量保持在最低程度。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// 当使用自动释放对象时，前面的方法可以重写如下：</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">doStuff</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// flonkArray is an instance variable</span>
</span><span class='line'>    <span class="n">flonkArray</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSMutableArray</span> <span class="nl">arrayWithCapacity:</span> <span class="mi">17</span><span class="p">];</span>    <span class="c1">// count: 1, autoreleased</span>
</span><span class='line'>    <span class="p">[</span><span class="n">flonkArray</span> <span class="n">retain</span><span class="p">];</span>    <span class="c1">// count: 2, 1 autorelease</span>
</span><span class='line'><span class="p">}</span>   <span class="c1">// doStuff</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">dealloc</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">flonkArray</span> <span class="n">release</span><span class="p">];</span>   <span class="c1">// count: 0</span>
</span><span class='line'>    <span class="p">[</span><span class="n">super</span> <span class="n">dealloc</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>   <span class="c1">// dealloc</span>
</span></code></pre></td></tr></table></div></figure>


<p>清理自动释放池</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">1000000</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">id</span> <span class="n">object</span> <span class="o">=</span> <span class="p">[</span><span class="n">someArray</span> <span class="nl">objectAtIndex:</span> <span class="n">i</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSString</span> <span class="o">*</span><span class="n">desc</span> <span class="o">=</span> <span class="p">[</span><span class="n">object</span> <span class="n">description</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">// and do something with the description</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* 上面这段代码执行一个循环，在大量的迭代中每次都会生成一个（或2个，10个）自动释放对象。请记住，自动释放池的销毁事件是完全确定的，它在循环执行的过程中不会被销毁。这个循环创建了100万个 description 字符串对象，所有这些对象都被放进当前的自动释放池中，因此就产生了100万个闲置的字符串，这100万个字符串对象一直存在，当自动释放池销毁时才最终获得释放。解决这类问题的方法是在循环中创建自己的释放池，每执行1000次左右，销毁当前自动释放池并创建一个新的自动释放池。代码如下 */</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSAutoreleasePool</span> <span class="o">*</span><span class="n">pool</span><span class="p">;</span>
</span><span class='line'><span class="n">pool</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSAutoreleasePool</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">1000000</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">id</span> <span class="n">object</span> <span class="o">=</span> <span class="p">[</span><span class="n">someArray</span> <span class="nl">objectAtIndex:</span> <span class="n">i</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSString</span> <span class="o">*</span><span class="n">desc</span> <span class="o">=</span> <span class="p">[</span><span class="n">object</span> <span class="n">description</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">// and do something with the description</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="o">%</span> <span class="mi">1000</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">[</span><span class="n">pool</span> <span class="n">release</span><span class="p">];</span>
</span><span class='line'>        <span class="n">pool</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSAutoreleasePool</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="p">[</span><span class="n">pool</span> <span class="n">release</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* 自动释放池以栈的形式实现：当你创建一个新的自动释放池时，它将被添加到栈顶，接收 autorelease 消息的对象将被放入最顶端的自动释放池中。如果将一个对象放入一个自动释放池中，然后创建一个新的自动释放池再销毁该新建的自动释放池，则这个自动释放对象仍将存在，因为容纳该对象的自动释放池仍然存在。 */</span>
</span></code></pre></td></tr></table></div></figure>


<h3>9.3.3 垃圾回收</h3>

<p>Objective-C 2.0 引入了自动内存管理机制</p>

<blockquote><p>&ldquo;-fobjc-gc&rdquo; 选项能使代码既支持垃圾回收机制又支持对象的保留和释放。</p></blockquote>

<p>启用垃圾回收以后，通常的内存管理命令全都变成了空操作指令，不执行任何操作。</p>

<p>Objective-C 的垃圾回收是一种继承性的垃圾回收器。与那些存在了一段时间的对象相比，新创建的对象更可能被当成垃圾。如果在一个实例变量中指向某个对象，一定要在某个时候使该实例变量赋值为 nil，以取消对该对象的引用并使垃圾回收器知道该对象可以被清理。</p>

<h1>10 对象初始化</h1>

<h2>10.1 分配对象</h2>

<p>分配（allocation）对象，从操作系统中获得一块内存并将其指定为存放对象的实例变量的位置。alloc 方法将分配的内存初始化为0。所有的 BOOL 类型变量初始化为 NO，int 类型变量初始化为0，float 类型变量初始化为0.0，指针被初始化为 nil。</p>

<h2>初始化对象</h2>

<p>初始化（initialization）从操作系统获取一块内存，准备用于存储对象。init 方法几乎总是返回他们正在初始化的对象。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">Car</span> <span class="o">*</span><span class="n">car</span> <span class="o">=</span> <span class="p">[[</span><span class="n">Car</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span> <span class="c1">// 不能将分配及初始化分开写，避免初始化方法返回的对象与分配的对象不同</span>
</span></code></pre></td></tr></table></div></figure>


<h3>10.2.1 编写初始化方法</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span> <span class="nf">init</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">self</span> <span class="o">=</span> <span class="p">[</span><span class="n">super</span> <span class="n">init</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">enging</span> <span class="o">=</span> <span class="p">[</span><span class="n">Engine</span> <span class="n">new</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">tires</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="n">Tire</span> <span class="n">new</span><span class="p">];</span>
</span><span class='line'>        <span class="n">tires</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="n">Tire</span> <span class="n">new</span><span class="p">];</span>
</span><span class='line'>        <span class="n">tires</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="n">Tire</span> <span class="n">new</span><span class="p">];</span>
</span><span class='line'>        <span class="n">tires</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="n">Tire</span> <span class="n">new</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="n">self</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>   <span class="c1">// init</span>
</span></code></pre></td></tr></table></div></figure>


<h3>10.6 指定初始化函数</h3>

<h3>10.7 初始化函数规则</h3>

<ul>
<li><p>不需要为你自己的类创建初始化函数方法。如果不需要设置任何状态，或者只需要 alloc 方法将内存清零的默认行为，则不需要担心init。</p></li>
<li><p>如果构造了一个初始化函数，则一定要在你自己的指定初始化函数中调用超类的指定初始化函数。</p></li>
<li><p>如果初始化函数不止一个，则要选择一个作为指定初始化函数。被选定的方法应该调用超类的指定初始化函数。</p></li>
</ul>


<h1>11 特性</h1>

<p>Objective-C 2.0 中引入了特性（property），它组合了新的预编译指令和新的属性访问器语法。</p>

<h2>11.1 修改特性值</h2>

<h2>11.1.1 简化接口</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &lt;Foundation/Foundation.h&gt;</span>
</span><span class='line'><span class="cp">#import &quot;Tire.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">AllWeatherRadial</span> : <span class="nc">Tire</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">float</span> <span class="n">rainHandling</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">float</span> <span class="n">snowHandling</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span> <span class="kt">float</span> <span class="n">rainHandling</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="kt">float</span> <span class="n">snowHandling</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>    <span class="c1">// AllWeatherRadial</span>
</span></code></pre></td></tr></table></div></figure>


<p>@property 预编译指令自动声明属性的 setter 和 getter方法</p>

<h3>11.1.2 简化实现</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &quot;AllWeatherRadial.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#implementtation AllWeatherRadial</span>
</span><span class='line'>
</span><span class='line'><span class="k">@synthesize</span> <span class="n">rainHandling</span><span class="p">;</span>
</span><span class='line'><span class="k">@synthesize</span> <span class="n">snowHandling</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span> <span class="nf">initWithPressure:</span> <span class="p">(</span><span class="kt">float</span><span class="p">)</span> <span class="n">p</span> <span class="nl">treadDepth:</span> <span class="p">(</span><span class="kt">float</span><span class="p">)</span> <span class="n">td</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">self</span> <span class="o">=</span> <span class="p">[</span><span class="n">super</span> <span class="nl">initWithPressure:</span> <span class="n">p</span> <span class="nl">treadDepth:</span> <span class="n">td</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">rainHandling</span> <span class="o">=</span> <span class="mf">23.7</span><span class="p">;</span>
</span><span class='line'>        <span class="n">snowHandling</span> <span class="o">=</span> <span class="mf">42.5</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="n">self</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>   <span class="c1">// initWithPressure: treadDepth</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span> <span class="n">description</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">NSString</span> <span class="o">*</span><span class="n">desc</span><span class="p">;</span>
</span><span class='line'>    <span class="n">desc</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSString</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFormat:</span> <span class="s">@&quot;AllWeatherRadial: %.1f / %.1f / %.1f / %.1f&quot;</span><span class="p">,</span> <span class="p">[</span><span class="n">self</span> <span class="n">pressure</span><span class="p">],</span> <span class="p">[</span><span class="n">self</span> <span class="n">treadDepth</span><span class="p">],</span> <span class="p">[</span><span class="n">self</span> <span class="n">rainHandling</span><span class="p">],</span> <span class="p">[</span><span class="n">self</span> <span class="n">snowHandling</span><span class="p">]];</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="n">desc</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>   <span class="c1">// description</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>    <span class="c1">// AllWeatherRadial</span>
</span></code></pre></td></tr></table></div></figure>


<p>@synthesize 表示：创建该属性的访问器</p>

<h3>11.1.3 点表达式</h3>

<p>点表达式出现在等号左边，该属性名称的 setter 方法将被调用，如果点表达式出现在对象变量的右边，则该属性名称的 getter 方法将被调用。</p>

<h2>11.2 特性扩展</h2>

<h3>11.2.1 名称的使用</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">@synthesize</span> <span class="n">name</span> <span class="o">=</span> <span class="n">appellcation</span>
</span></code></pre></td></tr></table></div></figure>


<h3>11.2.2 只读特性</h3>

<h1>12 类别</h1>

<h2>12.1 创建类别（category）</h2>

<h3>12.1.1 声明类别</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cm">/* 类别的声明格式与类的声明格式相似，类别名称必须唯一 */</span>
</span><span class='line'><span class="k">@interface</span> <span class="nc">NSString</span> <span class="nl">(NumberConvenience)</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSNumber</span><span class="p">)</span> <span class="nf">lengthAsNumber</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>    <span class="c1">// NumberConvenience</span>
</span></code></pre></td></tr></table></div></figure>


<p>类别不能添加新的实例变量，因此类别的声明中没有实例变量部分。</p>

<h3>12.1.2 实现类别</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">@implementation</span> <span class="nc">NSString</span> <span class="nl">(NumbreConvenience)</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSNumber</span> <span class="o">*</span><span class="p">)</span> <span class="nf">lengthAsNumber</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">length</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="n">length</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="p">([</span><span class="n">NSNumber</span> <span class="nl">numberWithUnsignedInt:</span> <span class="n">length</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>   <span class="c1">// lengthAsNumber</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>    <span class="c1">// NumberConvenience</span>
</span></code></pre></td></tr></table></div></figure>


<h3>12.1.3 类别的局限性</h3>

<ul>
<li><p>无法向类中添加新的实例变量。类别没有位置容纳实例变量。</p></li>
<li><p>名称冲突，即类别中的方法与现有的方法重名。当发生名称冲突时，类别具有更高的优先级，类别方法将取代初始方法，从而无法再使用初始方法。可加特定前缀以避免冲突。</p></li>
</ul>


<blockquote><p>也有一些技术可以克服类别无法增加新实例变量的局限，例如：全局字典存储对象与你想要关联的额外变量之间的映射。但此时需考虑，类别是否完成当前任务的最佳选择。</p></blockquote>

<h3>12.1.4 类别的作用</h3>

<ul>
<li><p>将类的实现分散到多个不同文件或多个不同框架中；</p></li>
<li><p>创建对私有方法的向前引用；</p></li>
<li><p>向对象添加非正式协议（informal protocol）。</p></li>
</ul>


<h2>12.2 利用类别分散实现</h2>

<h2>12.3 使用类别创建向前引用</h2>

<p>如果能够先定义一个方法，然后再使用它，编译器将会找到你的方法定义，因而不产生警告。如果不方便这么做，或者你使用了另一个类尚未发布的方法，那么就需要采取其他措施。</p>

<p>通过在类别中声明该方法，编译器将不会产生警告。</p>

<h2>12.4 非正式协议和委托类别</h2>

<p>委托强调类别的一种应用：被发送给委托对象的方法可以声明为一个 NSObject 的类别。</p>

<blockquote><p>像这样创建 NSObject 的类别，任何类的对象都可以作为委托对象使用。</p></blockquote>

<p>非正式协议是 NSObject 的一个类别，它可以列出对象能够响应的方法。非正式协议用于实现委托。</p>

<p>选择器：@selector，可以在代码中指定特定的 Objective-C 消息。</p>

<h1>13 协议</h1>

<h2>13.1 正式协议</h2>

<p>与非正式协议一样，正式协议也是一个命名的方法列表。但与非正式协议不同的是，正式协议要求显式的采用协议。采用协议的方法是在类的 @interface 声明中列出协议的名称。此时，你的类遵守该协议，并应该实现该协议的所有方法，否则，编译器会生成警告。Objective-C 2.0增加了一些良好的特性，以便更好使用协议。</p>

<blockquote><p>正式协议类似 Java 接口</p></blockquote>

<h3>13.1.1 声明协议</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// 声明正式协议</span>
</span><span class='line'><span class="k">@protocol</span> <span class="nc">NSCopying</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span> <span class="nf">copyWithZone:</span> <span class="p">(</span><span class="n">NSZone</span> <span class="o">*</span><span class="p">)</span> <span class="n">zone</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>@protocol 告诉编译器，这是一个正式协议。</p></li>
<li><p>协议名称必须唯一。</p></li>
<li><p>方法声明列表中的方法，在协议的每个采用者中都必须被实现。</p></li>
<li><p>使用协议不可引入新的实例变量。</p></li>
</ul>


<h3>13.1.2 采用协议</h3>

<p>要采用某个协议，必须在类声明中列出该协议的名称，并用尖括号括起。若存在多个协议，逗号隔开（顺序无关）。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// Car 采用协议 NSCopying 及 NSCoding</span>
</span><span class='line'><span class="k">@interface</span> <span class="nc">Car</span> : <span class="nc">NSObject</span> <span class="o">&lt;</span><span class="n">NSCopying</span><span class="p">,</span> <span class="n">NSCoding</span><span class="o">&gt;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// instance variables</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// methods</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>    <span class="c1">// Car</span>
</span></code></pre></td></tr></table></div></figure>


<h3>13.1.3 实现协议</h3>

<h2>13.2 复制</h2>

<blockquote><p>浅层复制（Shallow Copy）、深层复制（Deep Copy）</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// 深层复制</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span> <span class="nf">copyWithZone:</span> <span class="p">(</span><span class="n">NSZone</span> <span class="o">*</span><span class="p">)</span> <span class="n">zone</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">Tire</span> <span class="o">*</span> <span class="n">tireCopy</span><span class="p">;</span>
</span><span class='line'>    <span class="n">tireCopy</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">self</span> <span class="n">class</span><span class="p">]</span> <span class="nl">allocWithZone:</span> <span class="n">zone</span><span class="p">]</span> <span class="nl">initWithPressure:</span> <span class="n">pressure</span> <span class="nl">treadDepth:</span> <span class="n">treadDepth</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="n">tireCopy</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>   <span class="c1">// copyWithZone</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>C 风格指针运算符直接访问实例变量<code>tireCopy -&gt; pressure = pressure; tireCopy -&gt; treadDepth = treadDepth;</code>。一般，设置属性不涉及额外工作时，尽量使用init方法和访问器方法。</p></blockquote>

<h2>13.3 Objective-C 2.0 新特性</h2>

<ul>
<li><p>新增协议修饰符：@optional（方法可选实现）、@required（方法必须实现，默认属性）。</p></li>
<li><p>非正式协议在 Objective-C 2.0 之后，主键被带有 @optional 方法的正式协议代替。</p></li>
</ul>


<h1>14 AppKit 简介</h1>

<h2>14.1 构建项目</h2>

<blockquote><p>拖动连接的路径是从需要知道某些内容的对象到该对象需要了解的对象。类似 AppController 需要知道将哪个 NSTextField 用于用户输入，因此拖动方向从 AppController 到文本域。按钮需要知道告诉哪个对象，按钮被 click 了，此时需要从按钮拖到AppController。</p></blockquote>

<h1>15 文件加载与保存</h1>

<p>标准 C 函数库提供了函数调用来创建、读取和写入文件，例如 open()、read()、write()、fopen() 和 fread()等。Cocoa 提供了 Core Data。另外 Cocoa 提供了两个通用的文件处理类：属性列表和对象编码。</p>

<h1>15.1 属性列表</h1>

<p>属性列表对象，常简写为 plist。属性列表类包括 NSArray、NSDictionary、NSString、NSNumber、NSDate、NSData，以及他们的变体（如果变体存在）。</p>

<h3>15.1.1 NSDate</h3>

<h3>15.1.2 NSData</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// NSData 对象保存一个普通的 C 字符串（一个字节序列），然后输出数据</span>
</span><span class='line'><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">string</span> <span class="o">=</span> <span class="s">&quot;Hi there, this is a C string!&quot;</span><span class="p">;</span>
</span><span class='line'><span class="c1">// length: strlen(string) + 1 用于包含 C 字符串所需的尾部的零字节。</span>
</span><span class='line'><span class="n">NSData</span> <span class="o">*</span><span class="n">data</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSData</span> <span class="nl">dataWithBytes:</span> <span class="n">string</span> <span class="nl">length:</span> <span class="n">strlen</span><span class="p">(</span><span class="n">string</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">];</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;data is %@&quot;</span><span class="p">,</span> <span class="n">data</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//输出结果：`data is &lt;48692074 68657265 2c207468 69732069 73206120 43207374 72696e67 2100&gt;`</span>
</span><span class='line'><span class="c1">// 包含末尾00的零字节数据，可以使用 %s 格式输出字符串</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%d byte string is &#39;%s&#39;&quot;</span><span class="p">,</span> <span class="p">[</span><span class="n">data</span> <span class="n">length</span><span class="p">],</span> <span class="p">[</span><span class="n">data</span> <span class="n">bytes</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//输出结果：`30 byte string is &#39;Hi there, this is a C string!&#39;`</span>
</span></code></pre></td></tr></table></div></figure>


<p>NSMutableData</p>

<h3>15.1.3 写入和读取属性列表</h3>

<blockquote><p>在操作系统中，有许多属性列表文件和系统配置文件，如主目录 Library/Preference 下的所有首选项文件和 /System/Library/LaunchDaemons 下的系统配置文件。有些属性列表文件（特别是首选项文件）是以二进制格式存储的。通过使用 plutil 命令：plutil -convert xml1 filename.plist，可以将这些文件转换成可读形式。</p></blockquote>

<h2>15.2 编码对象</h2>

<p>采用 NSCoding 协议和实现方法来编码和解码对象：将大量对象转换成 NSData 类，保存到磁盘中，并在以后读取它，通过 NSData 类，重新创建对象。</p>

<h1>16 键/值编码</h1>

<p>键/值编码（KVC）是一种间接更改对象状态的方式，其实现方法是使用字符串描述要更改的对象状态部分。Cocoa 的一些特性，如 Core Data 或 Cocoa Bindings 在基础机制中包含了 KVC。</p>

<h2>16.1 入门项目</h2>

<h2>16.2 KVC 简介</h2>

<p>键/值编码中的基本调用包括 -valueForKey: 和 -setValue:forKey:。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">[</span><span class="n">car</span> <span class="nl">setValue:</span> <span class="s">@&quot;Haroid&quot;</span> <span class="nl">forKey:</span> <span class="s">@&quot;name&quot;</span><span class="p">];</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">name</span> <span class="o">=</span> <span class="p">[</span><span class="n">car</span> <span class="nl">valueForKey:</span> <span class="s">@&quot;name&quot;</span><span class="p">];</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">name</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>-valueForKey: 首先查找以键 -key 或 -isKey 命名的 getter 方法，对于这类调用 valueForKey: 查找 -name。如果不存在 getter 方法，它将在对象内部查找名为 <em>key 或 key 的实例变量，如果没有通过 @synthesize 提供存取方法，valueForKey 将会查找实例变量 </em>name 和 name。</p>

<ul>
<li><p>-valueForKey 在 Objective-C 运行时使用元数据打开对象并进入其中查找需要的信息，在 C 或 C++ 中不能执行这种操作。通过 KVC ，可以获取不存在 getter 方法的对象值，无需通过对象指针直接访问实例变量。</p></li>
<li><p>对于 KVC，Cocoa 自动放入和取出标量值。仅 KVC 具有这种自动包装功能。</p></li>
</ul>


<p>-setValue:forKey: 工作方法同 -valueForKey: 类似，首先查找名称的 setter 方法，如果不存在 setter 方法，它将再类中查找 key 或 _key 的实例变量，然后为其赋值。</p>

<blockquote><p>编译器和苹果公司都以下划线开头的形式保存实例变量名称，如果你尝试在其他地方使用下划线，可能会出现严重的错误。这条规则实际上不是强制的，但如果不遵守它，可能会遇到某些风险。</p></blockquote>

<h2>16.3 路径</h2>

<p>除了通过键设置值外，键/值编码还支持指定键路径，你可以遵循一定关系来指定该路径。路径可以指定以圆点分隔不同属性名称。例如：“engine.horsepower”。</p>

<h2>16.4 整体操作</h2>

<p>关于 KVC 非常棒的一点是，如果向 NSArray 请求一个键值，它实际上会查询数组中的每个对象来查找这个键值，然后将查询结果打包到另一个数组中并返回给你。这种方法也适用于通过键路径访问的对象内部的数组。</p>

<p>在 KVC 中，通常认为嵌入到其他对象中的 NSArray 具有一对多的关系。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSArray</span> <span class="o">*</span><span class="n">pressures</span> <span class="o">=</span> <span class="p">[</span><span class="n">car</span> <span class="nl">valueForKeyPath:</span> <span class="s">@&quot;tires.pressure&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 不能在键路径中为这些数组添加索引，例如，“tires[0].pressure” 是错误的。</span>
</span></code></pre></td></tr></table></div></figure>


<p>键路径不仅能引用对象值，还可以引用一些运算符来进行一些计算，例如获取一组值的平均值或返回这组值中的最小值和最大值。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSNumber</span> <span class="o">*</span><span class="n">count</span><span class="p">;</span>
</span><span class='line'><span class="c1">// 计算汽车的数量，键路径 “cars.@count” 拆开，cars用于获取cars属性，它是 garage 的 NSArray 类型的值。@count 用于通知 KVC 机制计算键路径左侧的结果。</span>
</span><span class='line'><span class="n">count</span> <span class="o">=</span> <span class="p">[</span><span class="n">garage</span> <span class="nl">valueForKeyPath:</span> <span class="s">@&quot;cars.@count&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSNumber</span> <span class="o">*</span><span class="n">sum</span><span class="p">;</span>
</span><span class='line'><span class="c1">// 计算某些特定值的总和，例如，车队行驶的总英里数</span>
</span><span class='line'><span class="n">sum</span> <span class="o">=</span> <span class="p">[</span><span class="n">garage</span> <span class="nl">valueForKeyPath:</span> <span class="s">@&quot;cars.@sum.mileage&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSNumber</span> <span class="o">*</span><span class="n">avgMileage</span><span class="p">;</span>
</span><span class='line'><span class="c1">// 计算平均每辆汽车行驶的距离</span>
</span><span class='line'><span class="n">avgMileage</span> <span class="o">=</span> <span class="p">[</span><span class="n">garage</span> <span class="nl">valueForKeyPath:</span> <span class="s">@&quot;cars.@avg.mileage&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// @min、@max</span>
</span><span class='line'><span class="n">NSNumber</span> <span class="o">*</span><span class="n">min</span><span class="p">,</span> <span class="o">*</span><span class="n">max</span><span class="p">;</span>
</span><span class='line'><span class="n">min</span> <span class="o">=</span> <span class="p">[</span><span class="n">garage</span> <span class="nl">valueForKeyPath:</span> <span class="s">@&quot;cars.@min.mileage&quot;</span><span class="p">];</span>
</span><span class='line'><span class="n">max</span> <span class="o">=</span> <span class="p">[</span><span class="n">garage</span> <span class="nl">valueForKeyPath:</span> <span class="s">@&quot;cars.@max.mileage&quot;</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>KVC 能非常轻松的处理集合。但是 KVC 需要通过解析字符串来计算你所需要的答案，因此速度比较慢；编译器无法对它进行错误检查，当你使用错误的键路径时，会出现运行时错误。</p></blockquote>

<h2>16.6 nil值处理</h2>

<h2>16.7 处理未定义的键</h2>

<p>如果 KVC 机制无法找到键路径的处理方式，默认实现会取消操作。但我们可以通过更改默认行为来处理这种情况。valueForUndefinedKey: 方法或 setValue:forUndefinedKey: 方法。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">@interface</span> <span class="nc">Garage</span> : <span class="nc">NSObject</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSString</span> <span class="o">*</span><span class="n">name</span><span class="p">;</span>
</span><span class='line'>    <span class="n">NSMutableArray</span> <span class="o">*</span><span class="n">cars</span><span class="p">;</span>
</span><span class='line'>    <span class="n">NSMutableDictionary</span> <span class="o">*</span><span class="n">stuff</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// ... 其他代码</span>
</span><span class='line'><span class="k">@end</span>    <span class="c1">// Garage</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 在实现中添加 valueForUndefinedKey: 及 setValue:forUndefinedKey: 方法</span>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nl">setValue:</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span> <span class="n">value</span> <span class="nl">forUndefinedKey:</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span> <span class="n">key</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">stuff</span> <span class="o">==</span> <span class="nb">nil</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">stuff</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSMutableDictionary</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="p">[</span><span class="n">stuff</span> <span class="nl">setValue:</span> <span class="n">value</span> <span class="nl">forKey:</span> <span class="n">key</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>   <span class="c1">// setValueForUndefinedKey</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span> <span class="nl">valueForUndefinedKey:</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span> <span class="n">key</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">id</span> <span class="n">value</span> <span class="o">=</span> <span class="p">[</span><span class="n">stuff</span> <span class="nl">valueForKey:</span> <span class="n">key</span><span class="p">];</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="n">value</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>   <span class="c1">// valueForUndefinedKey</span>
</span></code></pre></td></tr></table></div></figure>


<h1>17 NSPredicate</h1>

<p>Cocoa 用 NSPredicate 类描述查询方式</p>

<h2>17.1 创建谓词</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// 创建谓词，</span>
</span><span class='line'><span class="n">NSPredicate</span> <span class="o">*</span><span class="n">predicate</span><span class="p">;</span>
</span><span class='line'><span class="n">predicate</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSPredicate</span> <span class="nl">predicateWithFormat:</span> <span class="s">@&quot;name == &#39;Herbie&#39;&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 计算谓词</span>
</span><span class='line'><span class="kt">BOOL</span> <span class="n">match</span> <span class="o">=</span> <span class="p">[</span><span class="n">predicate</span> <span class="nl">evaluateWithObject:</span> <span class="n">car</span><span class="p">];</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%s&quot;</span><span class="p">,</span> <span class="p">(</span><span class="n">match</span><span class="p">)</span> <span class="o">?</span> <span class="s">&quot;YES&quot;</span> <span class="o">:</span> <span class="s">&quot;NO&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>17.2 燃料过滤器</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSArray</span> <span class="o">*</span><span class="n">results</span><span class="p">;</span>
</span><span class='line'><span class="c1">// 返回符合条件的car</span>
</span><span class='line'><span class="n">results</span> <span class="o">=</span> <span class="p">[</span><span class="n">cars</span> <span class="nl">filteredArrayUsingPredicate:</span> <span class="n">predicate</span><span class="p">];</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">results</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>使用谓词确实很便捷，但它的运行速度不会比你自己编写全部代码快。因为它无法避免在所有汽车之间使用循环和对每辆汽车进行某些操作。一般来说，这种循环不会带来很大的性能影响，因为当今的计算机运行速度非常快。可以继续编写尽可能简易的代码。如果你遇到速度问题，可以使用苹果公司的工具（如 Shark 或 Instruments）测试程序性能。</p>

<h2>17.3 格式说明符</h2>

<p>可以在谓词中使用格式说明符 %d、%f、%@（指定值）或 %K（指定键路径）。或者直接将变量名放入字符串 $NAME 来指定值。</p>

<h2>17.4 运算符</h2>

<h3>17.4.1 比较和逻辑运算符</h3>

<p>谓词字符串语法支持 C 语言中的一些常用运算符。例如： ==、=、>、>= 或 =>、&lt;、&lt;= 或 =&lt;、!= 或 &lt;>、括号表达式、AND、OR、NOT 逻辑运算符或C样式的等效表达式 &amp;&amp;、|| 和 !。</p>

<p>谓词字符串中运算符不区分大小写。</p>

<h3>17.4.2 数组运算符</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">predicate</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSPredicate</span> <span class="nl">predicateWithFormat:</span> <span class="s">@&quot;engine.horsepower BETWEEN {50, 200}&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">predicate</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSPredicate</span> <span class="nl">predicateWithFormat:</span> <span class="s">@&quot;name IN {&#39;Herbie&#39;, &#39;Snugs&#39;, &#39;Badger&#39;, &#39;Flap&#39;}&quot;</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<h2>17.5 SELF</h2>

<p>SELF 可以引用用于谓词计算的对象</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">predicate</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSPredicate</span> <span class="nl">predicateWithFormat:</span> <span class="s">@&quot;SELF.name IN {&#39;Herbie&#39;, &#39;Snugs&#39;, &#39;Badger&#39;, &#39;Flap&#39;}&quot;</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<h2>17.6 字符串运算符</h2>

<p>BEGINSWITH：某个字符串是否以另外一个字符串开头；ENDSWITH：某个字符串是否以另外一个字符串结尾；CONTAINS：某个字符串是否在另一个字符串内部。</p>

<p>以上运算符可增加 [c] 不区分大小写、[d] 不区分发音符号、[cd] 既不区分大小写又不区分发音符号 等修饰符</p>

<h2>17.7 LIKE 运算符</h2>

<h2>17.8 MATCHES 正则运算符</h2>

<h2>相关术语</h2>

<ul>
<li><p><em>类</em> 是一种结构，它表示对象的类型。对象引用类来获取和自身相关的各种信息。Objective-C 编程风格建议开发人员使用首字母大写的类名。</p></li>
<li><p><em>对象</em> 是一种结构，它包含值和指向其类的隐藏指针。引用对象的 Objective-C 变量通常不需要首字母大写。</p></li>
<li><p><em>消息</em> 是对象可以执行的操作，用于通知对象去做什么。在 [shape draw] 代码中，通过向 shape 对象发送 draw 消息来通知对象绘制自身。对象接收消息后，将查询对应的类，以便查找正确的代码来运行。</p></li>
<li><p><em>方法</em> 是为响应消息而运行的代码。根据对象的类，消息（例如 draw）可以调用不同的方法。</p></li>
<li><p><em>方法调度程序</em> 是 Objective-C 使用的一种机制，用于推测执行什么方法以响应某个特定得消息。</p></li>
<li><p><em>接口</em> 是对象的类应该提供的特性的描述。接口不提供具体的实现细节。</p></li>
<li><p><em>实现</em> 是使接口正常工作的代码。</p></li>
<li><p><em>实例化（instantiation）</em> 根据类信息进行内存分配和初始化，创建一个新的对象实例。</p></li>
<li><p><em>继承</em> 定义一个具有父类所有功能的新类，它继承了父类的这些功能。</p></li>
<li><p><em>复合</em> 在复合中，对象可以引用其他对象。例如汽车对象可以引用轮胎对象。</p></li>
<li><p><em>重构</em>。</p></li>
<li><p><em>超类（superclass）</em>、<em>父类（parentclass）</em>、<em>子类（subclass）</em>、<em>子类（childclass）</em>。</p></li>
<li><p><em>委托（delegate）</em> 是一种对象，另一个类的对象会要求委托对象执行它的某些操作。</p></li>
<li><p><em>非正式协议</em>。</p></li>
<li><p><em>正式协议（formal protocol）</em>。</p></li>
<li><p><em>.xib 文件</em> .xib 文件是 XML 格式的 nib 文件。在编译时，.xib文件将编译为nib格式。</p></li>
<li><p><em>编码（序列化）</em>、<em>解码（反序列化）</em>。</p></li>
</ul>


<blockquote><ul>
<li>书名《Learn Objective-C on the Mac》Objective-C 基础教程</li>
<li>高朝勤 杨越 刘霞 等译，人民邮电出版社</li>
<li><p>2009年8月第一版</p></li>
<li><p><strong>这本书写得或者是翻译得很差。</strong></p></li>
</ul>
</blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[本博客 Markdown 语法测试]]></title>
    <link href="http://blog.longgen.me/blog/2014/03/23/markdown-yu-fa-ce-shi/"/>
    <updated>2014-03-23T15:18:12+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/03/23/markdown-yu-fa-ce-shi</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt;&gt; 仅支持六级标题（pre code效果）
</span><span class='line'>
</span><span class='line'># 1. 一级标题
</span><span class='line'>
</span><span class='line'>## 1.1. 二级标题
</span><span class='line'>
</span><span class='line'>### 1.1.1. 三级标题
</span><span class='line'>
</span><span class='line'>#### 1.1.1.1. 四级标题
</span><span class='line'>
</span><span class='line'>##### 1.1.1.1.1. 五级标题
</span><span class='line'>
</span><span class='line'>###### 1.1.1.1.1.1. 六级标题</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<h1>1. 一级标题</h1>

<h2>1.1. 二级标题</h2>

<h3>1.1.1. 三级标题</h3>

<h4>1.1.1.1. 四级标题</h4>

<h5>1.1.1.1.1. 五级标题</h5>

<h6>1.1.1.1.1.1. 六级标题</h6>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt;&gt; 列表
</span><span class='line'>
</span><span class='line'>无序列表可以用 - + * 三种写法
</span><span class='line'>
</span><span class='line'>- 减号1
</span><span class='line'>
</span><span class='line'>- 减号2
</span><span class='line'>
</span><span class='line'>+ 加号1
</span><span class='line'>
</span><span class='line'>+ 加号2
</span><span class='line'>
</span><span class='line'>* 星号1
</span><span class='line'>
</span><span class='line'>* 星号2
</span><span class='line'>
</span><span class='line'>有序列表用数字表示，序号错了会被自动识别，输出会纠正
</span><span class='line'>
</span><span class='line'>1. 数字1
</span><span class='line'>
</span><span class='line'>2. 数字2
</span><span class='line'>
</span><span class='line'>4. 数字4
</span><span class='line'>
</span><span class='line'>3. 数字3
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        /* 列表中两次缩进形成的代码块 */
</span><span class='line'>
</span><span class='line'>        var a = 2;
</span><span class='line'>
</span><span class='line'>        var b = 4;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>列表之间可以有空行，不过 html 等处理稍有不同
</span><span class='line'>列表中得文字可以断行，建议换缩进更美观，不缩进也可以
</span><span class='line'>列表中的文字还允许有空行，至少段首要一个缩进
</span><span class='line'>列表中也可以放代码块，需要两个缩进</span></code></pre></td></tr></table></div></figure>


<p>无序列表可以用 &ndash; + * 三种写法</p>

<ul>
<li><p>减号1</p></li>
<li><p>减号2</p></li>
<li><p>加号1</p></li>
<li><p>加号2</p></li>
<li><p>星号1</p></li>
<li><p>星号2</p></li>
</ul>


<p>有序列表用数字表示，序号错了会被自动识别，输出会纠正</p>

<ol>
<li><p>数字1</p></li>
<li><p>数字2</p></li>
<li><p>数字4</p></li>
<li><p>数字3</p>

<pre><code> /* 列表中两次缩进形成的代码块 */

 var a = 2;

 var b = 4;
</code></pre></li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt;&gt; 分割线用三个以上的减号或分割线表示，行内不能有空格以外的其他字符
</span><span class='line'>
</span><span class='line'>---
</span><span class='line'>
</span><span class='line'>***</span></code></pre></td></tr></table></div></figure>


<hr />

<hr />

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt;&gt; 强调
</span><span class='line'>
</span><span class='line'>*em 效果*
</span><span class='line'>
</span><span class='line'>**strong 效果**
</span><span class='line'>
</span><span class='line'>_em 效果_
</span><span class='line'>
</span><span class='line'>__strong 效果__</span></code></pre></td></tr></table></div></figure>


<p><em>em 效果</em></p>

<p><strong>strong 效果</strong></p>

<p><em>em 效果</em></p>

<p><strong>strong 效果</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt;&gt; 代码效果
</span><span class='line'>
</span><span class='line'>行内代码`var a = 1`
</span><span class='line'>
</span><span class='line'>要在代码里包含反引号，你可以使用多个反引号引起来这段代码：``There is a literal backtick (`) here.``
</span><span class='line'>
</span><span class='line'>```javascript
</span><span class='line'>
</span><span class='line'>    /* 代码块 */
</span><span class='line'>    var a = 1;
</span><span class='line'>
</span><span class='line'>    var b = 2;
</span><span class='line'>
</span><span class='line'>    var c = function(a, b){
</span><span class='line'>        return a + b;
</span><span class='line'>    };
</span><span class='line'>
</span><span class='line'>    c(a, b);
</span><span class='line'>
</span><span class='line'>```</span></code></pre></td></tr></table></div></figure>


<p>行内代码<code>var a = 1</code></p>

<p>要在代码里包含反引号，你可以使用多个反引号引起来这段代码：<code>There is a literal backtick (`) here.</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/* 代码块 */</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">c</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">){</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">a</span> <span class="o">+</span> <span class="nx">b</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&gt;&gt;</span> <span class="nx">Markdown</span> <span class="err">用表示链接相同的语法来表示图片，有两种方式：内联和参考。</span>
</span><span class='line'>
</span><span class='line'><span class="err">内联语法</span>
</span><span class='line'>
</span><span class='line'><span class="err">这是</span> <span class="nx">Google</span><span class="o">+</span> <span class="err">的图标</span><span class="o">!</span><span class="p">[</span><span class="nx">Google</span><span class="o">+</span><span class="p">](</span><span class="nx">http</span><span class="o">:</span><span class="c1">//www.google.com/images/icons/ui/gprofile_button-32.png)</span>
</span><span class='line'>
</span><span class='line'><span class="o">!</span><span class="p">[</span><span class="nx">Google</span><span class="o">+</span><span class="p">](</span><span class="nx">http</span><span class="o">:</span><span class="c1">//www.google.com/images/icons/ui/gprofile_button-32.png &#39;标题&#39;)</span>
</span><span class='line'>
</span><span class='line'><span class="err">参考语法</span>
</span><span class='line'>
</span><span class='line'><span class="err">这是</span> <span class="nx">Google</span><span class="o">+</span> <span class="err">的图标</span><span class="o">!</span><span class="p">[</span><span class="nx">Google</span><span class="o">+</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="o">!</span><span class="p">[</span><span class="nx">Google</span><span class="o">+</span><span class="p">][</span><span class="mi">2</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span> <span class="nx">http</span><span class="o">:</span><span class="c1">//www.google.com/images/icons/ui/gprofile_button-32.png</span>
</span><span class='line'><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">:</span> <span class="nx">http</span><span class="o">:</span><span class="c1">//www.google.com/images/icons/ui/gprofile_button-32.png &#39;标题&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>内联语法</p>

<p>这是 Google+ 的图标<img src="http://www.google.com/images/icons/ui/gprofile_button-32.png" alt="Google+" /></p>

<p><img src="http://www.google.com/images/icons/ui/gprofile_button-32.png" title="标题" alt="Google+" /></p>

<p>参考语法</p>

<p>这是 Google+ 的图标<img src="http://www.google.com/images/icons/ui/gprofile_button-32.png" alt="Google+" /></p>

<p><img src="http://www.google.com/images/icons/ui/gprofile_button-32.png" title="标题" alt="Google+" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&gt;&gt;</span> <span class="err">链接及邮件</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">http</span><span class="o">:</span><span class="c1">//example.com/&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">address</span><span class="err">@</span><span class="nx">example</span><span class="p">.</span><span class="nx">com</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://example.com/">http://example.com/</a></p>

<p><a href="&#109;&#x61;&#x69;&#108;&#x74;&#x6f;&#x3a;&#97;&#100;&#x64;&#x72;&#101;&#x73;&#x73;&#x40;&#x65;&#x78;&#97;&#109;&#112;&#x6c;&#x65;&#x2e;&#x63;&#x6f;&#x6d;">&#x61;&#100;&#100;&#114;&#x65;&#115;&#x73;&#64;&#x65;&#120;&#x61;&#109;&#112;&#x6c;&#101;&#46;&#x63;&#x6f;&#x6d;</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&gt;&gt;</span> <span class="err">反斜线转义</span> <span class="nx">Markdown</span> <span class="err">中的特殊字符</span>
</span><span class='line'>
</span><span class='line'><span class="err">\</span><span class="nx">as</span> <span class="err">普通字符不转义</span>
</span><span class='line'>
</span><span class='line'><span class="err">\</span><span class="o">*</span><span class="nx">literal</span> <span class="nx">asterisks</span><span class="err">\</span><span class="o">*</span>
</span><span class='line'>
</span><span class='line'><span class="err">\\</span> <span class="nx">backslash</span>
</span><span class='line'>
</span><span class='line'><span class="err">\`</span>   <span class="nx">backtick</span>
</span><span class='line'>
</span><span class='line'><span class="err">\</span><span class="o">*</span>   <span class="nx">asterisk</span>
</span><span class='line'>
</span><span class='line'><span class="err">\</span><span class="nx">_</span>   <span class="nx">underscore</span>
</span><span class='line'>
</span><span class='line'><span class="err">\</span><span class="p">{</span><span class="err">\</span><span class="p">}</span>  <span class="nx">curly</span> <span class="nx">braces</span>
</span><span class='line'>
</span><span class='line'><span class="err">\</span><span class="p">[</span><span class="err">\</span><span class="p">]</span>  <span class="nx">square</span> <span class="nx">brackets</span>
</span><span class='line'>
</span><span class='line'><span class="err">\</span><span class="p">(</span><span class="err">\</span><span class="p">)</span>  <span class="nx">parentheses</span>
</span><span class='line'>
</span><span class='line'><span class="err">\#</span>   <span class="nx">hash</span> <span class="nx">mark</span>
</span><span class='line'>
</span><span class='line'><span class="err">\</span><span class="o">+</span>   <span class="nx">plus</span> <span class="nx">sign</span>
</span><span class='line'>
</span><span class='line'><span class="err">\</span><span class="o">-</span>   <span class="nx">minus</span> <span class="nx">sign</span> <span class="p">(</span><span class="nx">hyphen</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="err">\</span><span class="p">.</span>   <span class="nx">dot</span>
</span><span class='line'>
</span><span class='line'><span class="err">\</span><span class="o">!</span>   <span class="nx">exclamation</span> <span class="nx">mark</span>
</span></code></pre></td></tr></table></div></figure>


<p>\as 普通字符不转义</p>

<p>*literal asterisks*</p>

<p>\ backslash</p>

<p>`   backtick</p>

<p>*   asterisk</p>

<p>_   underscore</p>

<p>{}  curly braces</p>

<p>[]  square brackets</p>

<p>()  parentheses</p>

<p>-   minus sign (hyphen)</p>

<p>+   plus sign</p>

<p>#   hash mark</p>

<p>.   dot</p>

<p>!   exclamation mark</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac OS X 下 Octopress + GitHub Pages 发布博客]]></title>
    <link href="http://blog.longgen.me/blog/2014/03/19/mac-os-x-xia-octopress-plus-github-pages-fa-bu-bo-ke/"/>
    <updated>2014-03-19T23:22:03+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/03/19/mac-os-x-xia-octopress-plus-github-pages-fa-bu-bo-ke</id>
    <content type="html"><![CDATA[<h1>前言</h1>

<h2>优点</h2>

<ul>
<li>广泛的使用者及相关文档</li>
<li>Octopress 整合了丰富的第三方插件</li>
<li>内置支持 Gitub、Twitter、Google Plus One、Pinboard、Delicious、Disqus Comments、Google Analytics、Facebook</li>
<li>源码版本信息完全自己通过 github 控制，可定制高度个性化的个人博客</li>
</ul>


<!-- more -->


<h2>官方文档</h2>

<h2>相关资源</h2>

<h1>安装及配置</h1>

<h2>Git 安装</h2>

<h2>Ruby 安装，版本号要求大于1.9.3</h2>

<ul>
<li>通过 <a href="http://octopress.org/docs/setup/rbenv">rbenv</a> 或者 <a href="http://octopress.org/docs/setup/rvm">RVM</a> 安装。</li>
</ul>


<h2>设置 Octopress</h2>

<ul>
<li>从 git 复制 Octopress</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'><span class="nb">cd </span>octopress
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>下一步，安装依赖</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>gem install bundler     <span class="c"># 若报权限错误，加 sudo 执行相关命令</span>
</span><span class='line'>rbenv rehash            <span class="c"># If you use rbenv, rehash to be able to run the bundle command</span>
</span><span class='line'>bundle install
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>安装 Octopress 默认主题</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake install    <span class="c"># 由于默认主题名为“classic” 该命令等效于：rake install[&#39;classic‘]</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>或者安装<a href="https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes">第三方主题</a></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd </span>octopress
</span><span class='line'>git clone GIT_URL .themes/THEME_NAME
</span><span class='line'>rake install<span class="o">[</span><span class="s1">&#39;THEME_NAME&#39;</span><span class="o">]</span>
</span><span class='line'>rake generate
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Octopress发布在Github Pages上</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake setup_github_pages   <span class="c"># 该命令将进行一系列的 github 相关配置</span>
</span><span class='line'>rake generate             <span class="c"># This will generate your blog, copy the generated files into _deploy/</span>
</span><span class='line'>rake preview              <span class="c"># 本地预览页面，页面默认发布在 localhost:4000</span>
</span><span class='line'>rake deploy               <span class="c"># dd them to git, commit and push them up to the master branch</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>将 octopress 目录下所有代码提交到 source 分支</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git add .
</span><span class='line'>git commit -m <span class="s1">&#39;源码提交&#39;</span>
</span><span class='line'>git push origin <span class="nb">source</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>自定义域名</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">echo</span> <span class="s1">&#39;your-domain.com&#39;</span> &gt;&gt; <span class="nb">source</span>/CNAME
</span><span class='line'><span class="c"># 或者</span>
</span><span class='line'><span class="nb">echo</span> <span class="s1">&#39;www.your-domain.com&#39;</span> &gt;&gt; <span class="nb">source</span>/CNAME
</span><span class='line'><span class="c"># 然后，你必须访问你得域名注册商或者 DNS 主机，为你的域名增加一个 record</span>
</span><span class='line'><span class="c"># 注意最好不要使用顶级域名作为 CNAME，另外，DNS 解析生效需要比较长的时间</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>按规范<a href="http://octopress.org/docs/blogging/">发布文章</a>，新发布文章的默认扩展名是 markdown，你可以在 Rakefile 文件中更改扩展名</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake new_post<span class="o">[</span><span class="s2">&quot;title&quot;</span><span class="o">]</span>                    <span class="c"># 按规范发布文章，并且为文章自动生成 yaml metadata</span>
</span><span class='line'>rake new_page<span class="o">[</span>super-awesome<span class="o">]</span>              <span class="c"># 创建 /source/super-awesome/index.markdown</span>
</span><span class='line'>rake new_page<span class="o">[</span>super-awesome/page.html<span class="o">]</span>    <span class="c"># 创建 /source/super-awesome/page.html</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="http://octopress.org/docs/updating/">远程更新至本地</a></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git pull octopress master     <span class="c"># Get the latest Octopress</span>
</span><span class='line'>bundle install                <span class="c"># Keep gems updated</span>
</span><span class='line'>rake update_source            <span class="c"># update the template&#39;s source</span>
</span><span class='line'>rake update_style             <span class="c"># update the template&#39;s style</span>
</span><span class='line'><span class="c"># rake update命令相当于以上rake update_source和rake update_style 两个命令合并执行(该命令无效？？？)</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
