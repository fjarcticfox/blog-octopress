<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[分类：homebrew | 逆水行舟]]></title>
  <link href="http://blog.longgen.me/blog/categories/homebrew/atom.xml" rel="self"/>
  <link href="http://blog.longgen.me/"/>
  <updated>2014-08-14T11:20:04+08:00</updated>
  <id>http://blog.longgen.me/</id>
  <author>
    <name><![CDATA[Longgen]]></name>
    <email><![CDATA[fjarcticfox@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Homebrew 命令详解]]></title>
    <link href="http://blog.longgen.me/blog/2014/07/20/homebrew-ming-ling-xiang-jie/"/>
    <updated>2014-07-20T16:31:49+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/07/20/homebrew-ming-ling-xiang-jie</id>
    <content type="html"><![CDATA[<p>Homebrew 是 OS X 上的 package 管理工具，用于添加 OS X 中缺失的 package。</p>

<!-- more -->


<h2>获取 Homebrew</h2>

<p>```sh</p>

<h1>打开终端窗口, 执行以下脚本。</h1>

<p>$ ruby -e &ldquo;$(curl -fsSL <a href="https://raw.github.com/Homebrew/homebrew/go/install">https://raw.github.com/Homebrew/homebrew/go/install</a>)&rdquo;</p>

<h1>脚本会解释它的作用，然后在您的确认下执行安装。高级安装选项请看 <a href="https://github.com/Homebrew/homebrew/wiki/Installation">这里</a>（需要10.5）。</h1>

<p>```</p>

<h2>使用命令</h2>

<p>```sh</p>

<h1>Homebrew installs <a href="https://github.com/Homebrew/homebrew/tree/master/Library/Formula">the stuff you need</a> that Apple didn’t.</h1>

<p>$ brew install wget</p>

<p>```</p>

<h2>安装目录</h2>

<p>Homebrew 会将 packages 安装到独立目录，然后 symlinks 其中文件到目录 <code>/usr/local</code>.</p>

<p>```sh</p>

<p>$ cd /usr/local
$ find Cellar
Cellar/wget/1.15
Cellar/wget/1.15/bin/wget
Cellar/wget/1.15/share/man/man1/wget.1</p>

<p>$ ls -l bin
bin/wget &ndash;> ../Cellar/wget/1.15/bin/wget</p>

<p>```</p>

<p>Homebrew 的所有文件均会被安装到预定义目录下，另外，你可以将 Homebrew 的安装目录设置在你喜欢的任何地方。</p>

<h2>创建自己的 Homebrew 上的 packages</h2>

<p>```sh</p>

<p>$ brew create <a href="http://foo.com/bar-1.0.tgz">http://foo.com/bar-1.0.tgz</a>
Created /usr/local/Library/Formula/bar.rb</p>

<p>```</p>

<h2>维护自己的 packages</h2>

<p>Homebrew 基于 git、ruby，所以依据掌握的知识，你可以便捷的撤回你的修改或者合并上游的更新。</p>

<p>```sh</p>

<h1>打开编辑</h1>

<p>$ brew edit wget # opens in $EDITOR!</p>

<p>```</p>

<p>Homebrew 的 formulae 都是简单的 Ruby 脚本。</p>

<p>```sh</p>

<p>require &ldquo;formula&rdquo;</p>

<p>class Wget &lt; Formula
  homepage &ldquo;<a href="http://www.gnu.org/software/wget/">http://www.gnu.org/software/wget/</a>&rdquo;
  url &ldquo;<a href="http://ftp.gnu.org/gnu/wget/wget-1.15.tar.gz">http://ftp.gnu.org/gnu/wget/wget-1.15.tar.gz</a>&rdquo;
  sha1 &ldquo;f3c925f19dfe5ed386daae4f339175c108c50574&rdquo;</p>

<p>  def install</p>

<pre><code>system "./configure", "--prefix=#{prefix}"
system "make", "install"
</code></pre>

<p>  end
end</p>

<p>```</p>

<p>Homebrew 使 OS X 更完美。使用 gem 来安装 gems、用 brew 来搞定那些依赖包。</p>

<h2>参考资料</h2>

<ol>
<li><a href="http://brew.sh/index.html">Homebrew &mdash; The missing package manager for OS X</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pow 安装配置及使用]]></title>
    <link href="http://blog.longgen.me/blog/2014/03/29/pow-an-zhuang-pei-zhi-ji-shi-yong/"/>
    <updated>2014-03-29T01:48:36+08:00</updated>
    <id>http://blog.longgen.me/blog/2014/03/29/pow-an-zhuang-pei-zhi-ji-shi-yong</id>
    <content type="html"><![CDATA[<p>Pow，Mac OS X 上零配置的 Rack Server。它使得开发 Rails 及 Rack 应用更为简便。</p>

<!-- more -->


<ul>
<li>官网：<a href="http://pow.cx/">http://pow.cx/</a></li>
<li>Homebrew 的 GitHub 源码：<a href="https://github.com/Homebrew/homebrew">https://github.com/Homebrew/homebrew</a></li>
<li>Pow 的 GitHub 源码：<a href="https://github.com/basecamp/pow">https://github.com/basecamp/pow</a></li>
<li>Pow 文档说明：<a href="http://pow.cx/manual.html">http://pow.cx/manual.html</a></li>
<li>Pow 安装说明：<a href="https://github.com/basecamp/pow/wiki/Installation">https://github.com/basecamp/pow/wiki/Installation</a></li>
<li>Pow 常见错误解决办法：<a href="https://github.com/basecamp/pow/wiki/Troubleshooting">https://github.com/basecamp/pow/wiki/Troubleshooting</a></li>
</ul>


<h2>通过官方包安装（<strong>推荐方式</strong>）</h2>

<p>```sh</p>

<pre><code>curl get.pow.cx | sh
</code></pre>

<p>```</p>

<h2>通过源码安装</h2>

<p>```sh</p>

<pre><code># 若未安装node 先安装node
brew install node
# clone 源码
git clone git@github.com:basecamp/pow.git
cd pow
npm --global install
npm --global run-script pow restart
# 若你希望在每次登陆时都通过 launchd 启动 Pow 则 
launchctl load -Fw "$HOME/Library/LaunchAgents/cx.pow.powd.plist"
</code></pre>

<p>```</p>

<h2>Homebrew 安装及配置</h2>

<p>```sh</p>

<pre><code># 安装 pow
brew install pow
# 根据 Caveats 配置相关目录
mkdir -p ~/Library/Application\ Support/Pow/Hosts
# 创建软链接，若 ~/.pow 目录不存在，则先mkdir ~/.pow
ln -s ~/Library/Application\ Support/Pow/Hosts ~/.pow

# Setup port 80 forwarding and launchd agents:
sudo pow --install-system
pow --install-local

# Load launchd agents:
sudo launchctl load -w /Library/LaunchDaemons/cx.pow.firewall.plist
launchctl load -w ~/Library/LaunchAgents/cx.pow.powd.plist
</code></pre>

<p>```</p>

<h2>使用方法</h2>

<p>```sh</p>

<h1>执行以下链接命令，之后可以用 <code>http://myapp.dev/</code> 地址访问该项目</h1>

<p>cd ~/.pow
$ ln -s ~/Projects/myapp</p>

<p>```</p>
]]></content>
  </entry>
  
</feed>
